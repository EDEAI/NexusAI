!(function(){"use strict";var Pe=Object.defineProperty;var re=Object.getOwnPropertySymbols;var Le=Object.prototype.hasOwnProperty,Te=Object.prototype.propertyIsEnumerable;var ie=(v,u,o)=>u in v?Pe(v,u,{enumerable:!0,configurable:!0,writable:!0,value:o}):v[u]=o,ae=(v,u)=>{for(var o in u||(u={}))Le.call(u,o)&&ie(v,o,u[o]);if(re)for(var o of re(u))Te.call(u,o)&&ie(v,o,u[o]);return v};var ce=(v,u,o)=>new Promise((w,g)=>{var b=a=>{try{m(o.next(a))}catch(f){g(f)}},y=a=>{try{m(o.throw(a))}catch(f){g(f)}},m=a=>a.done?w(a.value):Promise.resolve(a.value).then(b,y);m((o=o.apply(v,u)).next())});(self.webpackChunkant_design_pro=self.webpackChunkant_design_pro||[]).push([[1670],{39685:function(v,u,o){o.d(u,{A:function(){return g}});var w=o(32426);function g(b,y){var m,a,f;b.accDescr&&((m=y.setAccDescription)==null||m.call(y,b.accDescr)),b.accTitle&&((a=y.setAccTitle)==null||a.call(y,b.accTitle)),b.title&&((f=y.setDiagramTitle)==null||f.call(y,b.title))}(0,w.eW)(g,"populateCommonDb")},88589:function(v,u,o){o.d(u,{j:function(){return g}});var w=o(32426),g=(0,w.eW)((m,a,f,d)=>{m.attr("class",f);const{width:$,height:z,x:ee,y:te}=b(m,a);(0,w.v2)(m,z,$,d);const O=y(ee,te,$,z,a);m.attr("viewBox",O),w.cM.debug(`viewBox configured: ${O} with padding: ${a}`)},"setupViewPortForSVG"),b=(0,w.eW)((m,a)=>{var d;const f=((d=m.node())==null?void 0:d.getBBox())||{width:0,height:0,x:0,y:0};return{width:f.width+a*2,height:f.height+a*2,x:f.x,y:f.y}},"calculateDimensionsWithPadding"),y=(0,w.eW)((m,a,f,d,$)=>`${m-$} ${a-$} ${f} ${d}`,"createViewBox")},31670:function(v,u,o){var B;o.d(u,{diagram:function(){return ge}});var w=o(88589),g=o(77724),b=o(39685),y=o(8111),m=o(21749),a=o(32426),f=o(12491),d=o(3466),$=(B=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=a.GN,this.getAccTitle=a.eu,this.setDiagramTitle=a.g2,this.getDiagramTitle=a.Kr,this.getAccDescription=a.Mx,this.setAccDescription=a.U$}getNodes(){return this.nodes}getConfig(){var n;const s=a.vZ,i=(0,a.iE)();return(0,y.Rb)(ae(ae({},s.treemap),(n=i.treemap)!=null?n:{}))}addNode(s,i){var n;this.nodes.push(s),this.levels.set(s,i),i===0&&(this.outerNodes.push(s),(n=this.root)!=null||(this.root=s))}getRoot(){return{name:"",children:this.outerNodes}}addClass(s,i){var c;const n=(c=this.classes.get(s))!=null?c:{id:s,styles:[],textStyles:[]},h=i.replace(/\\,/g,"\xA7\xA7\xA7").replace(/,/g,";").replace(/§§§/g,",").split(";");h&&h.forEach(L=>{(0,g.Fh)(L)&&(n!=null&&n.textStyles?n.textStyles.push(L):n.textStyles=[L]),n!=null&&n.styles?n.styles.push(L):n.styles=[L]}),this.classes.set(s,n)}getClasses(){return this.classes}getStylesForClass(s){var i,n;return(n=(i=this.classes.get(s))==null?void 0:i.styles)!=null?n:[]}clear(){(0,a.ZH)(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}},(0,a.eW)(B,"TreeMapDB"),B);function z(S){if(!S.length)return[];const s=[],i=[];return S.forEach(n=>{const h={name:n.name,children:n.type==="Leaf"?void 0:[]};for(h.classSelector=n==null?void 0:n.classSelector,n!=null&&n.cssCompiledStyles&&(h.cssCompiledStyles=[n.cssCompiledStyles]),n.type==="Leaf"&&n.value!==void 0&&(h.value=n.value);i.length>0&&i[i.length-1].level>=n.level;)i.pop();if(i.length===0)s.push(h);else{const c=i[i.length-1].node;c.children?c.children.push(h):c.children=[h]}n.type!=="Leaf"&&i.push({node:h,level:n.level})}),s}(0,a.eW)(z,"buildHierarchy");var ee=(0,a.eW)((S,s)=>{var c,L,N,U;(0,b.A)(S,s);const i=[];for(const l of(c=S.TreemapRows)!=null?c:[])l.$type==="ClassDefStatement"&&s.addClass((L=l.className)!=null?L:"",(N=l.styleText)!=null?N:"");for(const l of(U=S.TreemapRows)!=null?U:[]){const x=l.item;if(!x)continue;const C=l.indent?parseInt(l.indent):0,X=te(x),H=x.classSelector?s.getStylesForClass(x.classSelector):[],G=H.length>0?H.join(";"):void 0,Z={level:C,name:X,type:x.$type,value:x.value,classSelector:x.classSelector,cssCompiledStyles:G};i.push(Z)}const n=z(i),h=(0,a.eW)((l,x)=>{for(const C of l)s.addNode(C,x),C.children&&C.children.length>0&&h(C.children,x+1)},"addNodesRecursively");h(n,0)},"populate"),te=(0,a.eW)(S=>S.name?String(S.name):"","getItemName"),O={parser:{yy:void 0},parse:(0,a.eW)(S=>ce(this,null,function*(){var s;try{const i=f.Qc,n=yield i("treemap",S);a.cM.debug("Treemap AST:",n);const h=(s=O.parser)==null?void 0:s.yy;if(!(h instanceof $))throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");ee(n,h)}catch(i){throw a.cM.error("Error parsing treemap:",i),i}}),"parse")},de=10,k=10,I=25,pe=(0,a.eW)((S,s,i,n)=>{var ne,oe;const h=n.db,c=h.getConfig(),L=(ne=c.padding)!=null?ne:de,N=h.getDiagramTitle(),U=h.getRoot(),{themeVariables:l}=(0,a.iE)();if(!U)return;const x=N?30:0,C=(0,m.P)(s),X=c.nodeWidth?c.nodeWidth*k:960,H=c.nodeHeight?c.nodeHeight*k:500,G=X,Z=H+x;C.attr("viewBox",`0 0 ${G} ${Z}`),(0,a.v2)(C,Z,G,c.useMaxWidth);let A;try{const e=c.valueFormat||",";if(e==="$0,0")A=(0,a.eW)(t=>"$"+(0,d.WUZ)(",")(t),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){const t=/\.\d+/.exec(e),r=t?t[0]:"";A=(0,a.eW)(_=>"$"+(0,d.WUZ)(","+r)(_),"valueFormat")}else if(e.startsWith("$")){const t=e.substring(1);A=(0,a.eW)(r=>"$"+(0,d.WUZ)(t||"")(r),"valueFormat")}else A=(0,d.WUZ)(e)}catch(e){a.cM.error("Error creating format function:",e),A=(0,d.WUZ)(",")}const K=(0,d.PKp)().range(["transparent",l.cScale0,l.cScale1,l.cScale2,l.cScale3,l.cScale4,l.cScale5,l.cScale6,l.cScale7,l.cScale8,l.cScale9,l.cScale10,l.cScale11]),Se=(0,d.PKp)().range(["transparent",l.cScalePeer0,l.cScalePeer1,l.cScalePeer2,l.cScalePeer3,l.cScalePeer4,l.cScalePeer5,l.cScalePeer6,l.cScalePeer7,l.cScalePeer8,l.cScalePeer9,l.cScalePeer10,l.cScalePeer11]),J=(0,d.PKp)().range([l.cScaleLabel0,l.cScaleLabel1,l.cScaleLabel2,l.cScaleLabel3,l.cScaleLabel4,l.cScaleLabel5,l.cScaleLabel6,l.cScaleLabel7,l.cScaleLabel8,l.cScaleLabel9,l.cScaleLabel10,l.cScaleLabel11]);N&&C.append("text").attr("x",G/2).attr("y",x/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(N);const le=C.append("g").attr("transform",`translate(0, ${x})`).attr("class","treemapContainer"),xe=(0,d.bT9)(U).sum(e=>{var t;return(t=e.value)!=null?t:0}).sort((e,t)=>{var r,_;return((r=t.value)!=null?r:0)-((_=e.value)!=null?_:0)}),se=(0,d.pNI)().size([X,H]).paddingTop(e=>e.children&&e.children.length>0?I+k:0).paddingInner(L).paddingLeft(e=>e.children&&e.children.length>0?k:0).paddingRight(e=>e.children&&e.children.length>0?k:0).paddingBottom(e=>e.children&&e.children.length>0?k:0).round(!0)(xe),_e=se.descendants().filter(e=>e.children&&e.children.length>0),j=le.selectAll(".treemapSection").data(_e).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);j.append("rect").attr("width",e=>e.x1-e.x0).attr("height",I).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>e.depth===0?"display: none;":""),j.append("clipPath").attr("id",(e,t)=>`clip-section-${s}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",I),j.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>K(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>Se(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(e.depth===0)return"display: none;";const t=(0,g.UG)({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),j.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",I/2).attr("dominant-baseline","middle").text(e=>e.depth===0?"":e.data.name).attr("font-weight","bold").attr("style",e=>{if(e.depth===0)return"display: none;";const t="dominant-baseline: middle; font-size: 12px; fill:"+J(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",r=(0,g.UG)({cssCompiledStyles:e.data.cssCompiledStyles});return t+r.labelStyles.replace("color:","fill:")}).each(function(e){if(e.depth===0)return;const t=(0,d.Ys)(this),r=e.data.name;t.text(r);const _=e.x1-e.x0,E=6;let M;c.showValues!==!1&&e.value?M=_-10-30-10-E:M=_-E-6;const T=Math.max(15,M),p=t.node();if(p.getComputedTextLength()>T){const P="...";let W=r;for(;W.length>0;){if(W=r.substring(0,W.length-1),W.length===0){t.text(P),p.getComputedTextLength()>T&&t.text("");break}if(t.text(W+P),p.getComputedTextLength()<=T)break}}}),c.showValues!==!1&&j.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",I/2).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?A(e.value):"").attr("font-style","italic").attr("style",e=>{if(e.depth===0)return"display: none;";const t="text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+J(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",r=(0,g.UG)({cssCompiledStyles:e.data.cssCompiledStyles});return t+r.labelStyles.replace("color:","fill:")});const ve=se.leaves(),Q=le.selectAll(".treemapLeafGroup").data(ve).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);Q.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?K(e.parent.data.name):K(e.data.name)).attr("style",e=>(0,g.UG)({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?K(e.parent.data.name):K(e.data.name)).attr("stroke-width",3),Q.append("clipPath").attr("id",(e,t)=>`clip-${s}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4)),Q.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>{const t="text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+J(e.data.name)+";",r=(0,g.UG)({cssCompiledStyles:e.data.cssCompiledStyles});return t+r.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,t)=>`url(#clip-${s}-${t})`).text(e=>e.data.name).each(function(e){const t=(0,d.Ys)(this),r=e.x1-e.x0,_=e.y1-e.y0,E=t.node(),M=4,R=r-2*M,T=_-2*M;if(R<10||T<10){t.style("display","none");return}let p=parseInt(t.style("font-size"),10);const F=8,P=28,W=.6,D=6,Y=2;for(;E.getComputedTextLength()>R&&p>F;)p--,t.style("font-size",`${p}px`);let V=Math.max(D,Math.min(P,Math.round(p*W))),q=p+Y+V;for(;q>T&&p>F&&(p--,V=Math.max(D,Math.min(P,Math.round(p*W))),!(V<D&&p===F));)t.style("font-size",`${p}px`),q=p+Y+V,V<=D&&q>T;t.style("font-size",`${p}px`),(E.getComputedTextLength()>R||p<F||T<p)&&t.style("display","none")}),c.showValues!==!1&&Q.append("text").attr("class","treemapValue").attr("x",t=>(t.x1-t.x0)/2).attr("y",function(t){return(t.y1-t.y0)/2}).attr("style",t=>{const r="text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+J(t.data.name)+";",_=(0,g.UG)({cssCompiledStyles:t.data.cssCompiledStyles});return r+_.labelStyles.replace("color:","fill:")}).attr("clip-path",(t,r)=>`url(#clip-${s}-${r})`).text(t=>t.value?A(t.value):"").each(function(t){const r=(0,d.Ys)(this),_=this.parentNode;if(!_){r.style("display","none");return}const E=(0,d.Ys)(_).select(".treemapLabel");if(E.empty()||E.style("display")==="none"){r.style("display","none");return}const M=parseFloat(E.style("font-size")),R=28,T=.6,p=6,F=2,P=Math.max(p,Math.min(R,Math.round(M*T)));r.style("font-size",`${P}px`);const D=(t.y1-t.y0)/2+M/2+F;r.attr("y",D);const Y=t.x1-t.x0,Ce=t.y1-t.y0-4,we=Y-2*4;r.node().getComputedTextLength()>we||D+P>Ce||P<p?r.style("display","none"):r.style("display",null)});const be=(oe=c.diagramPadding)!=null?oe:8;(0,w.j)(C,be,"flowchart",(c==null?void 0:c.useMaxWidth)||!1)},"draw"),he=(0,a.eW)(function(S,s){return s.db.getClasses()},"getClasses"),ue={draw:pe,getClasses:he},me={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},fe=(0,a.eW)(({treemap:S}={})=>{const s=(0,y.Rb)(me,S);return`
  .treemapNode.section {
    stroke: ${s.sectionStrokeColor};
    stroke-width: ${s.sectionStrokeWidth};
    fill: ${s.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${s.leafStrokeColor};
    stroke-width: ${s.leafStrokeWidth};
    fill: ${s.leafFillColor};
  }
  .treemapLabel {
    fill: ${s.labelColor};
    font-size: ${s.labelFontSize};
  }
  .treemapValue {
    fill: ${s.valueColor};
    font-size: ${s.valueFontSize};
  }
  .treemapTitle {
    fill: ${s.titleColor};
    font-size: ${s.titleFontSize};
  }
  `},"getStyles"),ye=fe,ge={parser:O,get db(){return new $},renderer:ue,styles:ye}}}]);
}());