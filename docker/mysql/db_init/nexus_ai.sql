/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

CREATE DATABASE IF NOT EXISTS `nexus_ai` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `nexus_ai`;

CREATE TABLE IF NOT EXISTS `agents` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Agent ID',
  `team_id` int NOT NULL COMMENT 'Team ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `app_id` int NOT NULL COMMENT 'App ID',
  `obligations` text COLLATE utf8mb4_general_ci COMMENT 'Agent obligations',
  `input_variables` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Input variables',
  `auto_match_ability` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Whether to automatically match abilities 0: No 1: Yes',
  `default_output_format` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Default output format 1: text 2: json 3: code',
  `model_config_id` int NOT NULL DEFAULT '0' COMMENT 'Model configuration ID',
  `allow_upload_file` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Is it allowed to upload files? 0: No 1: Yes',
  `publish_status` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Agent publish status 0: Draft 1: Published',
  `published_time` datetime DEFAULT NULL COMMENT 'Agent published time',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Agent created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Agent updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Agent status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `team_id` (`team_id`),
  KEY `status` (`status`),
  KEY `model_id` (`model_config_id`),
  KEY `app_id` (`app_id`),
  KEY `publish_status` (`publish_status`),
  CONSTRAINT `agents_chk_1` CHECK (json_valid(`input_variables`))
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Agent Data Table';

INSERT INTO `agents` (`id`, `team_id`, `user_id`, `app_id`, `obligations`, `input_variables`, `auto_match_ability`, `default_output_format`, `model_config_id`, `allow_upload_file`, `publish_status`, `published_time`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 1, 5, 'As an HR professional, you analyze the job requirements provided and retrieve the most matching resume information from the knowledge base.\n', '{"name": "input", "type": "object", "properties": {"requirement": {"name": "requirement", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "requirement"}}, "display_name": "", "to_string_keys": ""}', 1, 1, 3, 0, 0, NULL, '2024-12-02 15:47:01', '2024-12-02 17:21:52', 1),
	(2, 1, 1, 5, 'As an HR professional, you analyze the job requirements provided and retrieve the most matching resume information from the knowledge base.\n', '{"name": "input", "type": "object", "properties": {"requirement": {"name": "requirement", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "requirement"}}, "display_name": "", "to_string_keys": ""}', 1, 1, 3, 0, 1, '2024-12-02 17:21:56', '2024-12-02 16:15:12', '2024-12-02 17:21:56', 1);

CREATE TABLE IF NOT EXISTS `agent_abilities` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Ability ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `agent_id` int NOT NULL COMMENT 'Agent ID',
  `name` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Ability name',
  `content` text COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Ability content',
  `output_format` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Output format 0: defalut 1: text 2: json 3: code',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Ability created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Ability updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Ability status 1: Normal 2: Disabled 3: Deleted	',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `agent_id` (`agent_id`),
  KEY `status` (`status`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Agent Ability Data Table';

INSERT INTO `agent_abilities` (`id`, `user_id`, `agent_id`, `name`, `content`, `output_format`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 1, 'Match the most suitable resume.', 'Based on the input job requirements, calculate the resumes with the highest matching degree and return the corresponding resume information.', 0, '2024-12-02 17:21:05', '2024-12-02 17:21:53', 1),
	(2, 1, 2, 'Match the most suitable resume.', 'Based on the input job requirements, calculate the resumes with the highest matching degree and return the corresponding resume information.', 0, '2024-12-02 17:21:56', '2024-12-02 17:21:56', 1);

CREATE TABLE IF NOT EXISTS `agent_dataset_relation` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Agent dataset relation ID',
  `agent_id` int NOT NULL COMMENT 'Agent ID',
  `dataset_id` int NOT NULL COMMENT 'Dataset ID',
  PRIMARY KEY (`id`),
  UNIQUE KEY `agent_database_id` (`agent_id`,`dataset_id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Agent Dataset Relation Data Table';

INSERT INTO `agent_dataset_relation` (`id`, `agent_id`, `dataset_id`) VALUES
	(1, 1, 1),
	(2, 2, 1);

CREATE TABLE IF NOT EXISTS `apps` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'App ID',
  `team_id` int NOT NULL COMMENT 'Team ID',
  `user_id` int NOT NULL DEFAULT '0' COMMENT 'User ID',
  `name` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'App name',
  `description` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'App description',
  `icon` varchar(150) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'App icon',
  `icon_background` varchar(10) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'App icon background',
  `mode` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'App mode 1: agent 2: workflow 3: dataset 4: custom tool 5: chatroom',
  `enable_api` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Whether to enable API 0: No 1: Yes',
  `api_token` varchar(100) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'API Token',
  `is_public` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Is it open to team members? 0: No 1: Yes',
  `publish_status` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Publish status 0: Draft 1: Published',
  `execution_times` int NOT NULL DEFAULT '0' COMMENT 'App execution times',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'App created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'App updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'App status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  UNIQUE KEY `api_token` (`api_token`) USING BTREE,
  KEY `user_id` (`user_id`),
  KEY `team_id` (`team_id`),
  KEY `mode` (`mode`),
  KEY `status` (`status`),
  KEY `is_public` (`is_public`),
  KEY `publish_status` (`publish_status`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='App Data Table';

INSERT INTO `apps` (`id`, `team_id`, `user_id`, `name`, `description`, `icon`, `icon_background`, `mode`, `enable_api`, `api_token`, `is_public`, `publish_status`, `execution_times`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 1, 'File writing skill', 'This is a file writing skill', '1', '', 4, 0, NULL, 1, 1, 0, '2024-12-03 08:10:50', '2024-12-13 06:46:00', 1),
	(2, 1, 1, 'MySQL data skill', 'This is a MySQL database data processing skill', '1', '', 4, 0, NULL, 1, 1, 0, '2024-12-03 17:04:35', '2024-12-03 18:16:56', 1),
	(3, 1, 1, 'Document translation', 'Translation of Computer Software Technical Documents (English to Chinese)', '1', '', 2, 0, 'app-jIoR711sN0UaQfq3qUO3nmEjujF0ZoV1A', 1, 1, 0, '2024-12-02 15:32:58', '2024-12-14 14:13:03', 1),
	(4, 1, 1, 'Generate weekly report', 'Enter daily work and generate industry weekly reports', '1', '', 2, 0, 'app-gXgq6pPfbAFq2LWSQjKPUA91TsXW6pNhJRzs2A', 1, 1, 0, '2024-12-02 15:23:48', '2024-12-14 14:13:12', 1),
	(5, 1, 1, 'Resume Agent', 'This agent is designed to filter and extract the most relevant resumes based on the input keywords.', '1', '', 1, 0, 'app-V7PV5z1kolCjPTsC8o35CNePiLbJLtOxxodCtQLQ', 1, 1, 0, '2024-12-02 15:47:01', '2024-12-13 07:18:15', 1),
	(6, 1, 1, 'Smart Recruitment', 'HR can quickly and accurately filter through all resumes in the database and match the best ones.', '5', '', 2, 0, 'app-iv1mT2wMX6HqSnTQufQpcuGcajklcRqsAUwEkF', 1, 1, 0, '2024-12-02 17:22:39', '2024-12-14 14:13:19', 1),
	(7, 1, 1, 'Resume Database', 'Establish a resume archive library for the resumes submitted to the company.', '6', '', 3, 0, NULL, 1, 0, 0, '2024-12-02 15:29:32', '2024-12-13 07:18:15', 1),
	(8, 1, 1, 'AI customer service workflow', 'The workflow receives user questions, analyzes and generates answers with the help of a large language model, feeds back to users, and provides high-quality answer services.', '1', '', 2, 0, 'app-Hz5XEwNXK8PJOOQbeCwBQXVnxYnLTT8bDQ', 1, 1, 0, '2024-11-29 11:19:58', '2024-12-14 14:15:07', 1),
	(9, 1, 1, 'Requirement document', 'Enter the project name and project overview to generate a document.', '1', '', 2, 0, 'app-SyaMGb8QgiubQ9Db6SsES7sPlOY52CYhA', 1, 1, 0, '2024-12-02 15:54:53', '2024-12-14 14:11:02', 1),
	(10, 1, 1, 'Data Comparison Work', 'This workflow compares the table structure submitted by the user with the structure of the uploaded', '1', '', 2, 0, 'app-7wRSvFUi2bGSkPmt69uxdPgVRPOlyTaFA', 1, 1, 0, '2024-12-02 15:22:27', '2024-12-14 14:14:32', 1),
	(11, 1, 1, 'Technical terms', 'Terminology of Computer Software Technology', '1', '', 3, 0, NULL, 1, 0, 0, '2024-12-02 15:29:19', '2024-12-02 15:29:41', 1),
	(12, 1, 1, 'Store activities', 'Store activities', '1', '', 3, 0, NULL, 1, 0, 0, '2024-12-02 10:12:25', '2024-12-03 17:14:34', 1),
	(13, 1, 1, 'Pre-sale of goods', 'Pre-sale of goods', '1', '', 3, 0, NULL, 1, 0, 0, '2024-12-02 10:20:49', '2024-12-02 18:27:56', 1),
	(14, 1, 1, 'Logistics consulting', 'Logistics consulting', '1', '', 3, 0, NULL, 1, 0, 0, '2024-12-02 10:21:03', '2024-12-02 15:46:56', 1),
	(15, 1, 1, 'After-sales support', 'After-sales support', '1', '', 3, 0, NULL, 1, 0, 0, '2024-12-02 10:42:26', '2024-12-02 15:02:14', 1);

CREATE TABLE IF NOT EXISTS `app_node_executions` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Node execution ID',
  `workflow_id` int NOT NULL DEFAULT '0' COMMENT 'Workflow ID',
  `chatroom_id` int NOT NULL DEFAULT '0' COMMENT 'Chatroom ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `app_run_id` int NOT NULL DEFAULT '0' COMMENT 'App run ID',
  `type` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Trigger type 1: Debug 2: Run application 3: API',
  `level` int NOT NULL DEFAULT '0' COMMENT 'The current level of edge',
  `child_level` int NOT NULL DEFAULT '0' COMMENT 'Child node level',
  `edge_id` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'Edge ID',
  `pre_node_id` varchar(100) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'Predecessor node ID or chat agent ID',
  `node_id` varchar(100) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Node ID or chat agent ID',
  `node_type` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Node Type',
  `node_name` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Node name or chat agent name',
  `node_graph` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Node graphical data',
  `correct_output` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Human correct output 0: No 1: Yes',
  `inputs` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Inputs',
  `correct_prompt` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Prompt for correcting LLM output results',
  `model_data` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Data required for AI models',
  `task_id` varchar(100) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'Task ID to be executed',
  `status` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Execute status 0: Cannot execute 1: Can execute 2: Executing 3: Successfully executed 4: Failed to execute',
  `error` text COLLATE utf8mb4_general_ci COMMENT 'Error message',
  `condition_id` varchar(100) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'Condition id of the logical branch or Task id',
  `outputs` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Outputs',
  `output_type` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Output type 0: no output 1: variables 2: text 3: database 4: code 5: document',
  `need_human_confirm` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Need human confirm 0: No 1: Yes',
  `elapsed_time` decimal(10,6) NOT NULL DEFAULT '0.000000' COMMENT 'Elapsed time',
  `prompt_tokens` int NOT NULL DEFAULT '0' COMMENT 'Prompt tokens',
  `completion_tokens` int NOT NULL DEFAULT '0' COMMENT 'Completion tokens',
  `total_tokens` int NOT NULL DEFAULT '0' COMMENT 'Total tokens',
  `embedding_tokens` int NOT NULL DEFAULT '0' COMMENT 'Embedding tokens',
  `reranking_tokens` int NOT NULL DEFAULT '0' COMMENT 'Reranking tokens',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Execution created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Execution updated time',
  `finished_time` datetime DEFAULT NULL COMMENT 'Execution finished time',
  PRIMARY KEY (`id`),
  KEY `workflow_id` (`workflow_id`),
  KEY `type` (`type`),
  KEY `status` (`status`),
  KEY `app_run_id` (`app_run_id`) USING BTREE,
  KEY `chatroom_id` (`chatroom_id`),
  KEY `pre_node_id` (`pre_node_id`),
  KEY `node_id` (`node_id`),
  KEY `node_type` (`node_type`),
  KEY `output_type` (`output_type`),
  KEY `condition_id` (`condition_id`),
  KEY `correct_output` (`correct_output`) USING BTREE,
  KEY `edge_id` (`edge_id`),
  KEY `level` (`level`),
  KEY `need_human_confirm` (`need_human_confirm`),
  KEY `user_id` (`user_id`),
  KEY `child_level` (`child_level`),
  CONSTRAINT `app_node_executions_chk_1` CHECK (json_valid(`node_graph`)),
  CONSTRAINT `app_node_executions_chk_2` CHECK (json_valid(`inputs`)),
  CONSTRAINT `app_node_executions_chk_3` CHECK (json_valid(`correct_prompt`)),
  CONSTRAINT `app_node_executions_chk_4` CHECK (json_valid(`model_data`)),
  CONSTRAINT `app_node_executions_chk_5` CHECK (json_valid(`outputs`))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='App Node Execution Data Table';


CREATE TABLE IF NOT EXISTS `app_node_user_relation` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'App node user relation ID',
  `app_run_id` int NOT NULL COMMENT 'App Run ID',
  `node_id` varchar(100) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Node ID',
  `team_id` int NOT NULL COMMENT 'Team ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `app_run_id` (`app_run_id`),
  KEY `team_id` (`team_id`),
  KEY `node_id` (`node_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='App Node Execution Relation ID';


CREATE TABLE IF NOT EXISTS `app_runs` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Run ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `app_id` int NOT NULL COMMENT 'App ID',
  `agent_id` int NOT NULL DEFAULT '0' COMMENT 'Agent ID',
  `workflow_id` int NOT NULL DEFAULT '0' COMMENT 'Workflow ID',
  `dataset_id` int NOT NULL DEFAULT '0' COMMENT 'Dataset id',
  `tool_id` int NOT NULL DEFAULT '0' COMMENT 'Custom tool ID',
  `chatroom_id` int NOT NULL DEFAULT '0' COMMENT 'Chatroom ID',
  `type` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Trigger type 1: Debug 2: Run application 3: API',
  `name` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'Run name',
  `graph` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Workflow graphical data',
  `inputs` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Inputs',
  `knowledge_base_mapping` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Knowledge base mapping',
  `level` int NOT NULL DEFAULT '0' COMMENT 'The current level of operation',
  `context` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Execute context',
  `completed_edges` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Completed edges',
  `skipped_edges` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Skipped edges',
  `status` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Execute status 0: Cannot execute 1: Can execute 2: Executing 3: Successfully executed 4: Failed to execute',
  `completed_steps` int NOT NULL DEFAULT '0' COMMENT 'Completed steps',
  `actual_completed_steps` int NOT NULL DEFAULT '0' COMMENT 'Actual number of completed steps',
  `need_human_confirm` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Need human confirm 0: No 1: Yes',
  `need_correct_llm` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Need correct LLM output 0: No 1: Yes',
  `error` text COLLATE utf8mb4_general_ci COMMENT 'Error message',
  `outputs` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Outputs',
  `elapsed_time` decimal(20,6) NOT NULL DEFAULT '0.000000' COMMENT 'Elapsed time',
  `prompt_tokens` int NOT NULL DEFAULT '0' COMMENT 'Prompt tokens',
  `completion_tokens` int NOT NULL DEFAULT '0' COMMENT 'Completion tokens',
  `total_tokens` int NOT NULL DEFAULT '0' COMMENT 'Total tokens',
  `embedding_tokens` int NOT NULL DEFAULT '0' COMMENT 'Embedding tokens',
  `reranking_tokens` int NOT NULL DEFAULT '0' COMMENT 'Reranking tokens',
  `total_steps` int NOT NULL DEFAULT '0' COMMENT 'Total steps',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Run created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Run updated time',
  `finished_time` datetime DEFAULT NULL COMMENT 'Run finished time',
  PRIMARY KEY (`id`),
  KEY `workflow_id` (`workflow_id`),
  KEY `type` (`type`),
  KEY `status` (`status`),
  KEY `app_id` (`app_id`),
  KEY `agent_id` (`agent_id`),
  KEY `tool_id` (`tool_id`),
  KEY `dataset_id` (`dataset_id`),
  KEY `need_human_confirm` (`need_human_confirm`),
  KEY `chatroom_id` (`chatroom_id`),
  KEY `user_id` (`user_id`),
  KEY `need_correct_llm` (`need_correct_llm`),
  CONSTRAINT `app_runs_chk_1` CHECK (json_valid(`graph`)),
  CONSTRAINT `app_runs_chk_2` CHECK (json_valid(`inputs`)),
  CONSTRAINT `app_runs_chk_3` CHECK (json_valid(`knowledge_base_mapping`)),
  CONSTRAINT `app_runs_chk_4` CHECK (json_valid(`context`)),
  CONSTRAINT `app_runs_chk_5` CHECK (json_valid(`completed_edges`)),
  CONSTRAINT `app_runs_chk_6` CHECK (json_valid(`skipped_edges`)),
  CONSTRAINT `app_runs_chk_7` CHECK (json_valid(`outputs`))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='App Runs Data Table';


CREATE TABLE IF NOT EXISTS `app_workflow_relation` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'App workflow relation ID',
  `app_id` int NOT NULL COMMENT 'App(Agent Skill Dataset) ID',
  `workflow_id` int NOT NULL COMMENT 'Workflow ID',
  `workflow_app_id` int NOT NULL COMMENT 'Workflow app ID',
  PRIMARY KEY (`id`),
  KEY `app_id` (`app_id`),
  KEY `workflow_id` (`workflow_id`),
  KEY `workflow_app_id` (`workflow_app_id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='App(Agent/Skill/Dataset) Workflow Relation Data Table';

INSERT INTO `app_workflow_relation` (`id`, `app_id`, `workflow_id`, `workflow_app_id`) VALUES
	(1, 11, 1, 3),
	(2, 5, 5, 6),
	(3, 1, 11, 10),
	(4, 12, 7, 8),
	(5, 13, 7, 8),
	(6, 14, 7, 8),
	(7, 15, 7, 8);

CREATE TABLE IF NOT EXISTS `chatrooms` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Chatroom ID',
  `team_id` int NOT NULL COMMENT 'Team ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `app_id` int NOT NULL COMMENT 'App ID',
  `max_round` int NOT NULL COMMENT 'The maximum number of chat rounds',
  `initial_message_id` int NOT NULL DEFAULT '0' COMMENT 'The initial message ID of the chat history',
  `chat_status` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Chat status 0: Stopped, 1: Chatting',
  `smart_selection` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Agent Smart Selection 0: No 1: Yes',
  `active` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Active 0: No 1: Yes',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Chatroom created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Chatroom updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Chatroom status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `team_id` (`team_id`),
  KEY `user_id` (`user_id`),
  KEY `app_id` (`app_id`),
  KEY `status` (`status`),
  KEY `active` (`active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Chatroom Data Table';


CREATE TABLE IF NOT EXISTS `chatroom_agent_relation` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Chatroom agent relation ID',
  `chatroom_id` int NOT NULL COMMENT 'Chatroom ID',
  `agent_id` int NOT NULL COMMENT 'Agent ID',
  `active` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Active 0: No 1: Yes',
  PRIMARY KEY (`id`),
  UNIQUE KEY `chatroom_agent_id` (`chatroom_id`,`agent_id`),
  KEY `active` (`active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Chatroom Agent Relation Data Table';


CREATE TABLE IF NOT EXISTS `chatroom_messages` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Chatroom message ID',
  `chatroom_id` int NOT NULL COMMENT 'Chatroom ID',
  `app_run_id` int NOT NULL COMMENT 'App run ID',
  `user_id` int NOT NULL DEFAULT '0' COMMENT 'ID of the user who sent the message (0 when the sender is an agent)',
  `agent_id` int NOT NULL DEFAULT '0' COMMENT 'ID of the agent who sent the message (0 when the sender is a user)',
  `llm_input` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'LLM input messages in LangChain format',
  `message` text COLLATE utf8mb4_general_ci NOT NULL COMMENT 'LLM output message string (or user input message)',
  `topic` text COLLATE utf8mb4_general_ci COMMENT 'Topic of the meeting',
  `is_read` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Read status 0: Unread, 1: Read',
  `prompt_tokens` int NOT NULL DEFAULT '0' COMMENT 'Prompt tokens',
  `completion_tokens` int NOT NULL DEFAULT '0' COMMENT 'Completion tokens',
  `total_tokens` int NOT NULL DEFAULT '0' COMMENT 'Total tokens',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Message created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Message updated time',
  PRIMARY KEY (`id`),
  KEY `chatroom_id` (`chatroom_id`),
  KEY `app_run_id` (`app_run_id`),
  KEY `user_id` (`user_id`),
  KEY `agent_id` (`agent_id`),
  KEY `is_read` (`is_read`),
  CONSTRAINT `chatroom_messages_chk_1` CHECK (json_valid(`llm_input`))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Chatroom Message Data Table';


CREATE TABLE IF NOT EXISTS `custom_tools` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Tool ID',
  `team_id` int NOT NULL COMMENT 'Team ID',
  `user_id` int NOT NULL DEFAULT '0' COMMENT 'User ID',
  `app_id` int NOT NULL COMMENT 'App ID',
  `config` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Tool config',
  `input_variables` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Input variables',
  `dependencies` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Tool dependencies',
  `code` text COLLATE utf8mb4_general_ci COMMENT 'Tool code',
  `output_type` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Output type 1: text 2: database 3: code 4: document',
  `output_variables` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Output variables',
  `publish_status` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Tool publish status 0: Draft 1: Published',
  `published_time` datetime DEFAULT NULL COMMENT 'Tool published time',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Tool created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Tool updated time',
  `status` tinyint(1) DEFAULT '1' COMMENT 'Tool status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `status` (`status`),
  KEY `user_id` (`user_id`),
  KEY `team_id` (`team_id`),
  KEY `app_id` (`app_id`),
  KEY `publish_status` (`publish_status`),
  KEY `output_type` (`output_type`),
  CONSTRAINT `custom_tools_chk_1` CHECK (json_valid(`config`)),
  CONSTRAINT `custom_tools_chk_2` CHECK (json_valid(`input_variables`)),
  CONSTRAINT `custom_tools_chk_3` CHECK (json_valid(`dependencies`)),
  CONSTRAINT `custom_tools_chk_4` CHECK (json_valid(`output_variables`))
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Custom Tool Data Table';

INSERT INTO `custom_tools` (`id`, `team_id`, `user_id`, `app_id`, `config`, `input_variables`, `dependencies`, `code`, `output_type`, `output_variables`, `publish_status`, `published_time`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 1, 1, NULL, '{"name": "output", "type": "object", "properties": {"content": {"name": "content", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "File content"}, "filepath": {"name": "filepath", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "File path"}}, "display_name": "", "to_string_keys": ""}', '{"python3": []}', '{"python3":"import os\\n\\ndef write_to_file(filepath: str, content: str, mode=\'w\'):\\n    \\"\\"\\"\\n    Write content to a file specified by filepath.\\n\\n    Args:\\n    - filepath (str): The path to the file.\\n    - content (str): The content to write to the file.\\n    - mode (str, optional): The mode in which to open the file (\'w\' for write, \'a\' for append). Default is \'w\'.\\n\\n    Returns:\\n    - dict: A dictionary indicating the status of the operation.\\n            {\'status\': \'True\'} if successful, {\'status\': \'<error_message>\'} if an exception occurred.\\n    \\"\\"\\"\\n    try:\\n        storage_path = os.path.join(\'/storage\', filepath)\\n        with open(storage_path, mode, encoding=\'utf-8\') as file:\\n            file.write(content)\\n        return {\'status\': \'True\'}\\n    except Exception as e:\\n        return {\'status\': str(e)}"}', 4, '{"name": "output", "type": "object", "properties": {"status": {"name": "status", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Status"}}, "display_name": "", "to_string_keys": ""}', 0, NULL, '2024-12-03 08:10:50', '2024-12-03 08:16:14', 1),
	(2, 1, 1, 1, 'null', '{"name": "output", "type": "object", "properties": {"content": {"name": "content", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "File content"}, "filepath": {"name": "filepath", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "File path"}}, "display_name": "", "to_string_keys": ""}', '{"python3": []}', '{"python3":"import os\\n\\ndef write_to_file(filepath: str, content: str, mode=\'w\'):\\n    \\"\\"\\"\\n    Write content to a file specified by filepath.\\n\\n    Args:\\n    - filepath (str): The path to the file.\\n    - content (str): The content to write to the file.\\n    - mode (str, optional): The mode in which to open the file (\'w\' for write, \'a\' for append). Default is \'w\'.\\n\\n    Returns:\\n    - dict: A dictionary indicating the status of the operation.\\n            {\'status\': \'True\'} if successful, {\'status\': \'<error_message>\'} if an exception occurred.\\n    \\"\\"\\"\\n    try:\\n        storage_path = os.path.join(\'/storage\', filepath)\\n        with open(storage_path, mode, encoding=\'utf-8\') as file:\\n            file.write(content)\\n        return {\'status\': \'True\'}\\n    except Exception as e:\\n        return {\'status\': str(e)}"}', 4, '{"name": "output", "type": "object", "properties": {"status": {"name": "status", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Status"}}, "display_name": "", "to_string_keys": ""}', 1, '2024-12-03 08:16:15', '2024-12-03 08:11:11', '2024-12-03 08:16:15', 1),
	(3, 1, 1, 2, NULL, '{"name": "output", "type": "object", "properties": {"host": {"name": "host", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Host"}, "port": {"name": "port", "type": "number", "value": "", "required": true, "display_name": "Port"}, "user": {"name": "user", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "User"}, "params": {"name": "params", "type": "string", "value": "", "required": false, "max_length": 0, "display_name": "Params"}, "database": {"name": "database", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Database"}, "password": {"name": "password", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Password"}, "sql_query": {"name": "sql_query", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Sql_query"}}, "display_name": "", "to_string_keys": ""}', '{"python3": ["pymysql"]}', '{"python3":"import json\\nimport pymysql\\nfrom datetime import datetime\\n\\ndef execute_sql_query_with_params(host: str, user: str, password: str, database: str, port: int, sql_query: str, params: str = None):\\n    result = {\\n        \\"status\\": \'False\',\\n        \\"data\\":  {}\\n    }\\n\\n    # Connect to the database\\n    try:\\n        connection = pymysql.connect(\\n            host=host,\\n            user=user,\\n            password=password,\\n            database=database,\\n            port=port\\n        )\\n        cursor = connection.cursor(pymysql.cursors.DictCursor)\\n    except Exception as e:\\n        raise ValueError(f\\"Error connecting to database: {str(e)}\\")\\n\\n    try:\\n        # Parse parameters if provided and not None\\n        if params:\\n            try:\\n                params = json.loads(params)\\n                if not isinstance(params, (list, tuple)):\\n                    raise ValueError(\\"Parameters should be a list or tuple.\\")\\n            except json.JSONDecodeError:\\n                raise ValueError(\\"Invalid JSON format for parameters.\\")\\n        else:\\n            params = []  # Default to empty list if params is None or empty\\n\\n        # Determine the type of SQL query\\n        sql_type = sql_query.strip().split()[0].upper()\\n\\n        if sql_type == \\"SELECT\\":\\n            # Execute SELECT query\\n            cursor.execute(sql_query, params)\\n            rows = cursor.fetchall()\\n            for row in rows:\\n                for key in row:\\n                    if isinstance(row[key], datetime):\\n                        row[key] = row[key].strftime(\'%Y-%m-%d %H:%M:%S\')\\n            result[\\"data\\"] = rows\\n            result[\\"status\\"] = \'True\'\\n        else:\\n            # Execute non-SELECT query (e.g., INSERT, UPDATE, DELETE)\\n            cursor.execute(sql_query, params)\\n            connection.commit()\\n            result[\\"status\\"] = \'True\'\\n\\n    except Exception as e:\\n        raise ValueError(f\\"Error executing query: {str(e)}\\")\\n    finally:\\n        cursor.close()\\n        connection.close()\\n    return result"}', 2, '{"name": "output", "type": "object", "properties": {"data": {"name": "data", "type": "Array[object]", "value": "", "required": false, "display_name": "Data"}, "status": {"name": "status", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Status"}}, "display_name": "", "to_string_keys": ""}', 0, NULL, '2024-12-03 17:04:35', '2024-12-05 10:17:45', 1),
	(4, 1, 1, 2, 'null', '{"name": "output", "type": "object", "properties": {"host": {"name": "host", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Host"}, "port": {"name": "port", "type": "number", "value": "", "required": true, "display_name": "Port"}, "user": {"name": "user", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "User"}, "params": {"name": "params", "type": "string", "value": "", "required": false, "max_length": 0, "display_name": "Params"}, "database": {"name": "database", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Database"}, "password": {"name": "password", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Password"}, "sql_query": {"name": "sql_query", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Sql_query"}}, "display_name": "", "to_string_keys": ""}', '{"python3": ["pymysql"]}', '{"python3":"import json\\nimport pymysql\\nfrom datetime import datetime\\n\\ndef execute_sql_query_with_params(host: str, user: str, password: str, database: str, port: int, sql_query: str, params: str = None):\\n    result = {\\n        \\"status\\": \'False\',\\n        \\"data\\":  {}\\n    }\\n\\n    # Connect to the database\\n    try:\\n        connection = pymysql.connect(\\n            host=host,\\n            user=user,\\n            password=password,\\n            database=database,\\n            port=port\\n        )\\n        cursor = connection.cursor(pymysql.cursors.DictCursor)\\n    except Exception as e:\\n        raise ValueError(f\\"Error connecting to database: {str(e)}\\")\\n\\n    try:\\n        # Parse parameters if provided and not None\\n        if params:\\n            try:\\n                params = json.loads(params)\\n                if not isinstance(params, (list, tuple)):\\n                    raise ValueError(\\"Parameters should be a list or tuple.\\")\\n            except json.JSONDecodeError:\\n                raise ValueError(\\"Invalid JSON format for parameters.\\")\\n        else:\\n            params = []  # Default to empty list if params is None or empty\\n\\n        # Determine the type of SQL query\\n        sql_type = sql_query.strip().split()[0].upper()\\n\\n        if sql_type == \\"SELECT\\":\\n            # Execute SELECT query\\n            cursor.execute(sql_query, params)\\n            rows = cursor.fetchall()\\n            for row in rows:\\n                for key in row:\\n                    if isinstance(row[key], datetime):\\n                        row[key] = row[key].strftime(\'%Y-%m-%d %H:%M:%S\')\\n            result[\\"data\\"] = rows\\n            result[\\"status\\"] = \'True\'\\n        else:\\n            # Execute non-SELECT query (e.g., INSERT, UPDATE, DELETE)\\n            cursor.execute(sql_query, params)\\n            connection.commit()\\n            result[\\"status\\"] = \'True\'\\n\\n    except Exception as e:\\n        raise ValueError(f\\"Error executing query: {str(e)}\\")\\n    finally:\\n        cursor.close()\\n        connection.close()\\n    return result"}', 2, '{"name": "output", "type": "object", "properties": {"data": {"name": "data", "type": "Array[object]", "value": "", "required": false, "display_name": "Data"}, "status": {"name": "status", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Status"}}, "display_name": "", "to_string_keys": ""}', 1, '2024-12-05 10:19:07', '2024-12-03 17:05:12', '2024-12-05 10:19:07', 1);

CREATE TABLE IF NOT EXISTS `datasets` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Dataset ID',
  `team_id` int NOT NULL COMMENT 'Team ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `app_id` int NOT NULL COMMENT 'App ID',
  `process_rule_id` int NOT NULL DEFAULT '1' COMMENT 'Dataset process rule ID',
  `data_source_type` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Data source type 1: Upload files 2: Synchronize other sites',
  `collection_name` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Vector storage collection name',
  `embedding_model_config_id` int NOT NULL DEFAULT '0' COMMENT 'Embedding model configuration ID',
  `retriever_config` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'Retriever config',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Dataset created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Dataset updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Dataset status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `embedding_model_id` (`embedding_model_config_id`),
  KEY `status` (`status`),
  KEY `team_id` (`team_id`),
  KEY `user_id` (`user_id`),
  KEY `app_id` (`app_id`),
  KEY `process_rule_id` (`process_rule_id`),
  CONSTRAINT `datasets_chk_1` CHECK (json_valid(`retriever_config`))
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Dataset Data Table';

INSERT INTO `datasets` (`id`, `team_id`, `user_id`, `app_id`, `process_rule_id`, `data_source_type`, `collection_name`, `embedding_model_config_id`, `retriever_config`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 1, 7, 1, 1, 'Collection_755a3d30ac024db48296f070b0592c94', 1, '{"k": 4, "type": "VectorStoreRetriever", "score_threshold": 0.0}', '2024-12-02 15:29:32', '2024-12-02 15:29:32', 1),
	(2, 1, 1, 11, 1, 1, 'Collection_a3168f2fba774557a6e09ceee1c966de', 1, '{"k": 4, "type": "VectorStoreRetriever", "score_threshold": 0.0}', '2024-12-02 15:29:19', '2024-12-02 15:29:19', 1),
	(3, 1, 1, 12, 1, 1, 'Collection_cc5601bc50fe4d6c897c7cdbb84aac1b', 1, '{"k": 4, "type": "VectorStoreRetriever", "score_threshold": 0.0}', '2024-12-02 10:12:25', '2024-12-02 10:12:25', 1),
	(4, 1, 1, 13, 1, 1, 'Collection_9a270530dac141ffb18f148d57fbe872', 1, '{"k": 4, "type": "VectorStoreRetriever", "score_threshold": 0.0}', '2024-12-02 10:20:49', '2024-12-02 10:20:49', 1),
	(5, 1, 1, 14, 1, 1, 'Collection_846e1be4985c484192b70510454ba56a', 1, '{"k": 4, "type": "VectorStoreRetriever", "score_threshold": 0.0}', '2024-12-02 10:21:03', '2024-12-02 10:21:03', 1),
	(6, 1, 1, 15, 1, 1, 'Collection_e331bad0d01045e58eac4837ee9647b7', 1, '{"k": 4, "type": "VectorStoreRetriever", "score_threshold": 0.0}', '2024-12-02 10:42:26', '2024-12-02 10:42:26', 1);

CREATE TABLE IF NOT EXISTS `dataset_process_rules` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Rule ID',
  `mode` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Processing mode 1: Automatic 2: Custom',
  `config` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'Rule config',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Rule created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Rule updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Rule status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `status` (`status`),
  CONSTRAINT `dataset_process_rules_chk_1` CHECK (json_valid(`config`))
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Dataset Process Rule Data Table';

INSERT INTO `dataset_process_rules` (`id`, `mode`, `config`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, '{"type": "RecursiveCharacterTextSplitter", "chunk_size": 400, "chunk_overlap": 200, "keep_separator": false, "strip_whitespace": true}', '2024-07-05 15:06:34', NULL, 1);

CREATE TABLE IF NOT EXISTS `documents` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Document ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `dataset_id` int NOT NULL COMMENT 'Dataset ID',
  `name` varchar(100) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Document name',
  `data_source_type` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Data source type 1: Upload files 2: Synchronize other sites 3: Workflow node output 4: Workflow node input',
  `dataset_process_rule_id` int NOT NULL COMMENT 'Dataset process rule ID',
  `upload_file_id` int NOT NULL DEFAULT '0' COMMENT 'Upload file ID',
  `node_exec_id` int NOT NULL DEFAULT '0' COMMENT 'App node execution ID',
  `word_count` int NOT NULL COMMENT 'Word count',
  `tokens` int NOT NULL COMMENT 'Tokens',
  `indexing_latency` decimal(10,6) NOT NULL DEFAULT '0.000000' COMMENT 'Indexing latency',
  `archived` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Archived status 0: Normal, 1: Archived',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Document created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Document updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Document status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `dataset_id` (`dataset_id`),
  KEY `status` (`status`),
  KEY `upload_file_id` (`upload_file_id`),
  KEY `dataset_process_rule_id` (`dataset_process_rule_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Document Data Table';

INSERT INTO `documents` (`id`, `user_id`, `dataset_id`, `name`, `data_source_type`, `dataset_process_rule_id`, `upload_file_id`, `node_exec_id`, `word_count`, `tokens`, `indexing_latency`, `archived`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 1, 'Michael Brown-builtin-1734079638.docx', 1, 1, 1, 0, 2440, 478, 0.000000, 0, '2024-12-02 15:54:25', '2024-12-02 15:54:29', 1),
	(2, 1, 1, 'Jane Doe-builtin-1734079639.docx', 1, 1, 2, 0, 1510, 304, 0.000000, 0, '2024-12-02 15:54:25', '2024-12-02 15:54:28', 1),
	(3, 1, 1, 'Emily Johnson-builtin-1734079640.docx', 1, 1, 3, 0, 1882, 371, 0.000000, 0, '2024-12-02 15:54:25', '2024-12-02 15:54:29', 1),
	(4, 1, 1, 'John Smith-builtin-1734079641.docx', 1, 1, 4, 0, 1726, 340, 0.000000, 0, '2024-12-02 15:54:25', '2024-12-02 17:45:34', 1),
	(5, 1, 2, 'Technical terms-builtin-1734079699.txt', 1, 1, 5, 0, 235, 99, 0.000000, 0, '2024-12-02 15:29:29', '2024-12-02 15:29:34', 1),
	(6, 1, 3, 'Store platform activities-builtin-1734079713.txt', 1, 1, 6, 0, 307, 68, 0.000000, 0, '2024-12-02 15:34:36', '2024-12-02 15:34:37', 1),
	(7, 1, 4, 'After-sales support-builtin-1734079723.txt', 1, 1, 7, 0, 1063, 200, 0.000000, 0, '2024-12-02 15:34:43', '2024-12-02 15:34:46', 1),
	(8, 1, 5, 'Logistics consulting-builtin-1734079737.txt', 1, 1, 8, 0, 1343, 268, 0.000000, 0, '2024-12-02 15:34:52', '2024-12-02 15:34:55', 1),
	(9, 1, 6, 'Pre-sale of goods-builtin-1734079747.txt', 1, 1, 9, 0, 1379, 280, 0.000000, 0, '2024-12-02 15:35:02', '2024-12-02 15:35:06', 1);

CREATE TABLE IF NOT EXISTS `document_segments` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Segment ID',
  `document_id` int NOT NULL COMMENT 'Document ID',
  `index_id` varchar(100) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'Corresponding to the id in the vector library',
  `content` text COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Segment content',
  `word_count` int NOT NULL COMMENT 'Segment word count',
  `tokens` int NOT NULL DEFAULT '0' COMMENT 'Segment tokens',
  `hit_count` int NOT NULL DEFAULT '0' COMMENT 'Hit count',
  `indexing_status` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Indexing status 0: Not indexed 1: Being indexed 2: Successfully indexed 3: Failed to be indexed',
  `indexing_time` datetime DEFAULT NULL COMMENT 'Indexing time',
  `completed_time` datetime DEFAULT NULL COMMENT 'Index completion time',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Segment created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Segment updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Segment status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `document_id` (`document_id`),
  KEY `hit_count` (`hit_count`),
  KEY `status` (`status`),
  KEY `indexing_status` (`indexing_status`)
) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Document Segment Data Table';

INSERT INTO `document_segments` (`id`, `document_id`, `index_id`, `content`, `word_count`, `tokens`, `hit_count`, `indexing_status`, `indexing_time`, `completed_time`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, '453257824725644250', 'Experienced Python Developer CV (Male, Age 35)\n\nMichael Brown\n\n321 Innovation Blvd, TechVille, TX 23456 | (555) 666-7777 | michaelbrown@email.com\n\nObjective:\nSeasoned Python Developer with over 5 years of experience in software development and automation, seeking a leadership role to drive innovation and mentor a team of developers.', 334, 75, 0, 0, '2024-12-02 15:54:25', '2024-12-02 15:54:26', '2024-12-02 15:54:25', '2024-12-02 16:01:19', 1),
	(2, 1, '453257824725644256', 'Objective:\nSeasoned Python Developer with over 5 years of experience in software development and automation, seeking a leadership role to drive innovation and mentor a team of developers.\n\nExperience:\nLead Python Developer, CodeMasters LLC.\nJanuary 2019 - Present\n\nLed the development of a Python-based data analytics platform used by Fortune 500 companies.', 357, 68, 0, 0, '2024-12-02 15:54:26', '2024-12-02 15:54:27', '2024-12-02 15:54:26', '2024-12-02 16:01:19', 1),
	(3, 1, '453257824725644262', 'Experience:\nLead Python Developer, CodeMasters LLC.\nJanuary 2019 - Present\n\nLed the development of a Python-based data analytics platform used by Fortune 500 companies.\n\nDesigned and implemented RPA solutions to automate repetitive tasks, increasing efficiency by 40%.\n\nManaged a team of 5 developers, overseeing project timelines and ensuring quality standards.', 362, 68, 0, 0, '2024-12-02 15:54:27', '2024-12-02 15:54:27', '2024-12-02 15:54:26', '2024-12-02 15:54:27', 1),
	(4, 1, '453257824725644270', 'Designed and implemented RPA solutions to automate repetitive tasks, increasing efficiency by 40%.\n\nManaged a team of 5 developers, overseeing project timelines and ensuring quality standards.\n\nEducation:\nB.S. in Computer Science, STU Institute, May 2015\n\nSkills:\n\nAdvanced Python development (Tkinter, NumPy, SciPy)\n\nExpertise in web scraping and data mining techniques.', 371, 76, 0, 0, '2024-12-02 15:54:27', '2024-12-02 15:54:28', '2024-12-02 15:54:27', '2024-12-02 15:54:28', 1),
	(5, 1, '453257824725644280', 'Education:\nB.S. in Computer Science, STU Institute, May 2015\n\nSkills:\n\nAdvanced Python development (Tkinter, NumPy, SciPy)\n\nExpertise in web scraping and data mining techniques.\n\nProficient in RPA tool development and integration.\n\nExperience with containerization (Docker) and orchestration (Kubernetes).\n\nStrong leadership and communication skills.\n\nCertifications:\n\nCertified Scrum Master', 391, 82, 0, 0, '2024-12-02 15:54:28', '2024-12-02 15:54:28', '2024-12-02 15:54:27', '2024-12-02 15:54:28', 1),
	(6, 1, '453257824725644288', 'Experience with containerization (Docker) and orchestration (Kubernetes).\n\nStrong leadership and communication skills.\n\nCertifications:\n\nCertified Scrum Master\n\nProjects:\n\nData Analytics Platform: Architected and developed a platform that processes and analyzes large datasets for business insights.', 299, 53, 0, 0, '2024-12-02 15:54:28', '2024-12-02 15:54:29', '2024-12-02 15:54:28', '2024-12-02 15:54:29', 1),
	(7, 1, '453257824725644290', 'Certifications:\n\nCertified Scrum Master\n\nProjects:\n\nData Analytics Platform: Architected and developed a platform that processes and analyzes large datasets for business insights.\n\nRPA for Customer Service: Developed RPA bots to automate customer service workflows, reducing response times and improving customer satisfaction.', 326, 56, 0, 0, '2024-12-02 15:54:29', '2024-12-02 15:54:29', '2024-12-02 15:54:28', '2024-12-02 15:54:29', 1),
	(8, 2, '453257824725644252', 'Python Intern CV (Female, Age 21)\n\nJane Doe\n\n123 Tech Drive, Silicon Valley, CA 12345 | (555) 123-4567 | janedoe@email.com\n\nObjective:\nEnthusiastic Computer Science student seeking an internship in Python development to apply academic knowledge and gain practical experience in a professional environment.\n\nEducation:\nB.S. in Computer Science, XYZ University, Expected Graduation: May 2025', 389, 88, 0, 0, '2024-12-02 15:54:26', '2024-12-02 15:54:26', '2024-12-02 15:54:25', '2024-12-02 17:27:47', 1),
	(9, 2, '453257824725644259', 'Education:\nB.S. in Computer Science, XYZ University, Expected Graduation: May 2025\n\nRelevant Coursework:\n\nPython Programming\n\nData Structures and Algorithms\n\nWeb Development\n\nMachine Learning\n\nSkills:\n\nProficient in Python, Django, and Flask\n\nBasic knowledge of SQL and NoSQL databases\n\nFamiliar with Git and GitHub for version control\n\nExperience with HTML, CSS, and JavaScript', 378, 79, 0, 0, '2024-12-02 15:54:26', '2024-12-02 15:54:27', '2024-12-02 15:54:26', '2024-12-10 18:50:09', 1),
	(10, 2, '453257824725644268', 'Skills:\n\nProficient in Python, Django, and Flask\n\nBasic knowledge of SQL and NoSQL databases\n\nFamiliar with Git and GitHub for version control\n\nExperience with HTML, CSS, and JavaScript\n\nStrong problem-solving and analytical skills\n\nProjects:\n\nStudent Information System: Developed a web application using Python and Flask to manage student records and grades.', 360, 68, 0, 0, '2024-12-02 15:54:27', '2024-12-02 15:54:28', '2024-12-02 15:54:26', '2024-12-10 18:50:09', 1),
	(11, 2, '453257824725644276', 'Strong problem-solving and analytical skills\n\nProjects:\n\nStudent Information System: Developed a web application using Python and Flask to manage student records and grades.\n\nData Analysis Tool: Created a Python script to analyze and visualize data for a class project on data mining.\n\nExtracurricular Activities:\n\nMember, XYZ University Coding Club\n\nVolunteer, Tech Outreach Program', 383, 69, 0, 0, '2024-12-02 15:54:28', '2024-12-02 15:54:28', '2024-12-02 15:54:27', '2024-12-10 18:50:09', 1),
	(12, 3, '453257824725644258', 'Experienced Python Developer CV (Female, Age 29)\n\nEmily Johnson\n\n789 Code Avenue, Innovation Park, CA 54321 | (555) 555-5555 | emilyjohnson@email.com\n\nObjective:\nExperienced Python Developer with a proven track record in building scalable applications and automating processes seeking a challenging role to further develop expertise and contribute to a dynamic team.', 366, 77, 0, 0, '2024-12-02 15:54:26', '2024-12-02 15:54:27', '2024-12-02 15:54:26', '2024-12-02 17:27:47', 1),
	(13, 3, '453257824725644264', 'Experience:\nSenior Python Developer, TechLeap Inc.\nJune 2020 - Present\n\nDeveloped and maintained microservices using Python and Flask for a SaaS product.\n\nImplemented data pipelines using Python for data processing and analysis.\n\nCollaborated with cross-functional teams to design and implement features.\n\nConducted code reviews and provided mentorship to junior developers.', 374, 69, 0, 0, '2024-12-02 15:54:27', '2024-12-02 15:54:27', '2024-12-02 15:54:26', '2024-12-02 15:54:27', 1),
	(14, 3, '453257824725644272', 'Collaborated with cross-functional teams to design and implement features.\n\nConducted code reviews and provided mentorship to junior developers.\n\nEducation:\nM.S. in Computer Science, PQR University, May 2018\n\nSkills:\n\nExpert in Python (Flask, Django, Tornado)\n\nExperience with web scraping and data extraction using libraries such as BeautifulSoup and Scrapy.', 359, 73, 0, 0, '2024-12-02 15:54:27', '2024-12-02 15:54:28', '2024-12-02 15:54:27', '2024-12-02 15:54:28', 1),
	(15, 3, '453257824725644282', 'Skills:\n\nExpert in Python (Flask, Django, Tornado)\n\nExperience with web scraping and data extraction using libraries such as BeautifulSoup and Scrapy.\n\nProficient in automation using RPA tools (e.g., UiPath, Blue Prism).\n\nStrong knowledge of databases (PostgreSQL, Redis).\n\nExperience with cloud platforms (AWS, Google Cloud).\n\nCertifications:\n\nCertified Python Programmer\n\nProjects:', 383, 78, 0, 0, '2024-12-02 15:54:28', '2024-12-02 15:54:28', '2024-12-02 15:54:27', '2024-12-02 15:54:28', 1),
	(16, 3, '453257824725644286', 'Strong knowledge of databases (PostgreSQL, Redis).\n\nExperience with cloud platforms (AWS, Google Cloud).\n\nCertifications:\n\nCertified Python Programmer\n\nProjects:\n\nAutomated Data Extraction Tool: Developed a Python-based tool for web scraping to automate data collection for market analysis.\n\nRPA Integration: Led the initiative to integrate RPA into existing workflows, reducing manual effort by 30%.', 400, 74, 0, 0, '2024-12-02 15:54:28', '2024-12-02 15:54:29', '2024-12-02 15:54:28', '2024-12-02 15:54:29', 1),
	(17, 4, '453257824725654763', 'Python Developer CV (Male, Age 23) - Fresh Graduate\n\nJohn Smith\n\n456 Code Street, Tech City, NY 67890 | (555) 987-6543 | johnsmith@email.com\n\nObjective:\nRecent Computer Science graduate with a strong foundation in Python seeking an entry-level position to contribute to innovative software development projects.\n\nEducation:\nB.S. in Computer Science, ABC University, May 2024\n\nRelevant Coursework:', 396, 90, 0, 0, '2024-12-02 17:45:34', '2024-12-02 17:45:34', '2024-12-02 15:54:25', '2024-12-02 17:45:34', 1),
	(18, 4, '453257824725654765', 'Education:\nB.S. in Computer Science, ABC University, May 2024\n\nRelevant Coursework:\n\nAdvanced Python\n\nWeb Frameworks\n\nData Science\n\nSoftware Engineering\n\nSkills:\n\nProficient in Python (Flask, Django, Pandas)\n\nExperience with front-end technologies (HTML, CSS, JavaScript)\n\nFamiliar with database management (MySQL, MongoDB)\n\nKnowledge of version control systems (Git)', 367, 80, 0, 0, '2024-12-02 17:45:34', '2024-12-02 17:45:34', '2024-12-02 15:54:26', '2024-12-10 18:50:09', 1),
	(19, 4, '453257824725654767', 'Experience with front-end technologies (HTML, CSS, JavaScript)\n\nFamiliar with database management (MySQL, MongoDB)\n\nKnowledge of version control systems (Git)\n\nStrong analytical and debugging skills\n\nProjects:\n\nE-commerce Website: Developed a full-stack e-commerce website using Python and Django, which included user authentication and product management features.', 365, 63, 0, 0, '2024-12-02 17:45:34', '2024-12-02 17:45:34', '2024-12-02 15:54:27', '2024-12-02 17:45:34', 1),
	(20, 4, '453257824725654769', 'Projects:\n\nE-commerce Website: Developed a full-stack e-commerce website using Python and Django, which included user authentication and product management features.\n\nData Visualization Dashboard: Created a dashboard using Python and libraries such as Matplotlib and Seaborn to visualize sales data.\n\nInternships:', 313, 54, 0, 0, '2024-12-02 17:45:34', '2024-12-02 17:45:34', '2024-12-02 15:54:27', '2024-12-02 17:45:34', 1),
	(21, 4, '453257824725654771', 'Data Visualization Dashboard: Created a dashboard using Python and libraries such as Matplotlib and Seaborn to visualize sales data.\n\nInternships:\n\nSummer Intern, TechStart Inc.: Worked on a team to develop and maintain internal tools, gained experience in Agile development practices.', 285, 53, 0, 0, '2024-12-02 17:45:34', '2024-12-02 17:45:34', '2024-12-02 15:54:28', '2024-12-02 17:45:34', 1),
	(22, 5, '453257824725644028', 'RESTful API: REST风格的API\nHTTP: 超文本传输协议\nClient: 客户端\nServer: 服务器\nJSON (JavaScript Object Notation): JSON（JavaScript对象表示法）\nGET: 获取请求\nPOST: 创建请求\nDELETE: 删除请求\nMicro web framework: 微型Web框架\nVirtual environment: 虚拟环境\nDependency management: 依赖管理', 235, 99, 0, 0, '2024-12-02 15:29:30', '2024-12-02 15:29:34', '2024-12-02 15:29:29', '2024-12-02 15:29:42', 1),
	(23, 6, '453257824725644128', 'Q: Shops have what activities?\nAnswer: The "Summer Carnival shopping" activity is currently underway, the specific information is as follows:\nEvent time: [Start date]-[End date]\nActivity content: 20% off all the goods, over 500 dollars less 50 dollars, purchase the specified goods can get a beautiful gift.', 307, 68, 0, 0, '2024-12-02 15:34:36', '2024-12-02 15:34:37', '2024-12-02 15:34:36', '2024-12-03 17:14:39', 1),
	(24, 7, '453257824725644130', 'Question: What if the price drops after buying?\nAnswer: If the price of the goods you buy is reduced after purchase, you can pay attention to the price protection policy of the merchant, usually within a certain period of time can apply for compensation for the difference.\nQuestion: How to deal with quality problems?', 318, 62, 0, 0, '2024-12-02 15:34:44', '2024-12-02 15:34:44', '2024-12-02 15:34:43', '2024-12-02 15:34:44', 1),
	(25, 7, '453257824725644132', 'Question: How to deal with quality problems?\nAnswer: If the product has quality problems, you can contact the merchant customer service, according to their instructions for return or repair and other processing.\nQuestion: How to apply for after-sales service?', 259, 48, 0, 0, '2024-12-02 15:34:44', '2024-12-02 15:34:45', '2024-12-02 15:34:44', '2024-12-02 15:34:45', 1),
	(26, 7, '453257824725644134', 'Question: How to apply for after-sales service?\nAnswer: You can submit the after-sales service application through the official channels of the merchant, such as customer service phone, online customer service or after-sales page.\nQuestion: Who bears the freight for the return?', 278, 52, 0, 0, '2024-12-02 15:34:45', '2024-12-02 15:34:46', '2024-12-02 15:34:45', '2024-12-02 15:34:46', 1),
	(27, 7, '453257824725644136', 'Question: Who bears the freight for the return?\nAnswer: The return freight bearing rules are usually based on the specific circumstances, and are generally clearly stated in the merchant\'s after-sales policy.', 208, 38, 0, 0, '2024-12-02 15:34:46', '2024-12-02 15:34:46', '2024-12-02 15:34:45', '2024-12-02 15:34:46', 1),
	(28, 8, '453257824725644138', 'Question: When will it be shipped?\nAnswer: In general, orders will be shipped within 1-2 working days after successful payment. Please check the order status for specific delivery time.\nQ: Which logistics company is used for delivery?', 234, 48, 0, 0, '2024-12-02 15:34:53', '2024-12-02 15:34:53', '2024-12-02 15:34:52', '2024-12-02 15:34:53', 1),
	(29, 8, '453257824725644140', 'Q: Which logistics company is used for delivery?\nAnswer: We use a number of mainstream logistics companies for delivery, such as SF Express, Jingdong Logistics, YTO, etc. The specific logistics company used will be determined based on your delivery address and order status.\nQuestion: How do I view my logistics information?', 324, 64, 0, 0, '2024-12-02 15:34:53', '2024-12-02 15:34:54', '2024-12-02 15:34:53', '2024-12-02 15:46:57', 1),
	(30, 8, '453257824725644142', 'Question: How do I view my logistics information?\nAnswer: You can check the logistics information in the "My Order" page, click the "View logistics" button in the order details to check the status of your parcel delivery.\nQuestion: How long does logistics take?', 261, 54, 0, 0, '2024-12-02 15:34:54', '2024-12-02 15:34:54', '2024-12-02 15:34:53', '2024-12-02 15:46:57', 1),
	(31, 8, '453257824725644144', 'Question: How long does logistics take?\nAnswer: The delivery time depends on the delivery method you choose and the delivery address. Under normal circumstances, standard delivery takes 3-7 working days, and express delivery generally takes 2-3 working days.\nQuestion: How to change the delivery address?', 304, 60, 0, 0, '2024-12-02 15:34:54', '2024-12-02 15:34:55', '2024-12-02 15:34:54', '2024-12-02 15:46:57', 1),
	(32, 8, '453257824725644146', 'Question: How to change the delivery address?\nAnswer: Before the order is shipped, you can change the delivery address by contacting customer service. If the order has already been shipped, you cannot change the address.', 220, 42, 0, 0, '2024-12-02 15:34:55', '2024-12-02 15:34:55', '2024-12-02 15:34:54', '2024-12-02 15:46:57', 1),
	(33, 9, '453257824725644148', 'Q: Can you recommend me a mobile phone mask?', 44, 11, 0, 0, '2024-12-02 15:35:03', '2024-12-02 15:35:03', '2024-12-02 15:35:02', '2024-12-02 15:35:03', 1),
	(34, 9, '453257824725644150', 'Answer: Dear, you can take a look at this toughened film, the link is www.example.com. This product filters out part of the harmful blue light emitted by the mobile phone screen through special technology, which can effectively reduce eye fatigue and protect eyesight, especially for people who use mobile phones for a long time, and usually has a good high-definition display effect, which will not', 399, 78, 0, 0, '2024-12-02 15:35:03', '2024-12-02 15:35:04', '2024-12-02 15:35:03', '2024-12-02 18:27:57', 1),
	(35, 9, '453257824725644152', 'which can effectively reduce eye fatigue and protect eyesight, especially for people who use mobile phones for a long time, and usually has a good high-definition display effect, which will not excessively affect the visual experience of the screen.', 249, 45, 0, 0, '2024-12-02 15:35:04', '2024-12-02 15:35:04', '2024-12-02 15:35:04', '2024-12-02 15:35:05', 1),
	(36, 9, '453257824725644154', 'Question: Apple 15 product introduction.', 40, 8, 0, 0, '2024-12-02 15:35:05', '2024-12-02 15:35:05', '2024-12-02 15:35:04', '2024-12-02 18:27:57', 1),
	(37, 9, '453257824725644156', 'Answer: Appearance: Multiple colors, aviation grade aluminum housing, Type-C interface. Screen: 6.1-inch OLED full screen, super Retina XDR display. Performance: A16 bionic chip, running memory and storage capacity optional. Video: 48 megapixel main camera with multiple shooting functions. Battery: 3279mAh battery, support wireless charging, improve battery life. Price: From 5999 yuan. Smart', 394, 87, 0, 0, '2024-12-02 15:35:05', '2024-12-02 15:35:06', '2024-12-02 15:35:05', '2024-12-02 18:27:57', 1),
	(38, 9, '453257824725644158', 'and storage capacity optional. Video: 48 megapixel main camera with multiple shooting functions. Battery: 3279mAh battery, support wireless charging, improve battery life. Price: From 5999 yuan. Smart Island Design: Bringing new interactive experiences.', 253, 51, 0, 0, '2024-12-02 15:35:06', '2024-12-02 15:35:06', '2024-12-02 15:35:05', '2024-12-02 18:27:57', 1);

CREATE TABLE IF NOT EXISTS `document_segment_rag_records` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Document segment RAG record ID',
  `rag_record_id` int NOT NULL DEFAULT '0' COMMENT 'RAG record ID',
  `dataset_id` int NOT NULL DEFAULT '0' COMMENT 'Dataset ID',
  `document_id` int NOT NULL DEFAULT '0' COMMENT 'Document ID',
  `segment_id` int NOT NULL DEFAULT '0' COMMENT 'ID of document segment retrieved',
  `score` decimal(20,6) NOT NULL DEFAULT '0.000000' COMMENT 'Document similarity score',
  `reranking_score` decimal(20,6) NOT NULL DEFAULT '0.000000' COMMENT 'Document reranking score',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Run created time',
  PRIMARY KEY (`id`) USING BTREE,
  KEY `rag_record_id` (`rag_record_id`) USING BTREE,
  KEY `dataset_id` (`dataset_id`) USING BTREE,
  KEY `document_id` (`document_id`) USING BTREE,
  KEY `segment_id` (`segment_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='RAG Record Table By Document Segment';


CREATE TABLE IF NOT EXISTS `models` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Model ID',
  `supplier_id` int NOT NULL COMMENT 'Model supplier ID',
  `name` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Model name',
  `type` tinyint(1) NOT NULL COMMENT 'Model type 1: text-generation 2: embeddings 3: reranking 4: speech2text 5: tts 6: text2img 7: moderation',
  `mode` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Request mode 1: online 2: local',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Model created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Model updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Model status 1: Normal 2: Disabled 3: Deleted	',
  PRIMARY KEY (`id`),
  KEY `supplier_id` (`supplier_id`),
  KEY `type` (`type`),
  KEY `status` (`status`),
  KEY `mode` (`mode`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Model Data Table';

INSERT INTO `models` (`id`, `supplier_id`, `name`, `type`, `mode`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 'text-embedding-ada-002', 2, 1, '2024-07-13 17:37:27', '2024-10-29 09:14:20', 1),
	(2, 2, 'text2vec-large-chinese', 2, 2, '2024-07-13 17:38:19', '2024-10-29 09:14:20', 1),
	(3, 2, 'bge-reranker-v2-m3', 3, 2, '2024-07-13 17:38:46', '2024-10-29 09:14:23', 1),
	(4, 1, 'gpt-4o', 1, 1, '2024-07-13 18:07:57', '2024-11-08 11:29:36', 1),
	(5, 1, 'gpt-4o-mini', 1, 1, '2024-07-22 15:06:55', '2024-11-08 11:29:36', 1),
	(6, 1, 'gpt-4-turbo', 1, 1, '2024-10-24 16:18:34', '2024-11-08 11:29:36', 1),
	(7, 1, 'gpt-4-1106-preview', 1, 1, '2024-10-28 17:38:37', '2024-11-08 11:29:36', 1),
	(8, 1, 'gpt-3.5-turbo', 1, 1, '2024-10-28 17:39:00', '2024-11-08 11:29:36', 1);

CREATE TABLE IF NOT EXISTS `model_configurations` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Model supplier ID',
  `team_id` int NOT NULL COMMENT 'Team ID',
  `model_id` int NOT NULL COMMENT 'Model ID',
  `config` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'Model configuration',
  `default_used` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Whether to use by default 0: no 1: yes',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Model configuration created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Model configuration updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Model configuration status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  UNIQUE KEY `team_id` (`team_id`,`model_id`),
  KEY `status` (`status`),
  CONSTRAINT `model_configurations_chk_1` CHECK (json_valid(`config`))
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Model Configuration Data Table';

INSERT INTO `model_configurations` (`id`, `team_id`, `model_id`, `config`, `default_used`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 1, '{"type": "OpenAIEmbeddings", "model": "text-embedding-ada-002", "max_retries": null, "input_pricing": 0.0000001, "request_timeout": null, "pricing_currency": "USD"}', 1, '2024-07-13 17:50:56', NULL, 1),
	(2, 1, 2, '{"type": "Text2vecEmbeddings"}', 1, '2024-07-13 17:52:07', NULL, 1),
	(3, 1, 4, '{"n": 1, "stop": null, "model": "gpt-4o", "streaming": false, "max_tokens": null, "http_client": null, "max_retries": 2, "temperature": 0.7, "model_kwargs": {}, "openai_proxy": null, "default_query": null, "default_headers": null, "openai_api_base": null, "request_timeout": null, "http_async_client": null, "openai_organization": null, "tiktoken_model_name": null}', 1, '2024-07-16 16:54:44', NULL, 1),
	(4, 1, 3, '{"type": "CrossEncoderReranker", "model_type": "HuggingFaceCrossEncoder"}', 1, '2024-07-22 15:09:09', NULL, 1),
	(5, 1, 5, '{"n": 1, "stop": null, "model": "gpt-4o-mini", "streaming": false, "max_tokens": null, "http_client": null, "max_retries": 2, "temperature": 0.7, "model_kwargs": {}, "openai_proxy": null, "default_query": null, "default_headers": null, "openai_api_base": null, "request_timeout": null, "http_async_client": null, "openai_organization": null, "tiktoken_model_name": null}', 0, '2024-07-22 15:09:21', NULL, 1),
	(6, 1, 6, '{"n": 1, "stop": null, "model": "gpt-4-turbo", "streaming": false, "max_tokens": null, "http_client": null, "max_retries": 2, "temperature": 0.7, "model_kwargs": {}, "openai_proxy": null, "default_query": null, "default_headers": null, "openai_api_base": null, "request_timeout": null, "http_async_client": null, "openai_organization": null, "tiktoken_model_name": null}', 0, '2024-10-24 16:20:56', NULL, 1),
	(7, 1, 7, '{"n": 1, "stop": null, "model": "gpt-4-1106-preview", "streaming": false, "max_tokens": null, "http_client": null, "max_retries": 2, "temperature": 0.7, "model_kwargs": {}, "openai_proxy": null, "default_query": null, "default_headers": null, "openai_api_base": null, "request_timeout": null, "http_async_client": null, "openai_organization": null, "tiktoken_model_name": null}', 0, '2024-10-28 17:58:19', NULL, 1),
	(8, 1, 8, '{"n": 1, "stop": null, "model": "gpt-3.5-turbo", "streaming": false, "max_tokens": null, "http_client": null, "max_retries": 2, "temperature": 0.7, "model_kwargs": {}, "openai_proxy": null, "default_query": null, "default_headers": null, "openai_api_base": null, "request_timeout": null, "http_async_client": null, "openai_organization": null, "tiktoken_model_name": null}', 0, '2024-10-28 17:58:30', NULL, 1);

CREATE TABLE IF NOT EXISTS `rag_records` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'RAG record ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `agent_id` int NOT NULL DEFAULT '0' COMMENT 'Agent ID',
  `workflow_id` int NOT NULL DEFAULT '0' COMMENT 'Workflow ID',
  `dataset_ids` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'IDs of datasets to retrieve from',
  `type` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Trigger type 1: Debug 2: Run application',
  `input` text COLLATE utf8mb4_general_ci COMMENT 'Input',
  `search_in_documents` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Names of documents to search in',
  `status` tinyint(1) NOT NULL DEFAULT '0' COMMENT '1: Executing 2: Successfully executed 3: Failed to execute',
  `error` text COLLATE utf8mb4_general_ci COMMENT 'Error message',
  `elapsed_time` decimal(20,6) NOT NULL DEFAULT '0.000000' COMMENT 'Elapsed time',
  `embedding_tokens` int NOT NULL DEFAULT '0' COMMENT 'Embedding tokens',
  `reranking_tokens` int NOT NULL DEFAULT '0' COMMENT 'Reranking tokens',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Run created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Run updated time',
  PRIMARY KEY (`id`),
  KEY `agent_id` (`agent_id`),
  KEY `workflow_id` (`workflow_id`),
  KEY `type` (`type`),
  KEY `status` (`status`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `rag_records_chk_1` CHECK (json_valid(`dataset_ids`)),
  CONSTRAINT `rag_records_chk_2` CHECK (json_valid(`search_in_documents`))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='RAG Record Table';


CREATE TABLE IF NOT EXISTS `suppliers` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Model supplier ID',
  `name` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Model supplier name',
  `mode` tinyint(1) DEFAULT '1' COMMENT 'Request mode 1:online 2:local',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Supplier created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Supplier updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Supplier status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `status` (`status`,`mode`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Model Supplier Data Table';

INSERT INTO `suppliers` (`id`, `name`, `mode`, `created_time`, `updated_time`, `status`) VALUES
	(1, 'OpenAI', 1, '2024-07-05 10:31:30', NULL, 1),
	(2, 'HuggingFace', 1, '2024-07-05 10:31:47', NULL, 1);

CREATE TABLE IF NOT EXISTS `supplier_configurations` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Model supplier ID',
  `team_id` int NOT NULL COMMENT 'Team ID',
  `supplier_id` int NOT NULL COMMENT 'Model supplier ID',
  `config` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'Model supplier configuration',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Supplier configuration created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Supplier configuration updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Supplier configuration status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  UNIQUE KEY `team_id` (`team_id`,`supplier_id`),
  KEY `status` (`status`),
  CONSTRAINT `supplier_configurations_chk_1` CHECK (json_valid(`config`))
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Model Supplier Configuration Data Table';

INSERT INTO `supplier_configurations` (`id`, `team_id`, `supplier_id`, `config`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 2, '{}', '2024-12-03 10:30:33', NULL, 1);

CREATE TABLE IF NOT EXISTS `teams` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Team ID',
  `name` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Team name',
  `config` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Team config',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Team created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Team updated time',
  `status` tinyint NOT NULL DEFAULT '1' COMMENT 'Team status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `status` (`status`),
  CONSTRAINT `teams_chk_1` CHECK (json_valid(`config`))
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Team Data Table';

INSERT INTO `teams` (`id`, `name`, `config`, `created_time`, `updated_time`, `status`) VALUES
	(1, 'Organization', NULL, '2024-11-26 17:01:33', NULL, 1);

CREATE TABLE IF NOT EXISTS `tool_authorizations` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Provider ID',
  `team_id` int DEFAULT NULL COMMENT 'Team ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `provider` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Provider Name',
  `encrypted_credentials` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Provider Config',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Provider created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Provider updated time',
  PRIMARY KEY (`id`),
  KEY `provider` (`provider`) USING BTREE,
  KEY `team_id` (`team_id`) USING BTREE,
  CONSTRAINT `tool_authorizations_chk_1` CHECK (json_valid(`encrypted_credentials`))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Tool Authorization Data Table';


CREATE TABLE IF NOT EXISTS `upload_files` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'File ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `name` varchar(100) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'File name',
  `path` varchar(255) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'Local path relative to project root path',
  `size` int NOT NULL COMMENT 'File size',
  `extension` varchar(10) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'File extension',
  `mime_type` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'File uploaded time',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Upload File Data Table';

INSERT INTO `upload_files` (`id`, `user_id`, `name`, `path`, `size`, `extension`, `mime_type`, `created_time`) VALUES
	(1, 1, 'Technical terms', 'upload_files/2024/12/2/01bd7fdfd71542e78c59d18310b04f61.txt', 341, '.txt', 'text/plain', '2024-12-02 15:29:29'),
	(2, 1, 'Store platform activities', 'upload_files/2024/12/2/d0fdfc0164d74f66bdcda0f978026f6b.txt', 310, '.txt', 'text/plain', '2024-12-02 15:34:35'),
	(3, 1, 'After-sales support', 'upload_files/2024/12/2/fe589ed3511e430ba65070d72b0d954b.txt', 932, '.txt', 'text/plain', '2024-12-02 15:34:43'),
	(4, 1, 'Logistics consulting', 'upload_files/2024/12/2/b6f3a736b4874f1996137c09ed9defd1.txt', 1171, '.txt', 'text/plain', '2024-12-02 15:34:52'),
	(5, 1, 'Pre-sale of goods', 'upload_files/2024/12/2/e3c9262cfa8d498b990692325c7a28c6.txt', 992, '.txt', 'text/plain', '2024-12-02 15:35:02'),
	(6, 1, 'Michael Brown', 'upload_files/2024/12/2/b23d4373a02143c59cce4d168ad2c5f7.docx', 14800, '.docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', '2024-12-02 15:54:25'),
	(7, 1, 'Jane Doe', 'upload_files/2024/12/2/7934a92867454259ac71a2e6ce05e8e2.docx', 16162, '.docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', '2024-12-02 15:54:25'),
	(8, 1, 'Emily Johnson', 'upload_files/2024/12/2/16583e1b75e54a2ab2950c937c07d3ef.docx', 14991, '.docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', '2024-12-02 15:54:25'),
	(9, 1, 'John Smith', 'upload_files/2024/12/2/b8255b907cbf488cbe5014c9bab3f52d.docx', 14809, '.docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', '2024-12-02 15:54:25');

CREATE TABLE IF NOT EXISTS `users` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'User ID',
  `team_id` int NOT NULL DEFAULT '0' COMMENT 'Team ID',
  `role` tinyint(1) NOT NULL DEFAULT '2' COMMENT 'Team role 1: Administrator 2: Ordinary Member',
  `inviter_id` int NOT NULL DEFAULT '0' COMMENT 'Inviter ID',
  `nickname` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'User''s nickname',
  `phone` varchar(20) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'User''s mobile phone number',
  `email` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'User''s email',
  `password` varchar(100) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'User login password',
  `password_salt` varchar(100) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'User login password encryption salt value',
  `avatar` varchar(200) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'User''s avatar',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'User created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'The user''s most recent updated time',
  `last_login_time` datetime DEFAULT NULL COMMENT 'The time the user last logged in',
  `last_login_ip` varchar(20) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'The IP address of the user''s last login',
  `language` varchar(10) COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'en' COMMENT 'Current language',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'User status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `phone` (`phone`),
  KEY `email` (`email`),
  KEY `status` (`status`),
  KEY `inviter_id` (`inviter_id`),
  KEY `team_id` (`team_id`),
  KEY `role` (`role`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='User Data Table';

INSERT INTO `users` (`id`, `team_id`, `role`, `inviter_id`, `nickname`, `phone`, `email`, `password`, `password_salt`, `avatar`, `created_time`, `updated_time`, `last_login_time`, `last_login_ip`, `language`, `status`) VALUES
	(1, 1, 1, 0, 'administrator', NULL, 'admin@nexusai.com', 'af734e08e3e31ea6fa3af1d2631ddfbf', '1732612122', NULL, '2024-11-26 17:11:42', NULL, NULL, NULL, 'en', 1);

CREATE TABLE IF NOT EXISTS `workflows` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'Workflow ID',
  `team_id` int NOT NULL COMMENT 'Team ID',
  `user_id` int NOT NULL COMMENT 'User ID',
  `app_id` int NOT NULL COMMENT 'App ID',
  `graph` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Workflow graphical data',
  `features` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin COMMENT 'Workflow features',
  `publish_status` tinyint(1) DEFAULT '0' COMMENT 'Workflow publish status 0: Draft 1: Published',
  `published_time` datetime DEFAULT NULL COMMENT 'Workflow published time',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Workflow created time',
  `updated_time` datetime DEFAULT NULL COMMENT 'Workflow updated time',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Workflow status 1: Normal 2: Disabled 3: Deleted',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `team_id` (`team_id`),
  KEY `app_id` (`app_id`),
  KEY `status` (`status`),
  KEY `publish_status` (`publish_status`),
  CONSTRAINT `workflows_chk_1` CHECK (json_valid(`graph`)),
  CONSTRAINT `workflows_chk_2` CHECK (json_valid(`features`))
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='Workflow Data Table';

INSERT INTO `workflows` (`id`, `team_id`, `user_id`, `app_id`, `graph`, `features`, `publish_status`, `published_time`, `created_time`, `updated_time`, `status`) VALUES
	(1, 1, 1, 3, '{"nodes": [{"id": "f58a3c98-da98-4e82-a949-280fbeb2e0e3", "data": {"type": "start", "title": "Start Node", "desc": "Please enter the document content", "input": {"name": "input_var", "type": "object", "properties": {"document_content": {"name": "document_content", "type": "string", "value": "", "display_name": "document content", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {"document_content": 103}, "output": {"document_content": 103}}}, "flow_data": {}}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c", "data": {"type": "llm", "title": "LLM", "desc": "English to Chinese translation", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a software engineer.The goal is to translate English technical documents into Chinese.Industry specific translation needs to be carried out by combining technical terms from the knowledge base.Here\'s what you already know <<6243833e-5bcd-4a2d-bcd9-79b44d2e14b7.outputs.output>>Receiving <<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>> is an English technical document, only the translated Chinese result is returned, no additional content is required.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {"text": 2}}}, "flow_data": {}}, {"id": "2b4d5885-ed85-42ee-8bf9-ca038b6e97dc", "data": {"type": "end", "title": "End Node", "desc": "Output Chinese results", "output": {"name": "output", "type": "object", "properties": {"content": {"name": "content", "type": "string", "value": "<<27a7a7e3-b91d-406e-a431-825a624be28c.outputs.text>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}, {"id": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "data": {"type": "retriever", "title": "Retriever", "desc": "Retrieve content from the technical terms knowledge base", "input": {"name": "input", "type": "string", "value": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "max_length": 0}, "datasets": [2], "manual_confirmation": false}, "flow_data": {}}], "edges": [{"id": "xy-edge__f58a3c98-da98-4e82-a949-280fbeb2e0e3start-6243833e-5bcd-4a2d-bcd9-79b44d2e14b7start_target", "level": 1, "source_node_id": "f58a3c98-da98-4e82-a949-280fbeb2e0e3", "target_node_id": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "source_node_type": "start", "target_node_type": "retriever", "is_logical_branch": false, "views": {}}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c-6243833e-5bcd-4a2d-bcd9-79b44d2e14b7-start_target", "level": 2, "source_node_id": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "target_node_id": "27a7a7e3-b91d-406e-a431-825a624be28c", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c-2b4d5885-ed85-42ee-8bf9-ca038b6e97dc-start_source", "level": 3, "source_node_id": "27a7a7e3-b91d-406e-a431-825a624be28c", "target_node_id": "2b4d5885-ed85-42ee-8bf9-ca038b6e97dc", "source_node_type": "llm", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"source": "f58a3c98-da98-4e82-a949-280fbeb2e0e3", "sourceHandle": "start", "target": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "targetHandle": "start_target", "id": "xy-edge__f58a3c98-da98-4e82-a949-280fbeb2e0e3start-6243833e-5bcd-4a2d-bcd9-79b44d2e14b7start_target", "data": {"zindex": 10}, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "level": 1, "sourceType": "start", "targetType": "retriever", "is_logical_branch": false, "condition_id": null}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c-6243833e-5bcd-4a2d-bcd9-79b44d2e14b7-start_target", "source": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "target": "27a7a7e3-b91d-406e-a431-825a624be28c", "targetHandle": "start_target", "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "data": {"zindex": 10}, "level": 2, "sourceType": "retriever", "targetType": "llm", "is_logical_branch": false, "condition_id": null}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c-2b4d5885-ed85-42ee-8bf9-ca038b6e97dc-start_source", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27a7a7e3-b91d-406e-a431-825a624be28c", "target": "2b4d5885-ed85-42ee-8bf9-ca038b6e97dc", "sourceType": "llm", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}], "nodes": [{"id": "f58a3c98-da98-4e82-a949-280fbeb2e0e3", "data": {"desc": "Please enter the document content", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "This is an initial start node description", "variables": {"value": [{"name": "document_content", "type": "string", "required": true, "display_name": "document content"}], "free": {"name": "input_var", "type": "object", "properties": {"document_content": {"name": "document_content", "type": "string", "value": "", "display_name": "document content", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description", "import_to_knowledge_base": false, "import_to_knowledge_base.document_content": 103}, "type": "start", "level": 0, "measured": {"width": 270, "height": 124}, "position": {"x": -205, "y": 100}, "selected": false, "dragging": false}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c", "data": {"desc": "English to Chinese translation", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "Invoke large language models to answer questions or handle tasks", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"id": "ebrZlrGkpe", "dst": "\\u4f60\\u662f\\u4e00\\u540d\\u8f6f\\u4ef6\\u5de5\\u7a0b\\u5e08\\u3002", "src": "You are a software engineer.", "text": "You are a software engineer.", "paraIdx": 0, "metaData": [], "metadata": ""}]}, {"type": "paragraph", "children": [{"id": "BPQGlQOoZe", "dst": "\\u76ee\\u6807\\u662f\\u5c06\\u82f1\\u6587\\u6280\\u672f\\u6587\\u4ef6\\u7ffb\\u8bd1\\u6210\\u4e2d\\u6587\\u3002", "src": "The goal is to translate English technical documents into Chinese.", "text": "The goal is to translate English technical documents into Chinese.", "paraIdx": 1, "metaData": [], "metadata": ""}]}, {"type": "paragraph", "children": [{"id": "VQR6DRGq9z", "dst": "\\u884c\\u4e1a\\u7279\\u5b9a\\u7684\\u7ffb\\u8bd1\\u9700\\u8981\\u7ed3\\u5408\\u77e5\\u8bc6\\u5e93\\u4e2d\\u7684\\u6280\\u672f\\u672f\\u8bed\\u8fdb\\u884c\\u3002", "src": "Industry specific translation needs to be carried out by combining technical terms from the knowledge base.", "text": "Industry specific translation needs to be carried out by combining technical terms from the knowledge base.", "paraIdx": 2, "metaData": [], "metadata": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"type": "mention", "id": "<<6243833e-5bcd-4a2d-bcd9-79b44d2e14b7.outputs.output>>", "character": "Retriever.output", "base": {"title": "Retriever", "type": "retriever", "id": "<<6243833e-5bcd-4a2d-bcd9-79b44d2e14b7.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}, "label": "Retriever.output", "value": "<<6243833e-5bcd-4a2d-bcd9-79b44d2e14b7.outputs.output>>", "name": "Retriever.output"}, "children": [{"bold": true, "text": "11111"}]}, {"text": ""}]}, {"type": "paragraph", "children": [{"id": "VpPNAP3DrV", "dst": "\\u63a5\\u6536\\u7684\\u662f\\u82f1\\u6587\\u6280\\u672f\\u6587\\u4ef6\\uff0c\\u53ea\\u8fd4\\u56de\\u7ffb\\u8bd1\\u7684\\u4e2d\\u6587\\u7ed3\\u679c\\uff0c\\u4e0d\\u9700\\u8981\\u989d\\u5916\\u7684\\u5185\\u5bb9", "src": "Receiving is an English technical document, only the translated Chinese result is returned, no additional content is required", "text": "Receiving ", "paraIdx": 3, "metaData": [], "metadata": ""}, {"type": "mention", "id": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "character": "Start Node.document_content", "base": {"title": "Start Node", "type": "start", "id": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "createVar": {"name": "document_content", "type": "string", "value": "", "display_name": "document content", "required": true, "max_length": 0}, "label": "Start Node.document_content", "value": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "name": "Start Node.document_content"}, "children": [{"bold": true, "text": "11111"}]}, {"id": "VpPNAP3DrV", "dst": "\\u63a5\\u6536\\u7684\\u662f\\u82f1\\u6587\\u6280\\u672f\\u6587\\u4ef6\\uff0c\\u53ea\\u8fd4\\u56de\\u7ffb\\u8bd1\\u7684\\u4e2d\\u6587\\u7ed3\\u679c\\uff0c\\u4e0d\\u9700\\u8981\\u989d\\u5916\\u7684\\u5185\\u5bb9", "src": "Receiving is an English technical document, only the translated Chinese result is returned, no additional content is required", "paraIdx": 3, "metaData": [], "metadata": "", "text": " is an English technical document, only the translated Chinese result is returned, no additional content is required."}]}], "model_config_id": 3, "import_to_knowledge_base": false, "import_to_knowledge_base.output.text": 2}, "type": "llm", "level": 2, "dragging": false, "measured": {"width": 270, "height": 116}, "position": {"x": 511, "y": 103}, "selected": false}, {"id": "2b4d5885-ed85-42ee-8bf9-ca038b6e97dc", "data": {"desc": "Output Chinese results", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "Define the end of a workflow process and output result content", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "content", "variable": "<<27a7a7e3-b91d-406e-a431-825a624be28c.outputs.text>>"}]}, "type": "end", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 919, "y": 120}, "selected": false}, {"type": "retriever", "data": {"title": "Retriever", "entitle": "Retriever", "desc": "Retrieve content from the technical terms knowledge base", "descTools": "Query text content related to user questions from the knowledge base", "endescTools": "Query text content related to user questions from the knowledge base", "outputInfo": {"key": "output", "type": "object", "base": true}, "selected": false, "variable": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "datasets": [2]}, "id": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "position": {"x": 158, "y": 136}, "measured": {"width": 270, "height": 84}, "selected": false, "dragging": false, "level": 1}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', NULL, 0, NULL, '2024-12-02 15:32:58', '2024-12-14 14:13:03', 1),
	(2, 1, 1, 3, '{"nodes": [{"id": "f58a3c98-da98-4e82-a949-280fbeb2e0e3", "data": {"type": "start", "title": "Start Node", "desc": "Please enter the document content", "input": {"name": "input_var", "type": "object", "properties": {"document_content": {"name": "document_content", "type": "string", "value": "", "display_name": "document content", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {"document_content": 103}, "output": {"document_content": 103}}}, "flow_data": {}}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c", "data": {"type": "llm", "title": "LLM", "desc": "English to Chinese translation", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a software engineer.The goal is to translate English technical documents into Chinese.Industry specific translation needs to be carried out by combining technical terms from the knowledge base.Here\'s what you already know <<6243833e-5bcd-4a2d-bcd9-79b44d2e14b7.outputs.output>>Receiving <<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>> is an English technical document, only the translated Chinese result is returned, no additional content is required.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {"text": 2}}}, "flow_data": {}}, {"id": "2b4d5885-ed85-42ee-8bf9-ca038b6e97dc", "data": {"type": "end", "title": "End Node", "desc": "Output Chinese results", "output": {"name": "output", "type": "object", "properties": {"content": {"name": "content", "type": "string", "value": "<<27a7a7e3-b91d-406e-a431-825a624be28c.outputs.text>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}, {"id": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "data": {"type": "retriever", "title": "Retriever", "desc": "Retrieve content from the technical terms knowledge base", "input": {"name": "input", "type": "string", "value": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "max_length": 0}, "datasets": [2], "manual_confirmation": false}, "flow_data": {}}], "edges": [{"id": "xy-edge__f58a3c98-da98-4e82-a949-280fbeb2e0e3start-6243833e-5bcd-4a2d-bcd9-79b44d2e14b7start_target", "level": 1, "source_node_id": "f58a3c98-da98-4e82-a949-280fbeb2e0e3", "target_node_id": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "source_node_type": "start", "target_node_type": "retriever", "is_logical_branch": false, "views": {}}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c-6243833e-5bcd-4a2d-bcd9-79b44d2e14b7-start_target", "level": 2, "source_node_id": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "target_node_id": "27a7a7e3-b91d-406e-a431-825a624be28c", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c-2b4d5885-ed85-42ee-8bf9-ca038b6e97dc-start_source", "level": 3, "source_node_id": "27a7a7e3-b91d-406e-a431-825a624be28c", "target_node_id": "2b4d5885-ed85-42ee-8bf9-ca038b6e97dc", "source_node_type": "llm", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"source": "f58a3c98-da98-4e82-a949-280fbeb2e0e3", "sourceHandle": "start", "target": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "targetHandle": "start_target", "id": "xy-edge__f58a3c98-da98-4e82-a949-280fbeb2e0e3start-6243833e-5bcd-4a2d-bcd9-79b44d2e14b7start_target", "data": {"zindex": 0}, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "level": 1, "sourceType": "start", "targetType": "retriever", "is_logical_branch": false, "condition_id": null}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c-6243833e-5bcd-4a2d-bcd9-79b44d2e14b7-start_target", "source": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "target": "27a7a7e3-b91d-406e-a431-825a624be28c", "targetHandle": "start_target", "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "data": {"zindex": 10}, "level": 2, "sourceType": "retriever", "targetType": "llm", "is_logical_branch": false, "condition_id": null}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c-2b4d5885-ed85-42ee-8bf9-ca038b6e97dc-start_source", "data": {"zindex": 10}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27a7a7e3-b91d-406e-a431-825a624be28c", "target": "2b4d5885-ed85-42ee-8bf9-ca038b6e97dc", "sourceType": "llm", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}], "nodes": [{"id": "f58a3c98-da98-4e82-a949-280fbeb2e0e3", "data": {"desc": "Please enter the document content", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "This is an initial start node description", "variables": {"value": [{"name": "document_content", "type": "string", "required": true, "display_name": "document content"}], "free": {"name": "input_var", "type": "object", "properties": {"document_content": {"name": "document_content", "type": "string", "value": "", "display_name": "document content", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description", "import_to_knowledge_base": false, "import_to_knowledge_base.document_content": 103}, "type": "start", "level": 0, "measured": {"width": 270, "height": 124}, "position": {"x": -205, "y": 100}, "selected": false, "dragging": false}, {"id": "27a7a7e3-b91d-406e-a431-825a624be28c", "data": {"desc": "English to Chinese translation", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "Invoke large language models to answer questions or handle tasks", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"id": "ebrZlrGkpe", "dst": "\\u4f60\\u662f\\u4e00\\u540d\\u8f6f\\u4ef6\\u5de5\\u7a0b\\u5e08\\u3002", "src": "You are a software engineer.", "text": "You are a software engineer.", "paraIdx": 0, "metaData": [], "metadata": ""}]}, {"type": "paragraph", "children": [{"id": "BPQGlQOoZe", "dst": "\\u76ee\\u6807\\u662f\\u5c06\\u82f1\\u6587\\u6280\\u672f\\u6587\\u4ef6\\u7ffb\\u8bd1\\u6210\\u4e2d\\u6587\\u3002", "src": "The goal is to translate English technical documents into Chinese.", "text": "The goal is to translate English technical documents into Chinese.", "paraIdx": 1, "metaData": [], "metadata": ""}]}, {"type": "paragraph", "children": [{"id": "VQR6DRGq9z", "dst": "\\u884c\\u4e1a\\u7279\\u5b9a\\u7684\\u7ffb\\u8bd1\\u9700\\u8981\\u7ed3\\u5408\\u77e5\\u8bc6\\u5e93\\u4e2d\\u7684\\u6280\\u672f\\u672f\\u8bed\\u8fdb\\u884c\\u3002", "src": "Industry specific translation needs to be carried out by combining technical terms from the knowledge base.", "text": "Industry specific translation needs to be carried out by combining technical terms from the knowledge base.", "paraIdx": 2, "metaData": [], "metadata": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"type": "mention", "id": "<<6243833e-5bcd-4a2d-bcd9-79b44d2e14b7.outputs.output>>", "character": "Retriever.output", "base": {"title": "Retriever", "type": "retriever", "id": "<<6243833e-5bcd-4a2d-bcd9-79b44d2e14b7.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}, "label": "Retriever.output", "value": "<<6243833e-5bcd-4a2d-bcd9-79b44d2e14b7.outputs.output>>", "name": "Retriever.output"}, "children": [{"bold": true, "text": "11111"}]}, {"text": ""}]}, {"type": "paragraph", "children": [{"id": "VpPNAP3DrV", "dst": "\\u63a5\\u6536\\u7684\\u662f\\u82f1\\u6587\\u6280\\u672f\\u6587\\u4ef6\\uff0c\\u53ea\\u8fd4\\u56de\\u7ffb\\u8bd1\\u7684\\u4e2d\\u6587\\u7ed3\\u679c\\uff0c\\u4e0d\\u9700\\u8981\\u989d\\u5916\\u7684\\u5185\\u5bb9", "src": "Receiving is an English technical document, only the translated Chinese result is returned, no additional content is required", "text": "Receiving ", "paraIdx": 3, "metaData": [], "metadata": ""}, {"type": "mention", "id": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "character": "Start Node.document_content", "base": {"title": "Start Node", "type": "start", "id": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "createVar": {"name": "document_content", "type": "string", "value": "", "display_name": "document content", "required": true, "max_length": 0}, "label": "Start Node.document_content", "value": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "name": "Start Node.document_content"}, "children": [{"bold": true, "text": "11111"}]}, {"id": "VpPNAP3DrV", "dst": "\\u63a5\\u6536\\u7684\\u662f\\u82f1\\u6587\\u6280\\u672f\\u6587\\u4ef6\\uff0c\\u53ea\\u8fd4\\u56de\\u7ffb\\u8bd1\\u7684\\u4e2d\\u6587\\u7ed3\\u679c\\uff0c\\u4e0d\\u9700\\u8981\\u989d\\u5916\\u7684\\u5185\\u5bb9", "src": "Receiving is an English technical document, only the translated Chinese result is returned, no additional content is required", "paraIdx": 3, "metaData": [], "metadata": "", "text": " is an English technical document, only the translated Chinese result is returned, no additional content is required."}]}], "model_config_id": 3, "import_to_knowledge_base": false, "import_to_knowledge_base.output.text": 2}, "type": "llm", "level": 2, "dragging": false, "measured": {"width": 270, "height": 116}, "position": {"x": 511, "y": 103}, "selected": false}, {"id": "2b4d5885-ed85-42ee-8bf9-ca038b6e97dc", "data": {"desc": "Output Chinese results", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "Define the end of a workflow process and output result content", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "content", "variable": "<<27a7a7e3-b91d-406e-a431-825a624be28c.outputs.text>>"}]}, "type": "end", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 919, "y": 120}, "selected": true}, {"type": "retriever", "data": {"title": "Retriever", "entitle": "Retriever", "desc": "Retrieve content from the technical terms knowledge base", "descTools": "Query text content related to user questions from the knowledge base", "endescTools": "Query text content related to user questions from the knowledge base", "outputInfo": {"key": "output", "type": "object", "base": true}, "selected": false, "variable": "<<f58a3c98-da98-4e82-a949-280fbeb2e0e3.outputs.document_content>>", "datasets": [2]}, "id": "6243833e-5bcd-4a2d-bcd9-79b44d2e14b7", "position": {"x": 158, "y": 136}, "measured": {"width": 270, "height": 84}, "selected": false, "dragging": false, "level": 1}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', 'null', 1, '2024-12-14 13:50:30', '2024-12-02 16:00:49', '2024-12-14 13:50:30', 1),
	(3, 1, 1, 4, '{"nodes": [{"id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b", "data": {"type": "start", "title": "start node", "desc": "Enter daily job responsibilities", "input": {"name": "input_var", "type": "object", "properties": {"work_content": {"name": "work_content", "type": "string", "value": "", "display_name": "", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "818ba66a-be06-4032-ac9f-20838808ce9e", "data": {"type": "llm", "title": "LLM", "desc": "Analyze daily work content and combine it into a weekly report in the specified format", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a weekly report generation assistant. Please analyze and organize the weekly report according to the user input content in the following weekly report format. If the user does not enter the next week\'s plan, infer the next week\'s plan based on this week\'s work content.###User input content:<<f4788d80-42bb-40b4-8ce3-f8f4e8767e0b.outputs.work_content>>The format of the weekly report is as follows:-Title: Extraction of user input content-**This week\'s work summary**:What tasks have been completed this week?Which tasks are particularly important?-Next week\'s plan:What are the main tasks for next week?Are there any special requirements? If the user does not mention it, do not output it.Do not arbitrarily output content that is not mentioned in the user content, and ignore any items that are not extracted without prompts.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "16c27c97-79b9-45ea-8e29-e301b66a7e0f", "data": {"type": "end", "title": "end node", "desc": "Weekly report summary", "output": {"name": "output", "type": "object", "properties": {"results": {"name": "results", "type": "string", "value": "<<818ba66a-be06-4032-ac9f-20838808ce9e.outputs.text>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}], "edges": [{"id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b-818ba66a-be06-4032-ac9f-20838808ce9e-start", "level": 1, "source_node_id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b", "target_node_id": "818ba66a-be06-4032-ac9f-20838808ce9e", "source_node_type": "start", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "818ba66a-be06-4032-ac9f-20838808ce9e-16c27c97-79b9-45ea-8e29-e301b66a7e0f-start_source", "level": 2, "source_node_id": "818ba66a-be06-4032-ac9f-20838808ce9e", "target_node_id": "16c27c97-79b9-45ea-8e29-e301b66a7e0f", "source_node_type": "llm", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b-818ba66a-be06-4032-ac9f-20838808ce9e-start", "data": {"zindex": 10}, "level": 1, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b", "target": "818ba66a-be06-4032-ac9f-20838808ce9e", "sourceType": "start", "targetType": "llm", "condition_id": null, "sourceHandle": "start", "is_logical_branch": false}, {"id": "818ba66a-be06-4032-ac9f-20838808ce9e-16c27c97-79b9-45ea-8e29-e301b66a7e0f-start_source", "data": {"zindex": 0}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "818ba66a-be06-4032-ac9f-20838808ce9e", "target": "16c27c97-79b9-45ea-8e29-e301b66a7e0f", "selected": false, "sourceType": "llm", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}], "nodes": [{"id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b", "data": {"desc": "Enter daily job responsibilities", "title": "start node", "entitle": "Start Node", "selected": false, "descTools": "\\u8fd9\\u662f\\u4e00\\u4e2a\\u521d\\u59cb\\u5316\\u5f00\\u59cb\\u8282\\u70b9\\u63cf\\u8ff0", "variables": {"value": [{"name": "work_content", "type": "string", "required": true, "display_name": ""}], "free": {"name": "input_var", "type": "object", "properties": {"work_content": {"name": "work_content", "type": "string", "value": "", "display_name": "", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description"}, "type": "start", "level": 0, "dragging": false, "measured": {"width": 270, "height": 124}, "position": {"x": 89, "y": -6}, "selected": false}, {"id": "818ba66a-be06-4032-ac9f-20838808ce9e", "data": {"desc": "Analyze daily work content and combine it into a weekly report in the specified format", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": ""}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a weekly report generation assistant. Please analyze and organize the weekly report according to the user input content in the following weekly report format. If the user does not enter the next week\'s plan, infer the next week\'s plan based on this week\'s work content."}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "###User input content:"}]}, {"type": "paragraph", "children": [{"text": ""}, {"id": "<<f4788d80-42bb-40b4-8ce3-f8f4e8767e0b.outputs.work_content>>", "base": {"id": "<<f4788d80-42bb-40b4-8ce3-f8f4e8767e0b.outputs.work_content>>", "name": "start node.work_content", "type": "start", "label": "start node.work_content", "title": "start node", "value": "<<f4788d80-42bb-40b4-8ce3-f8f4e8767e0b.outputs.work_content>>", "createVar": {"name": "work_content", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "start node.work_content"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "The format of the weekly report is as follows:"}]}, {"type": "paragraph", "children": [{"text": "-Title: Extraction of user input content"}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "-**This week\'s work summary**:"}]}, {"type": "paragraph", "children": [{"text": "What tasks have been completed this week?"}]}, {"type": "paragraph", "children": [{"text": "Which tasks are particularly important?"}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "-Next week\'s plan:"}]}, {"type": "paragraph", "children": [{"text": "What are the main tasks for next week?"}]}, {"type": "paragraph", "children": [{"text": "Are there any special requirements? If the user does not mention it, do not output it."}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "Do not arbitrarily output content that is not mentioned in the user content, and ignore any items that are not extracted without prompts."}]}]}, "type": "llm", "level": 1, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 514, "y": 90}, "selected": false}, {"id": "16c27c97-79b9-45ea-8e29-e301b66a7e0f", "data": {"desc": "Weekly report summary", "title": "end node", "entitle": "End Node", "selected": false, "descTools": "\\u5b9a\\u4e49\\u4e00\\u4e2a\\u5de5\\u4f5c\\u6d41\\u7684\\u6d41\\u7a0b\\u7ed3\\u675f\\u548c\\u8f93\\u51fa\\u7ed3\\u679c\\u5185\\u5bb9", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "results", "variable": "<<818ba66a-be06-4032-ac9f-20838808ce9e.outputs.text>>"}]}, "type": "end", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 953, "y": 33}, "selected": false}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', NULL, 0, NULL, '2024-12-02 15:23:48', '2024-12-14 14:13:12', 1),
	(4, 1, 1, 4, '{"nodes": [{"id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b", "data": {"type": "start", "title": "start node", "desc": "Enter daily job responsibilities", "input": {"name": "input_var", "type": "object", "properties": {"work_content": {"name": "work_content", "type": "string", "value": "", "display_name": "", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "818ba66a-be06-4032-ac9f-20838808ce9e", "data": {"type": "llm", "title": "LLM", "desc": "Analyze daily work content and combine it into a weekly report in the specified format", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a weekly report generation assistant. Please analyze and organize the weekly report according to the user input content in the following weekly report format. If the user does not enter the next week\'s plan, infer the next week\'s plan based on this week\'s work content.###User input content:<<f4788d80-42bb-40b4-8ce3-f8f4e8767e0b.outputs.work_content>>The format of the weekly report is as follows:-Title: Extraction of user input content-**This week\'s work summary**:What tasks have been completed this week?Which tasks are particularly important?-Next week\'s plan:What are the main tasks for next week?Are there any special requirements? If the user does not mention it, do not output it.Do not arbitrarily output content that is not mentioned in the user content, and ignore any items that are not extracted without prompts.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "16c27c97-79b9-45ea-8e29-e301b66a7e0f", "data": {"type": "end", "title": "end node", "desc": "Weekly report summary", "output": {"name": "output", "type": "object", "properties": {"results": {"name": "results", "type": "string", "value": "<<818ba66a-be06-4032-ac9f-20838808ce9e.outputs.text>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}], "edges": [{"id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b-818ba66a-be06-4032-ac9f-20838808ce9e-start", "level": 1, "source_node_id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b", "target_node_id": "818ba66a-be06-4032-ac9f-20838808ce9e", "source_node_type": "start", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "818ba66a-be06-4032-ac9f-20838808ce9e-16c27c97-79b9-45ea-8e29-e301b66a7e0f-start_source", "level": 2, "source_node_id": "818ba66a-be06-4032-ac9f-20838808ce9e", "target_node_id": "16c27c97-79b9-45ea-8e29-e301b66a7e0f", "source_node_type": "llm", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b-818ba66a-be06-4032-ac9f-20838808ce9e-start", "data": {"zindex": 0}, "level": 1, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b", "target": "818ba66a-be06-4032-ac9f-20838808ce9e", "sourceType": "start", "targetType": "llm", "condition_id": null, "sourceHandle": "start", "is_logical_branch": false}, {"id": "818ba66a-be06-4032-ac9f-20838808ce9e-16c27c97-79b9-45ea-8e29-e301b66a7e0f-start_source", "data": {"zindex": 10}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "818ba66a-be06-4032-ac9f-20838808ce9e", "target": "16c27c97-79b9-45ea-8e29-e301b66a7e0f", "selected": false, "sourceType": "llm", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}], "nodes": [{"id": "f4788d80-42bb-40b4-8ce3-f8f4e8767e0b", "data": {"desc": "Enter daily job responsibilities", "title": "start node", "entitle": "Start Node", "selected": false, "descTools": "\\u8fd9\\u662f\\u4e00\\u4e2a\\u521d\\u59cb\\u5316\\u5f00\\u59cb\\u8282\\u70b9\\u63cf\\u8ff0", "variables": {"free": {"name": "input_var", "type": "object", "properties": {"work_content": {"name": "work_content", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "display_name": "Input Object Variable"}, "value": [{"name": "work_content", "type": "string", "required": true, "display_name": ""}]}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description"}, "type": "start", "level": 0, "dragging": false, "measured": {"width": 270, "height": 124}, "position": {"x": 89, "y": -6}, "selected": false}, {"id": "818ba66a-be06-4032-ac9f-20838808ce9e", "data": {"desc": "Analyze daily work content and combine it into a weekly report in the specified format", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": ""}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a weekly report generation assistant. Please analyze and organize the weekly report according to the user input content in the following weekly report format. If the user does not enter the next week\'s plan, infer the next week\'s plan based on this week\'s work content."}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "###User input content:"}]}, {"type": "paragraph", "children": [{"text": ""}, {"id": "<<f4788d80-42bb-40b4-8ce3-f8f4e8767e0b.outputs.work_content>>", "base": {"id": "<<f4788d80-42bb-40b4-8ce3-f8f4e8767e0b.outputs.work_content>>", "name": "start node.work_content", "type": "start", "label": "start node.work_content", "title": "start node", "value": "<<f4788d80-42bb-40b4-8ce3-f8f4e8767e0b.outputs.work_content>>", "createVar": {"name": "work_content", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "start node.work_content"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "The format of the weekly report is as follows:"}]}, {"type": "paragraph", "children": [{"text": "-Title: Extraction of user input content"}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "-**This week\'s work summary**:"}]}, {"type": "paragraph", "children": [{"text": "What tasks have been completed this week?"}]}, {"type": "paragraph", "children": [{"text": "Which tasks are particularly important?"}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "-Next week\'s plan:"}]}, {"type": "paragraph", "children": [{"text": "What are the main tasks for next week?"}]}, {"type": "paragraph", "children": [{"text": "Are there any special requirements? If the user does not mention it, do not output it."}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "Do not arbitrarily output content that is not mentioned in the user content, and ignore any items that are not extracted without prompts."}]}]}, "type": "llm", "level": 1, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 514, "y": 90}, "selected": false}, {"id": "16c27c97-79b9-45ea-8e29-e301b66a7e0f", "data": {"desc": "Weekly report summary", "title": "end node", "entitle": "End Node", "selected": false, "descTools": "\\u5b9a\\u4e49\\u4e00\\u4e2a\\u5de5\\u4f5c\\u6d41\\u7684\\u6d41\\u7a0b\\u7ed3\\u675f\\u548c\\u8f93\\u51fa\\u7ed3\\u679c\\u5185\\u5bb9", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "results", "variable": "<<818ba66a-be06-4032-ac9f-20838808ce9e.outputs.text>>"}]}, "type": "end", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 953, "y": 33}, "selected": true}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', 'null', 1, '2024-12-13 07:21:08', '2024-12-02 19:59:31', '2024-12-13 07:21:08', 1),
	(5, 1, 1, 6, '{"nodes": [{"id": "6a049c0f-477b-429a-8089-c0e1c907da18", "data": {"type": "start", "title": "Start Node", "desc": "Input job requirements.", "input": {"name": "input_var", "type": "object", "properties": {"requirementField": {"name": "requirementField", "type": "string", "value": "", "display_name": "requirement", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "53505450-f4e5-4ccd-bb6e-fefa45d7af6f", "data": {"type": "end", "title": "End Node", "desc": "Output the final resume information.", "output": {"name": "output", "type": "object", "properties": {"finishResume": {"name": "finishResume", "type": "string", "value": "<<e07f36ad-3051-4db0-949d-d33eca44355b.outputs.text>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}, {"id": "e07f36ad-3051-4db0-949d-d33eca44355b", "data": {"type": "agent", "title": "Resume Agent", "desc": "This agent is designed to filter and extract the most relevant resumes based on the input keywords.", "input": {"name": "input", "type": "object", "properties": {"requirement": {"name": "requirement", "type": "string", "value": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "max_length": 0}}, "display_name": "", "to_string_keys": ""}, "agent_id": 2, "ability_id": 2, "prompt": {"system": null, "user": {"name": "user", "type": "string", "value": "Based on the input job requirements<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>, return the resumes with the highest matching degree from the knowledge base.", "max_length": 0}, "assistant": null}, "retrieval_task_datasets": [], "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}], "edges": [{"id": "6a049c0f-477b-429a-8089-c0e1c907da18-e07f36ad-3051-4db0-949d-d33eca44355b-start", "level": 1, "source_node_id": "6a049c0f-477b-429a-8089-c0e1c907da18", "target_node_id": "e07f36ad-3051-4db0-949d-d33eca44355b", "source_node_type": "start", "target_node_type": "agent", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__e07f36ad-3051-4db0-949d-d33eca44355bstart_source-53505450-f4e5-4ccd-bb6e-fefa45d7af6fstart_target", "level": 2, "source_node_id": "e07f36ad-3051-4db0-949d-d33eca44355b", "target_node_id": "53505450-f4e5-4ccd-bb6e-fefa45d7af6f", "source_node_type": "agent", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"id": "6a049c0f-477b-429a-8089-c0e1c907da18-e07f36ad-3051-4db0-949d-d33eca44355b-start", "source": "6a049c0f-477b-429a-8089-c0e1c907da18", "target": "e07f36ad-3051-4db0-949d-d33eca44355b", "sourceHandle": "start", "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "data": {"zindex": 0}, "level": 1, "sourceType": "start", "targetType": "agent", "is_logical_branch": false, "condition_id": null}, {"source": "e07f36ad-3051-4db0-949d-d33eca44355b", "sourceHandle": "start_source", "target": "53505450-f4e5-4ccd-bb6e-fefa45d7af6f", "targetHandle": "start_target", "id": "xy-edge__e07f36ad-3051-4db0-949d-d33eca44355bstart_source-53505450-f4e5-4ccd-bb6e-fefa45d7af6fstart_target", "data": {"zindex": 10}, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "level": 2, "sourceType": "agent", "targetType": "end", "is_logical_branch": false, "condition_id": null}], "nodes": [{"id": "6a049c0f-477b-429a-8089-c0e1c907da18", "data": {"desc": "Input job requirements.", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "This is an initial start node description", "variables": {"value": [{"name": "requirementField", "type": "string", "required": true, "display_name": "requirement"}], "free": {"name": "input_var", "type": "object", "properties": {"requirementField": {"name": "requirementField", "type": "string", "value": "", "display_name": "requirement", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description"}, "type": "start", "level": 0, "dragging": false, "measured": {"width": 270, "height": 134}, "position": {"x": 62, "y": 90}, "selected": false}, {"id": "53505450-f4e5-4ccd-bb6e-fefa45d7af6f", "data": {"desc": "Output the final resume information.", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "Define the end of a workflow process and output result content", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "finishResume", "variable": "<<e07f36ad-3051-4db0-949d-d33eca44355b.outputs.text>>"}]}, "type": "end", "level": 2, "dragging": false, "measured": {"width": 270, "height": 89}, "position": {"x": 750, "y": 109}, "selected": false}, {"type": "agent", "data": {"title": "Resume Agent", "entitle": "Agent", "desc": "This agent is designed to filter and extract the most relevant resumes based on the input keywords.", "descTools": "\\u8fd9\\u662f\\u4e00\\u4e2a\\u521d\\u59cb\\u5316Agent\\u8282\\u70b9\\u63cf\\u8ff0", "endescTools": "This is an initial Agent node description", "outputInfo": {"key": "text", "type": "string", "base": true}, "baseData": {"agent_id": 2, "app_id": 5, "name": "Resume Agent", "description": "This agent is designed to filter and extract the most relevant resumes based on the input keywords.", "icon": "agent", "icon_background": "", "nickname": "administrator", "avatar": null, "title": "Resume Agent"}, "selected": false, "infoData": {"app": {"app_id": 5, "user_id": 1, "name": "Resume Agent", "description": "This agent is designed to filter and extract the most relevant resumes based on the input keywords.", "icon": "1", "icon_background": "", "is_public": 1, "enable_api": 0, "publish_status": 1, "created_time": "2024-12-02T15:47:01", "status": 1, "api_url": "/v1/app-api/d3706472c9bdf2459145e9c8ace5c7b3/run-docs"}, "agent": {"agent_id": 2, "user_id": 1, "obligations": "As an HR professional, you analyze the job requirements provided and retrieve the most matching resume information from the knowledge base.\\n", "input_variables": {"name": "input", "type": "object", "properties": {"requirement": {"name": "requirement", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "requirement"}}, "display_name": "", "to_string_keys": ""}, "auto_match_ability": 1, "default_output_format": 1, "m_config_id": 3, "allow_upload_file": 0, "publish_status": 1, "published_time": "2024-12-02T17:21:56", "created_time": "2024-12-02T16:15:12", "status": 1}, "agent_dataset_relation_list": [{"dataset_id": 1, "app_id": 7, "name": "Resume Database"}], "agent_abilities_list": [{"agent_ability_id": 2, "name": "Match the most suitable resume.", "content": "Based on the input job requirements, calculate the resumes with the highest matching degree and return the corresponding resume information.", "output_format": 0, "status": 1}], "m_configurations_list": [{"m_config_id": 3, "m_id": 4, "m_name": "gpt-4o", "supplier_id": 1, "supplier_name": "OpenAI"}, {"m_config_id": 5, "m_id": 5, "m_name": "gpt-4o-mini", "supplier_id": 1, "supplier_name": "OpenAI"}, {"m_config_id": 6, "m_id": 6, "m_name": "gpt-4-turbo", "supplier_id": 1, "supplier_name": "OpenAI"}, {"m_config_id": 7, "m_id": 7, "m_name": "gpt-4-1106-preview", "supplier_id": 1, "supplier_name": "OpenAI"}, {"m_config_id": 8, "m_id": 8, "m_name": "gpt-3.5-turbo", "supplier_id": 1, "supplier_name": "OpenAI"}], "is_creator": 1, "creator_nickname": "administrator"}, "ability_id": 2, "import_to_knowledge_base": false, "variable.requirement": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "userEditor": [{"type": "paragraph", "children": [{"text": "Based on the input job requirements"}, {"id": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "base": {"id": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "name": "Start Node.requirementField", "type": "start", "label": "Start Node.requirementField", "title": "Start Node", "value": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "createVar": {"name": "requirementField", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "requirement"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.requirementField"}, {"text": ", return the resumes with the highest matching degree from the knowledge base."}]}]}, "id": "e07f36ad-3051-4db0-949d-d33eca44355b", "position": {"x": 409, "y": 110}, "measured": {"width": 270, "height": 89}, "selected": true, "level": 1, "dragging": false}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', NULL, 0, NULL, '2024-12-02 17:22:39', '2024-12-14 14:13:19', 1),
	(6, 1, 1, 6, '{"nodes": [{"id": "6a049c0f-477b-429a-8089-c0e1c907da18", "data": {"type": "start", "title": "Start Node", "desc": "Input job requirements.", "input": {"name": "input_var", "type": "object", "properties": {"requirementField": {"name": "requirementField", "type": "string", "value": "", "display_name": "requirement", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "53505450-f4e5-4ccd-bb6e-fefa45d7af6f", "data": {"type": "end", "title": "End Node", "desc": "Output the final resume information.", "output": {"name": "output", "type": "object", "properties": {"finishResume": {"name": "finishResume", "type": "string", "value": "<<e07f36ad-3051-4db0-949d-d33eca44355b.outputs.text>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}, {"id": "e07f36ad-3051-4db0-949d-d33eca44355b", "data": {"type": "agent", "title": "Resume Agent", "desc": "This agent is designed to filter and extract the most relevant resumes based on the input keywords.", "input": {"name": "input", "type": "object", "properties": {"requirement": {"name": "requirement", "type": "string", "value": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "max_length": 0}}, "display_name": "", "to_string_keys": ""}, "agent_id": 2, "ability_id": 2, "prompt": {"system": null, "user": {"name": "user", "type": "string", "value": "Based on the input job requirements<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>, return the resumes with the highest matching degree from the knowledge base.", "max_length": 0}, "assistant": null}, "retrieval_task_datasets": [], "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}], "edges": [{"id": "6a049c0f-477b-429a-8089-c0e1c907da18-e07f36ad-3051-4db0-949d-d33eca44355b-start", "level": 1, "source_node_id": "6a049c0f-477b-429a-8089-c0e1c907da18", "target_node_id": "e07f36ad-3051-4db0-949d-d33eca44355b", "source_node_type": "start", "target_node_type": "agent", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__e07f36ad-3051-4db0-949d-d33eca44355bstart_source-53505450-f4e5-4ccd-bb6e-fefa45d7af6fstart_target", "level": 2, "source_node_id": "e07f36ad-3051-4db0-949d-d33eca44355b", "target_node_id": "53505450-f4e5-4ccd-bb6e-fefa45d7af6f", "source_node_type": "agent", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"id": "6a049c0f-477b-429a-8089-c0e1c907da18-e07f36ad-3051-4db0-949d-d33eca44355b-start", "source": "6a049c0f-477b-429a-8089-c0e1c907da18", "target": "e07f36ad-3051-4db0-949d-d33eca44355b", "sourceHandle": "start", "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "data": {"zindex": 0}, "level": 1, "sourceType": "start", "targetType": "agent", "is_logical_branch": false, "condition_id": null}, {"source": "e07f36ad-3051-4db0-949d-d33eca44355b", "sourceHandle": "start_source", "target": "53505450-f4e5-4ccd-bb6e-fefa45d7af6f", "targetHandle": "start_target", "id": "xy-edge__e07f36ad-3051-4db0-949d-d33eca44355bstart_source-53505450-f4e5-4ccd-bb6e-fefa45d7af6fstart_target", "data": {"zindex": 10}, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "level": 2, "sourceType": "agent", "targetType": "end", "is_logical_branch": false, "condition_id": null}], "nodes": [{"id": "6a049c0f-477b-429a-8089-c0e1c907da18", "data": {"desc": "Input job requirements.", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "This is an initial start node description", "variables": {"value": [{"name": "requirementField", "type": "string", "required": true, "display_name": "requirement"}], "free": {"name": "input_var", "type": "object", "properties": {"requirementField": {"name": "requirementField", "type": "string", "value": "", "display_name": "requirement", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description"}, "type": "start", "level": 0, "dragging": false, "measured": {"width": 270, "height": 134}, "position": {"x": 62, "y": 90}, "selected": false}, {"id": "53505450-f4e5-4ccd-bb6e-fefa45d7af6f", "data": {"desc": "Output the final resume information.", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "Define the end of a workflow process and output result content", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "finishResume", "variable": "<<e07f36ad-3051-4db0-949d-d33eca44355b.outputs.text>>"}]}, "type": "end", "level": 2, "dragging": false, "measured": {"width": 270, "height": 89}, "position": {"x": 750, "y": 109}, "selected": false}, {"type": "agent", "data": {"title": "Resume Agent", "entitle": "Agent", "desc": "This agent is designed to filter and extract the most relevant resumes based on the input keywords.", "descTools": "\\u8fd9\\u662f\\u4e00\\u4e2a\\u521d\\u59cb\\u5316Agent\\u8282\\u70b9\\u63cf\\u8ff0", "endescTools": "This is an initial Agent node description", "outputInfo": {"key": "text", "type": "string", "base": true}, "baseData": {"agent_id": 2, "app_id": 5, "name": "Resume Agent", "description": "This agent is designed to filter and extract the most relevant resumes based on the input keywords.", "icon": "agent", "icon_background": "", "nickname": "administrator", "avatar": null, "title": "Resume Agent"}, "selected": false, "infoData": {"app": {"app_id": 5, "user_id": 1, "name": "Resume Agent", "description": "This agent is designed to filter and extract the most relevant resumes based on the input keywords.", "icon": "1", "icon_background": "", "is_public": 1, "enable_api": 0, "publish_status": 1, "created_time": "2024-12-02T15:47:01", "status": 1, "api_url": "/v1/app-api/d3706472c9bdf2459145e9c8ace5c7b3/run-docs"}, "agent": {"agent_id": 2, "user_id": 1, "obligations": "As an HR professional, you analyze the job requirements provided and retrieve the most matching resume information from the knowledge base.\\n", "input_variables": {"name": "input", "type": "object", "properties": {"requirement": {"name": "requirement", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "requirement"}}, "display_name": "", "to_string_keys": ""}, "auto_match_ability": 1, "default_output_format": 1, "m_config_id": 3, "allow_upload_file": 0, "publish_status": 1, "published_time": "2024-12-02T17:21:56", "created_time": "2024-12-02T16:15:12", "status": 1}, "agent_dataset_relation_list": [{"dataset_id": 1, "app_id": 7, "name": "Resume Database"}], "agent_abilities_list": [{"agent_ability_id": 2, "name": "Match the most suitable resume.", "content": "Based on the input job requirements, calculate the resumes with the highest matching degree and return the corresponding resume information.", "output_format": 0, "status": 1}], "m_configurations_list": [{"m_config_id": 3, "m_id": 4, "m_name": "gpt-4o", "supplier_id": 1, "supplier_name": "OpenAI"}, {"m_config_id": 5, "m_id": 5, "m_name": "gpt-4o-mini", "supplier_id": 1, "supplier_name": "OpenAI"}, {"m_config_id": 6, "m_id": 6, "m_name": "gpt-4-turbo", "supplier_id": 1, "supplier_name": "OpenAI"}, {"m_config_id": 7, "m_id": 7, "m_name": "gpt-4-1106-preview", "supplier_id": 1, "supplier_name": "OpenAI"}, {"m_config_id": 8, "m_id": 8, "m_name": "gpt-3.5-turbo", "supplier_id": 1, "supplier_name": "OpenAI"}], "is_creator": 1, "creator_nickname": "administrator"}, "ability_id": 2, "import_to_knowledge_base": false, "variable.requirement": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "userEditor": [{"type": "paragraph", "children": [{"text": "Based on the input job requirements"}, {"id": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "base": {"id": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "name": "Start Node.requirementField", "type": "start", "label": "Start Node.requirementField", "title": "Start Node", "value": "<<6a049c0f-477b-429a-8089-c0e1c907da18.outputs.requirementField>>", "createVar": {"name": "requirementField", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "requirement"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.requirementField"}, {"text": ", return the resumes with the highest matching degree from the knowledge base."}]}]}, "id": "e07f36ad-3051-4db0-949d-d33eca44355b", "position": {"x": 409, "y": 110}, "measured": {"width": 270, "height": 89}, "selected": true, "level": 1, "dragging": false}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', 'null', 1, '2024-12-13 07:18:08', '2024-12-09 11:23:57', '2024-12-13 07:18:08', 1),
	(7, 1, 1, 8, '{"nodes": [{"id": "5695e443-55ae-4cb7-bd11-e950fb8dca83", "data": {"type": "start", "title": "Start Node", "desc": "User problem", "input": {"name": "input_var", "type": "object", "properties": {"problem": {"name": "problem", "type": "string", "value": "", "display_name": "", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "27238b40-a614-4645-b06d-f1c213214400", "data": {"type": "requirement_category", "title": "Requirement Classifier", "desc": "We can set explicit classification conditions for user questions, and let the large language model automatically determine the type of question based on these classification descriptions, thus guiding the conversation in a more accurate and efficient direction.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "model_config_id": 3, "requirement_category": [{"id": "27238b40-a614-4645-b06d-f1c213214400-0", "content": "Pre-sale of goods"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-1", "content": "After-sales support"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-2", "content": "Store platform activities"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-3", "content": "Other problems"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-4", "content": "Logistics consulting"}], "prompt": {"system": {"name": "system", "type": "string", "value": "As a customer service assistant, your job is to first understand the meaning of the latest content sent by the user, and then combine historical context information to classify the latest content of the user.\\nImportant: Your job is not to answer user questions, but to categorize them as required.\\n# Category scenario definition:\\n\\"\\" \\"\\nPre-sale of goods: all inquiries of users on goods or items, including use consultation, recommendation, search, function inquiry, product activity consultation, etc.\\n\\nAfter-sales support: The user\'s consultation is related to after-sales support, including return and replacement, invoice, maintenance, use, order query after-sales support and application operation.\\n\\nStore platform activities: The user\'s consultation does not specify a certain type or type of goods, but asks about the e-commerce platform store activities and activities common to the e-commerce platform, additional benefit points, price insurance, etc.\\n\\nOther problems: such as abnormal payment, repeated questions at the same time, legal and compliance problems, brand consultation, abnormal user emotions, politically sensitive words, legal and regulatory risks, complaints and charges, consumer rights protection or other indistinguishable scenarios.\\n\\nLogistics consulting: User consultation on logistics and delivery related.\\n\\"\\" \\"", "max_length": 0}, "user": null, "assistant": null}}, "flow_data": {}}, {"id": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "data": {"type": "retriever", "title": "Retriever", "desc": "Search pre-sale knowledge base for pre-sale questions.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "datasets": [4], "manual_confirmation": false}, "flow_data": {}}, {"id": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "data": {"type": "retriever", "title": "Retriever", "desc": "Logistics consulting. Search logistics consulting knowledge base.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "datasets": [5], "manual_confirmation": false}, "flow_data": {}}, {"id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "data": {"type": "retriever", "title": "Retriever", "desc": "Event related questions, search store platform event knowledge base.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "datasets": [3], "manual_confirmation": false}, "flow_data": {}}, {"id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "data": {"type": "retriever", "title": "Retriever", "desc": "After sales questions, search after sales support knowledge base.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "datasets": [6], "manual_confirmation": false}, "flow_data": {}}, {"id": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "data": {"type": "llm", "title": "LLM", "desc": "The large model is combined with the retrieval results to give the optimal response technique.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a customer service assistant, mainly solve the customer\'s pre-sales problems. The user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Here\'s what you already know <<367c312a-156c-47c3-bee7-9ab3cc8ae994.outputs.output>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "data": {"type": "llm", "title": "LLM", "desc": "The large model is combined with the retrieval results to give the optimal response technique.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a customer service assistant, mainly solving logistics-related problems asked by users. The user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Here\'s what you already know <<fa98b24e-3acb-4162-9b9a-34faa58966ff.outputs.output>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "data": {"type": "llm", "title": "LLM", "desc": "The large model is combined with the retrieval results to give the optimal response technique.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a customer service assistant, and your main task is to solve the activity problems asked by users. The user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Here\'s what you already know <<8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6.outputs.output>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "948da25f-5548-4a3b-9b47-e17466117c07", "data": {"type": "llm", "title": "LLM", "desc": "The large model is combined with the retrieval results to give the optimal response technique.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a customer service assistant, mainly solve the customer\'s after-sales problems. The user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Here\'s what you already know <<c9aab117-cd3e-4ef4-994b-6a455473fcf7.outputs.output>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "data": {"type": "llm", "title": "LLM", "desc": "Other questions.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You\'re a customer service assistant, and the user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "data": {"type": "variable_aggregation", "title": "Variable Aggregator", "desc": "", "input": {"name": "input", "type": "object", "properties": {"<<596d82bc-21ec-4b71-89d2-afd9cf72e282.outputs.text>>": {"name": "text", "type": "string", "value": "<<596d82bc-21ec-4b71-89d2-afd9cf72e282.outputs.text>>", "max_length": 0}, "<<f0ba416e-b7f3-4426-8005-c6ac835142e5.outputs.text>>": {"name": "text", "type": "string", "value": "<<f0ba416e-b7f3-4426-8005-c6ac835142e5.outputs.text>>", "max_length": 0}, "<<e4f52032-3fdf-40a2-871a-5a9cf8688d37.outputs.text>>": {"name": "text", "type": "string", "value": "<<e4f52032-3fdf-40a2-871a-5a9cf8688d37.outputs.text>>", "max_length": 0}, "<<948da25f-5548-4a3b-9b47-e17466117c07.outputs.text>>": {"name": "text", "type": "string", "value": "<<948da25f-5548-4a3b-9b47-e17466117c07.outputs.text>>", "max_length": 0}, "<<d9187a86-abe2-431a-8628-8c7e66e0c5ef.outputs.text>>": {"name": "text", "type": "string", "value": "<<d9187a86-abe2-431a-8628-8c7e66e0c5ef.outputs.text>>", "max_length": 0}}}}, "flow_data": {}}, {"id": "edaa3470-8bd9-4092-a392-67d9a9250bb2", "data": {"type": "end", "title": "End Node", "desc": "The final reply answer.", "output": {"name": "output", "type": "object", "properties": {"answer": {"name": "answer", "type": "string", "value": "<<09953a44-0824-4c3a-a0ea-c4a517f2cadb.outputs.output>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}], "edges": [{"id": "5695e443-55ae-4cb7-bd11-e950fb8dca83-27238b40-a614-4645-b06d-f1c213214400-start", "level": 1, "source_node_id": "5695e443-55ae-4cb7-bd11-e950fb8dca83", "target_node_id": "27238b40-a614-4645-b06d-f1c213214400", "source_node_type": "start", "target_node_type": "requirement_category", "is_logical_branch": false, "views": {}}, {"id": "27238b40-a614-4645-b06d-f1c213214400-d9187a86-abe2-431a-8628-8c7e66e0c5ef-3", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "source_node_type": "requirement_category", "target_node_type": "llm", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-3"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-c9aab117-cd3e-4ef4-994b-6a455473fcf7-1", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "source_node_type": "requirement_category", "target_node_type": "retriever", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-1"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6-2", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "source_node_type": "requirement_category", "target_node_type": "retriever", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-2"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-fa98b24e-3acb-4162-9b9a-34faa58966ff-4", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "source_node_type": "requirement_category", "target_node_type": "retriever", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-4"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-367c312a-156c-47c3-bee7-9ab3cc8ae994-0", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "source_node_type": "requirement_category", "target_node_type": "retriever", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-0"}, {"id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7-948da25f-5548-4a3b-9b47-e17466117c07-start_source", "level": 3, "source_node_id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "target_node_id": "948da25f-5548-4a3b-9b47-e17466117c07", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6-e4f52032-3fdf-40a2-871a-5a9cf8688d37-start_source", "level": 3, "source_node_id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "target_node_id": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "fa98b24e-3acb-4162-9b9a-34faa58966ff-f0ba416e-b7f3-4426-8005-c6ac835142e5-start_source", "level": 3, "source_node_id": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "target_node_id": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "367c312a-156c-47c3-bee7-9ab3cc8ae994-596d82bc-21ec-4b71-89d2-afd9cf72e282-start_source", "level": 3, "source_node_id": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "target_node_id": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__d9187a86-abe2-431a-8628-8c7e66e0c5efstart_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "level": 3, "source_node_id": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "596d82bc-21ec-4b71-89d2-afd9cf72e282-09953a44-0824-4c3a-a0ea-c4a517f2cadb-start_source", "level": 4, "source_node_id": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__948da25f-5548-4a3b-9b47-e17466117c07start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "level": 4, "source_node_id": "948da25f-5548-4a3b-9b47-e17466117c07", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__e4f52032-3fdf-40a2-871a-5a9cf8688d37start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "level": 4, "source_node_id": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__f0ba416e-b7f3-4426-8005-c6ac835142e5start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "level": 4, "source_node_id": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb-edaa3470-8bd9-4092-a392-67d9a9250bb2-start_source", "level": 5, "source_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "target_node_id": "edaa3470-8bd9-4092-a392-67d9a9250bb2", "source_node_type": "variable_aggregation", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"id": "5695e443-55ae-4cb7-bd11-e950fb8dca83-27238b40-a614-4645-b06d-f1c213214400-start", "data": {"zindex": 10}, "level": 1, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "5695e443-55ae-4cb7-bd11-e950fb8dca83", "target": "27238b40-a614-4645-b06d-f1c213214400", "selected": false, "sourceType": "start", "targetType": "requirement_category", "condition_id": null, "sourceHandle": "start", "is_logical_branch": false}, {"id": "27238b40-a614-4645-b06d-f1c213214400-d9187a86-abe2-431a-8628-8c7e66e0c5ef-3", "data": {"zindex": 10}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "selected": false, "sourceType": "requirement_category", "targetType": "llm", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "3", "is_logical_branch": true}, {"id": "27238b40-a614-4645-b06d-f1c213214400-c9aab117-cd3e-4ef4-994b-6a455473fcf7-1", "data": {"zindex": 10}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "sourceType": "requirement_category", "targetType": "retriever", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "1", "is_logical_branch": true}, {"id": "27238b40-a614-4645-b06d-f1c213214400-8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6-2", "data": {"zindex": 10}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "sourceType": "requirement_category", "targetType": "retriever", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "2", "is_logical_branch": true}, {"id": "27238b40-a614-4645-b06d-f1c213214400-fa98b24e-3acb-4162-9b9a-34faa58966ff-4", "data": {"zindex": 10}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "sourceType": "requirement_category", "targetType": "retriever", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "4", "is_logical_branch": true}, {"id": "27238b40-a614-4645-b06d-f1c213214400-367c312a-156c-47c3-bee7-9ab3cc8ae994-0", "data": {"zindex": 10}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "sourceType": "requirement_category", "targetType": "retriever", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "0", "is_logical_branch": true}, {"id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7-948da25f-5548-4a3b-9b47-e17466117c07-start_source", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "target": "948da25f-5548-4a3b-9b47-e17466117c07", "sourceType": "retriever", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6-e4f52032-3fdf-40a2-871a-5a9cf8688d37-start_source", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "target": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "sourceType": "retriever", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "fa98b24e-3acb-4162-9b9a-34faa58966ff-f0ba416e-b7f3-4426-8005-c6ac835142e5-start_source", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "target": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "sourceType": "retriever", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "367c312a-156c-47c3-bee7-9ab3cc8ae994-596d82bc-21ec-4b71-89d2-afd9cf72e282-start_source", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "target": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "sourceType": "retriever", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "xy-edge__d9187a86-abe2-431a-8628-8c7e66e0c5efstart_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}, {"id": "596d82bc-21ec-4b71-89d2-afd9cf72e282-09953a44-0824-4c3a-a0ea-c4a517f2cadb-start_source", "data": {"zindex": 0}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "xy-edge__948da25f-5548-4a3b-9b47-e17466117c07start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "data": {"zindex": 0}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "948da25f-5548-4a3b-9b47-e17466117c07", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}, {"id": "xy-edge__e4f52032-3fdf-40a2-871a-5a9cf8688d37start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "data": {"zindex": 0}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}, {"id": "xy-edge__f0ba416e-b7f3-4426-8005-c6ac835142e5start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "data": {"zindex": 0}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}, {"id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb-edaa3470-8bd9-4092-a392-67d9a9250bb2-start_source", "data": {"zindex": 0}, "level": 5, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "target": "edaa3470-8bd9-4092-a392-67d9a9250bb2", "sourceType": "variable_aggregation", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}], "nodes": [{"id": "5695e443-55ae-4cb7-bd11-e950fb8dca83", "data": {"desc": "User problem", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "\\u8fd9\\u662f\\u4e00\\u4e2a\\u521d\\u59cb\\u5316\\u5f00\\u59cb\\u8282\\u70b9\\u63cf\\u8ff0", "variables": {"value": [{"name": "problem", "type": "string", "required": true, "display_name": ""}], "free": {"name": "input_var", "type": "object", "properties": {"problem": {"name": "problem", "type": "string", "value": "", "display_name": "", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description", "requires_upload": false}, "type": "start", "level": 0, "dragging": false, "measured": {"width": 270, "height": 124}, "position": {"x": -1974.0392201368463, "y": -348.824116437244}, "selected": false}, {"id": "27238b40-a614-4645-b06d-f1c213214400", "data": {"desc": "We can set explicit classification conditions for user questions, and let the large language model automatically determine the type of question based on these classification descriptions, thus guiding the conversation in a more accurate and efficient direction.", "model": 3, "title": "Requirement Classifier", "prompt": "As a customer service assistant, your job is to first understand the meaning of the latest content sent by the user, and then combine historical context information to classify the latest content of the user.\\nImportant: Your job is not to answer user questions, but to categorize them as required.\\n# Category scenario definition:\\n\\"\\" \\"\\nPre-sale of goods: all inquiries of users on goods or items, including use consultation, recommendation, search, function inquiry, product activity consultation, etc.\\n\\nAfter-sales support: The user\'s consultation is related to after-sales support, including return and replacement, invoice, maintenance, use, order query after-sales support and application operation.\\n\\nStore platform activities: The user\'s consultation does not specify a certain type or type of goods, but asks about the e-commerce platform store activities and activities common to the e-commerce platform, additional benefit points, price insurance, etc.\\n\\nOther problems: such as abnormal payment, repeated questions at the same time, legal and compliance problems, brand consultation, abnormal user emotions, politically sensitive words, legal and regulatory risks, complaints and charges, consumer rights protection or other indistinguishable scenarios.\\n\\nLogistics consulting: User consultation on logistics and delivery related.\\n\\"\\" \\"", "entitle": "Requirement Classifier", "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u5b9a\\u4e49\\u7528\\u6237\\u95ee\\u9898\\u7684\\u5206\\u7c7b\\u6761\\u4ef6\\uff0c\\u901a\\u8fc7\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u5206\\u6790\\u51fa\\u95ee\\u9898\\u6240\\u5c5e\\u7684\\u5206\\u7c7b", "wrap_list": [{"que": "Pre-sale of goods"}, {"que": "After-sales support"}, {"que": "Store platform activities"}, {"que": "Other problems"}, {"que": "Logistics consulting"}], "outputInfo": {"key": "category_name", "base": true, "type": "string"}, "endescTools": "Define classification conditions for user questions and analyze the category using large language models"}, "type": "requirement_category", "level": 1, "dragging": false, "measured": {"width": 270, "height": 324}, "position": {"x": -1565.1108704532685, "y": -449.5731949771793}, "selected": false}, {"id": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "data": {"desc": "Search pre-sale knowledge base for pre-sale questions.", "title": "Retriever", "entitle": "Retriever", "datasets": [4], "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u4ece\\u77e5\\u8bc6\\u5e93\\u4e2d\\u67e5\\u8be2\\u4e0e\\u7528\\u6237\\u7684\\u95ee\\u9898\\u76f8\\u5173\\u7684\\u6587\\u672c\\u5185\\u5bb9", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Query text content related to user questions from the knowledge base"}, "type": "retriever", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -919.898496434383, "y": -478.78639619492424}, "selected": true}, {"id": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "data": {"desc": "Logistics consulting. Search logistics consulting knowledge base.", "title": "Retriever", "entitle": "Retriever", "datasets": [5], "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u4ece\\u77e5\\u8bc6\\u5e93\\u4e2d\\u67e5\\u8be2\\u4e0e\\u7528\\u6237\\u7684\\u95ee\\u9898\\u76f8\\u5173\\u7684\\u6587\\u672c\\u5185\\u5bb9", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Query text content related to user questions from the knowledge base"}, "type": "retriever", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -1180.7692394134492, "y": 111.3222715638676}, "selected": false}, {"id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "data": {"desc": "Event related questions, search store platform event knowledge base.", "title": "Retriever", "entitle": "Retriever", "datasets": [3], "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u4ece\\u77e5\\u8bc6\\u5e93\\u4e2d\\u67e5\\u8be2\\u4e0e\\u7528\\u6237\\u7684\\u95ee\\u9898\\u76f8\\u5173\\u7684\\u6587\\u672c\\u5185\\u5bb9", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Query text content related to user questions from the knowledge base"}, "type": "retriever", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -938.9178758518918, "y": -209.81273036501625}, "selected": false}, {"id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "data": {"desc": "After sales questions, search after sales support knowledge base.", "title": "Retriever", "entitle": "Retriever", "datasets": [6], "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u4ece\\u77e5\\u8bc6\\u5e93\\u4e2d\\u67e5\\u8be2\\u4e0e\\u7528\\u6237\\u7684\\u95ee\\u9898\\u76f8\\u5173\\u7684\\u6587\\u672c\\u5185\\u5bb9", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Query text content related to user questions from the knowledge base"}, "type": "retriever", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -922.3395081115708, "y": -333.9017216864935}, "selected": false}, {"id": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "data": {"desc": "The large model is combined with the retrieval results to give the optimal response technique.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": ""}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a customer service assistant, mainly solve the customer\'s pre-sales problems. The user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"id": "<<367c312a-156c-47c3-bee7-9ab3cc8ae994.outputs.output>>", "base": {"id": "<<367c312a-156c-47c3-bee7-9ab3cc8ae994.outputs.output>>", "name": "Retriever.output", "type": "retriever", "label": "Retriever.output", "title": "Retriever", "value": "<<367c312a-156c-47c3-bee7-9ab3cc8ae994.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Retriever.output"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}]}, "type": "llm", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -511.1828802810942, "y": -453.6926985581943}, "selected": false}, {"id": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "data": {"desc": "The large model is combined with the retrieval results to give the optimal response technique.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": ""}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a customer service assistant, mainly solving logistics-related problems asked by users. The user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"id": "<<fa98b24e-3acb-4162-9b9a-34faa58966ff.outputs.output>>", "base": {"id": "<<fa98b24e-3acb-4162-9b9a-34faa58966ff.outputs.output>>", "name": "Retriever.output", "type": "retriever", "label": "Retriever.output", "title": "Retriever", "value": "<<fa98b24e-3acb-4162-9b9a-34faa58966ff.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Retriever.output"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}], "model_config_id": 3, "import_to_knowledge_base": false}, "type": "llm", "level": 3, "dragging": false, "measured": {"width": 270, "height": 116}, "position": {"x": -707.2567300991792, "y": 93.03911958598746}, "selected": false}, {"id": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "data": {"desc": "The large model is combined with the retrieval results to give the optimal response technique.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a customer service assistant, and your main task is to solve the activity problems asked by users. The user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"id": "<<8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6.outputs.output>>", "base": {"id": "<<8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6.outputs.output>>", "name": "Retriever.output", "type": "retriever", "label": "Retriever.output", "title": "Retriever", "value": "<<8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Retriever.output"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}]}, "type": "llm", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -498.2440722750066, "y": -180.32977851970224}, "selected": false}, {"id": "948da25f-5548-4a3b-9b47-e17466117c07", "data": {"desc": "The large model is combined with the retrieval results to give the optimal response technique.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a customer service assistant, mainly solve the customer\'s after-sales problems. The user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"id": "<<c9aab117-cd3e-4ef4-994b-6a455473fcf7.outputs.output>>", "base": {"id": "<<c9aab117-cd3e-4ef4-994b-6a455473fcf7.outputs.output>>", "name": "Retriever.output", "type": "retriever", "label": "Retriever.output", "title": "Retriever", "value": "<<c9aab117-cd3e-4ef4-994b-6a455473fcf7.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Retriever.output"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}]}, "type": "llm", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -503.1250152003238, "y": -312.44881565282816}, "selected": false}, {"id": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "data": {"desc": "Other questions.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You\'re a customer service assistant, and the user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}]}, "type": "llm", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -555.0326710350135, "y": -34.76352209015464}, "selected": false}, {"id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "data": {"desc": "", "title": "Variable Aggregator", "entitle": "Variable Aggregator", "selected": false, "descTools": "\\u5c06\\u591a\\u8def\\u6761\\u4ef6\\u5206\\u652f\\uff08\\u95ee\\u9898\\u5206\\u7c7b\\u5668/\\u6761\\u4ef6\\u5206\\u652f\\u8282\\u70b9\\u4ea7\\u751f\\u7684\\u5206\\u652f\\uff09\\u7684\\u53d8\\u91cf\\u805a\\u5408\\u6210\\u4e00\\u4e2a\\u53d8\\u91cf\\uff0c\\u4ee5\\u4fbf\\u4e0b\\u6e38\\u8282\\u70b9\\u7edf\\u4e00\\u914d\\u7f6e\\u4f7f\\u7528", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Aggregate variables from multiple conditional branches into one for unified configuration by downstream nodes", "variables_list": ["<<596d82bc-21ec-4b71-89d2-afd9cf72e282.outputs.text>>", "<<f0ba416e-b7f3-4426-8005-c6ac835142e5.outputs.text>>", "<<e4f52032-3fdf-40a2-871a-5a9cf8688d37.outputs.text>>", "<<948da25f-5548-4a3b-9b47-e17466117c07.outputs.text>>", "<<d9187a86-abe2-431a-8628-8c7e66e0c5ef.outputs.text>>"]}, "type": "variable_aggregation", "level": 4, "dragging": false, "measured": {"width": 270, "height": 52}, "position": {"x": 1.8667279305678193, "y": -98.98758657277853}, "selected": false}, {"id": "edaa3470-8bd9-4092-a392-67d9a9250bb2", "data": {"desc": "The final reply answer.", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "\\u5b9a\\u4e49\\u4e00\\u4e2a\\u5de5\\u4f5c\\u6d41\\u7684\\u6d41\\u7a0b\\u7ed3\\u675f\\u548c\\u8f93\\u51fa\\u7ed3\\u679c\\u5185\\u5bb9", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "answer", "variable": "<<09953a44-0824-4c3a-a0ea-c4a517f2cadb.outputs.output>>"}]}, "type": "end", "level": 5, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 422.68764985460007, "y": -119.81675965401224}, "selected": false}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', NULL, 0, NULL, '2024-11-29 11:19:58', '2024-12-14 14:15:07', 1),
	(8, 1, 1, 8, '{"nodes": [{"id": "5695e443-55ae-4cb7-bd11-e950fb8dca83", "data": {"type": "start", "title": "Start Node", "desc": "User problem", "input": {"name": "input_var", "type": "object", "properties": {"problem": {"name": "problem", "type": "string", "value": "", "display_name": "", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "27238b40-a614-4645-b06d-f1c213214400", "data": {"type": "requirement_category", "title": "Requirement Classifier", "desc": "We can set explicit classification conditions for user questions, and let the large language model automatically determine the type of question based on these classification descriptions, thus guiding the conversation in a more accurate and efficient direction.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "model_config_id": 3, "requirement_category": [{"id": "27238b40-a614-4645-b06d-f1c213214400-0", "content": "Pre-sale of goods"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-1", "content": "After-sales support"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-2", "content": "Store platform activities"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-3", "content": "Other problems"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-4", "content": "Logistics consulting"}], "prompt": {"system": {"name": "system", "type": "string", "value": "As a customer service assistant, your job is to first understand the meaning of the latest content sent by the user, and then combine historical context information to classify the latest content of the user.\\nImportant: Your job is not to answer user questions, but to categorize them as required.\\n# Category scenario definition:\\n\\"\\" \\"\\nPre-sale of goods: all inquiries of users on goods or items, including use consultation, recommendation, search, function inquiry, product activity consultation, etc.\\n\\nAfter-sales support: The user\'s consultation is related to after-sales support, including return and replacement, invoice, maintenance, use, order query after-sales support and application operation.\\n\\nStore platform activities: The user\'s consultation does not specify a certain type or type of goods, but asks about the e-commerce platform store activities and activities common to the e-commerce platform, additional benefit points, price insurance, etc.\\n\\nOther problems: such as abnormal payment, repeated questions at the same time, legal and compliance problems, brand consultation, abnormal user emotions, politically sensitive words, legal and regulatory risks, complaints and charges, consumer rights protection or other indistinguishable scenarios.\\n\\nLogistics consulting: User consultation on logistics and delivery related.\\n\\"\\" \\"", "max_length": 0}, "user": null, "assistant": null}}, "flow_data": {}}, {"id": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "data": {"type": "retriever", "title": "Retriever", "desc": "Search pre-sale knowledge base for pre-sale questions.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "datasets": [4], "manual_confirmation": false}, "flow_data": {}}, {"id": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "data": {"type": "retriever", "title": "Retriever", "desc": "Logistics consulting. Search logistics consulting knowledge base.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "datasets": [5], "manual_confirmation": false}, "flow_data": {}}, {"id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "data": {"type": "retriever", "title": "Retriever", "desc": "Event related questions, search store platform event knowledge base.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "datasets": [3], "manual_confirmation": false}, "flow_data": {}}, {"id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "data": {"type": "retriever", "title": "Retriever", "desc": "After sales questions, search after sales support knowledge base.", "input": {"name": "input", "type": "string", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "max_length": 0}, "datasets": [6], "manual_confirmation": false}, "flow_data": {}}, {"id": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "data": {"type": "llm", "title": "LLM", "desc": "The large model is combined with the retrieval results to give the optimal response technique.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a customer service assistant, mainly solve the customer\'s pre-sales problems. The user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Here\'s what you already know <<367c312a-156c-47c3-bee7-9ab3cc8ae994.outputs.output>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "data": {"type": "llm", "title": "LLM", "desc": "The large model is combined with the retrieval results to give the optimal response technique.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a customer service assistant, mainly solving logistics-related problems asked by users. The user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Here\'s what you already know <<fa98b24e-3acb-4162-9b9a-34faa58966ff.outputs.output>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "data": {"type": "llm", "title": "LLM", "desc": "The large model is combined with the retrieval results to give the optimal response technique.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a customer service assistant, and your main task is to solve the activity problems asked by users. The user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Here\'s what you already know <<8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6.outputs.output>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "948da25f-5548-4a3b-9b47-e17466117c07", "data": {"type": "llm", "title": "LLM", "desc": "The large model is combined with the retrieval results to give the optimal response technique.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a customer service assistant, mainly solve the customer\'s after-sales problems. The user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Here\'s what you already know <<c9aab117-cd3e-4ef4-994b-6a455473fcf7.outputs.output>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "data": {"type": "llm", "title": "LLM", "desc": "Other questions.", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You\'re a customer service assistant, and the user\'s question is <<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>Please give the most satisfactory reply to the user\'s question.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "data": {"type": "variable_aggregation", "title": "Variable Aggregator", "desc": "", "input": {"name": "input", "type": "object", "properties": {"<<596d82bc-21ec-4b71-89d2-afd9cf72e282.outputs.text>>": {"name": "text", "type": "string", "value": "<<596d82bc-21ec-4b71-89d2-afd9cf72e282.outputs.text>>", "max_length": 0}, "<<f0ba416e-b7f3-4426-8005-c6ac835142e5.outputs.text>>": {"name": "text", "type": "string", "value": "<<f0ba416e-b7f3-4426-8005-c6ac835142e5.outputs.text>>", "max_length": 0}, "<<e4f52032-3fdf-40a2-871a-5a9cf8688d37.outputs.text>>": {"name": "text", "type": "string", "value": "<<e4f52032-3fdf-40a2-871a-5a9cf8688d37.outputs.text>>", "max_length": 0}, "<<948da25f-5548-4a3b-9b47-e17466117c07.outputs.text>>": {"name": "text", "type": "string", "value": "<<948da25f-5548-4a3b-9b47-e17466117c07.outputs.text>>", "max_length": 0}, "<<d9187a86-abe2-431a-8628-8c7e66e0c5ef.outputs.text>>": {"name": "text", "type": "string", "value": "<<d9187a86-abe2-431a-8628-8c7e66e0c5ef.outputs.text>>", "max_length": 0}}}}, "flow_data": {}}, {"id": "edaa3470-8bd9-4092-a392-67d9a9250bb2", "data": {"type": "end", "title": "End Node", "desc": "The final reply answer.", "output": {"name": "output", "type": "object", "properties": {"answer": {"name": "answer", "type": "string", "value": "<<09953a44-0824-4c3a-a0ea-c4a517f2cadb.outputs.output>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}], "edges": [{"id": "5695e443-55ae-4cb7-bd11-e950fb8dca83-27238b40-a614-4645-b06d-f1c213214400-start", "level": 1, "source_node_id": "5695e443-55ae-4cb7-bd11-e950fb8dca83", "target_node_id": "27238b40-a614-4645-b06d-f1c213214400", "source_node_type": "start", "target_node_type": "requirement_category", "is_logical_branch": false, "views": {}}, {"id": "27238b40-a614-4645-b06d-f1c213214400-d9187a86-abe2-431a-8628-8c7e66e0c5ef-3", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "source_node_type": "requirement_category", "target_node_type": "llm", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-3"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-c9aab117-cd3e-4ef4-994b-6a455473fcf7-1", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "source_node_type": "requirement_category", "target_node_type": "retriever", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-1"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6-2", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "source_node_type": "requirement_category", "target_node_type": "retriever", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-2"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-fa98b24e-3acb-4162-9b9a-34faa58966ff-4", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "source_node_type": "requirement_category", "target_node_type": "retriever", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-4"}, {"id": "27238b40-a614-4645-b06d-f1c213214400-367c312a-156c-47c3-bee7-9ab3cc8ae994-0", "level": 2, "source_node_id": "27238b40-a614-4645-b06d-f1c213214400", "target_node_id": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "source_node_type": "requirement_category", "target_node_type": "retriever", "is_logical_branch": true, "views": {}, "condition_id": "27238b40-a614-4645-b06d-f1c213214400-0"}, {"id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7-948da25f-5548-4a3b-9b47-e17466117c07-start_source", "level": 3, "source_node_id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "target_node_id": "948da25f-5548-4a3b-9b47-e17466117c07", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6-e4f52032-3fdf-40a2-871a-5a9cf8688d37-start_source", "level": 3, "source_node_id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "target_node_id": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "fa98b24e-3acb-4162-9b9a-34faa58966ff-f0ba416e-b7f3-4426-8005-c6ac835142e5-start_source", "level": 3, "source_node_id": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "target_node_id": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "367c312a-156c-47c3-bee7-9ab3cc8ae994-596d82bc-21ec-4b71-89d2-afd9cf72e282-start_source", "level": 3, "source_node_id": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "target_node_id": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "source_node_type": "retriever", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__d9187a86-abe2-431a-8628-8c7e66e0c5efstart_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "level": 3, "source_node_id": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "596d82bc-21ec-4b71-89d2-afd9cf72e282-09953a44-0824-4c3a-a0ea-c4a517f2cadb-start_source", "level": 4, "source_node_id": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__948da25f-5548-4a3b-9b47-e17466117c07start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "level": 4, "source_node_id": "948da25f-5548-4a3b-9b47-e17466117c07", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__e4f52032-3fdf-40a2-871a-5a9cf8688d37start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "level": 4, "source_node_id": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__f0ba416e-b7f3-4426-8005-c6ac835142e5start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "level": 4, "source_node_id": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "target_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "source_node_type": "llm", "target_node_type": "variable_aggregation", "is_logical_branch": false, "views": {}}, {"id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb-edaa3470-8bd9-4092-a392-67d9a9250bb2-start_source", "level": 5, "source_node_id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "target_node_id": "edaa3470-8bd9-4092-a392-67d9a9250bb2", "source_node_type": "variable_aggregation", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"id": "5695e443-55ae-4cb7-bd11-e950fb8dca83-27238b40-a614-4645-b06d-f1c213214400-start", "data": {"zindex": 0}, "level": 1, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "5695e443-55ae-4cb7-bd11-e950fb8dca83", "target": "27238b40-a614-4645-b06d-f1c213214400", "selected": false, "sourceType": "start", "targetType": "requirement_category", "condition_id": null, "sourceHandle": "start", "is_logical_branch": false}, {"id": "27238b40-a614-4645-b06d-f1c213214400-d9187a86-abe2-431a-8628-8c7e66e0c5ef-3", "data": {"zindex": 0}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "selected": false, "sourceType": "requirement_category", "targetType": "llm", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "3", "is_logical_branch": true}, {"id": "27238b40-a614-4645-b06d-f1c213214400-c9aab117-cd3e-4ef4-994b-6a455473fcf7-1", "data": {"zindex": 10}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "sourceType": "requirement_category", "targetType": "retriever", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "1", "is_logical_branch": true}, {"id": "27238b40-a614-4645-b06d-f1c213214400-8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6-2", "data": {"zindex": 0}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "sourceType": "requirement_category", "targetType": "retriever", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "2", "is_logical_branch": true}, {"id": "27238b40-a614-4645-b06d-f1c213214400-fa98b24e-3acb-4162-9b9a-34faa58966ff-4", "data": {"zindex": 0}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "sourceType": "requirement_category", "targetType": "retriever", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "4", "is_logical_branch": true}, {"id": "27238b40-a614-4645-b06d-f1c213214400-367c312a-156c-47c3-bee7-9ab3cc8ae994-0", "data": {"zindex": 0}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "27238b40-a614-4645-b06d-f1c213214400", "target": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "sourceType": "requirement_category", "targetType": "retriever", "condition_id": "27238b40-a614-4645-b06d-f1c213214400", "sourceHandle": "0", "is_logical_branch": true}, {"id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7-948da25f-5548-4a3b-9b47-e17466117c07-start_source", "data": {"zindex": 10}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "target": "948da25f-5548-4a3b-9b47-e17466117c07", "sourceType": "retriever", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6-e4f52032-3fdf-40a2-871a-5a9cf8688d37-start_source", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "target": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "sourceType": "retriever", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "fa98b24e-3acb-4162-9b9a-34faa58966ff-f0ba416e-b7f3-4426-8005-c6ac835142e5-start_source", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "target": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "sourceType": "retriever", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "367c312a-156c-47c3-bee7-9ab3cc8ae994-596d82bc-21ec-4b71-89d2-afd9cf72e282-start_source", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "target": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "sourceType": "retriever", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "xy-edge__d9187a86-abe2-431a-8628-8c7e66e0c5efstart_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}, {"id": "596d82bc-21ec-4b71-89d2-afd9cf72e282-09953a44-0824-4c3a-a0ea-c4a517f2cadb-start_source", "data": {"zindex": 0}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "xy-edge__948da25f-5548-4a3b-9b47-e17466117c07start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "data": {"zindex": 0}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "948da25f-5548-4a3b-9b47-e17466117c07", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}, {"id": "xy-edge__e4f52032-3fdf-40a2-871a-5a9cf8688d37start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "data": {"zindex": 0}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}, {"id": "xy-edge__f0ba416e-b7f3-4426-8005-c6ac835142e5start_source-09953a44-0824-4c3a-a0ea-c4a517f2cadbstart_target", "data": {"zindex": 0}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "target": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "sourceType": "llm", "targetType": "variable_aggregation", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}, {"id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb-edaa3470-8bd9-4092-a392-67d9a9250bb2-start_source", "data": {"zindex": 0}, "level": 5, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "target": "edaa3470-8bd9-4092-a392-67d9a9250bb2", "sourceType": "variable_aggregation", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}], "nodes": [{"id": "5695e443-55ae-4cb7-bd11-e950fb8dca83", "data": {"desc": "User problem", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "\\u8fd9\\u662f\\u4e00\\u4e2a\\u521d\\u59cb\\u5316\\u5f00\\u59cb\\u8282\\u70b9\\u63cf\\u8ff0", "variables": {"value": [{"name": "problem", "type": "string", "required": true, "display_name": ""}], "free": {"name": "input_var", "type": "object", "properties": {"problem": {"name": "problem", "type": "string", "value": "", "display_name": "", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description", "requires_upload": false}, "type": "start", "level": 0, "dragging": false, "measured": {"width": 270, "height": 124}, "position": {"x": -1974.0392201368463, "y": -348.824116437244}, "selected": false}, {"id": "27238b40-a614-4645-b06d-f1c213214400", "data": {"desc": "We can set explicit classification conditions for user questions, and let the large language model automatically determine the type of question based on these classification descriptions, thus guiding the conversation in a more accurate and efficient direction.", "model": 3, "title": "Requirement Classifier", "prompt": "As a customer service assistant, your job is to first understand the meaning of the latest content sent by the user, and then combine historical context information to classify the latest content of the user.\\nImportant: Your job is not to answer user questions, but to categorize them as required.\\n# Category scenario definition:\\n\\"\\" \\"\\nPre-sale of goods: all inquiries of users on goods or items, including use consultation, recommendation, search, function inquiry, product activity consultation, etc.\\n\\nAfter-sales support: The user\'s consultation is related to after-sales support, including return and replacement, invoice, maintenance, use, order query after-sales support and application operation.\\n\\nStore platform activities: The user\'s consultation does not specify a certain type or type of goods, but asks about the e-commerce platform store activities and activities common to the e-commerce platform, additional benefit points, price insurance, etc.\\n\\nOther problems: such as abnormal payment, repeated questions at the same time, legal and compliance problems, brand consultation, abnormal user emotions, politically sensitive words, legal and regulatory risks, complaints and charges, consumer rights protection or other indistinguishable scenarios.\\n\\nLogistics consulting: User consultation on logistics and delivery related.\\n\\"\\" \\"", "entitle": "Requirement Classifier", "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u5b9a\\u4e49\\u7528\\u6237\\u95ee\\u9898\\u7684\\u5206\\u7c7b\\u6761\\u4ef6\\uff0c\\u901a\\u8fc7\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u5206\\u6790\\u51fa\\u95ee\\u9898\\u6240\\u5c5e\\u7684\\u5206\\u7c7b", "wrap_list": [{"que": "Pre-sale of goods"}, {"que": "After-sales support"}, {"que": "Store platform activities"}, {"que": "Other problems"}, {"que": "Logistics consulting"}], "outputInfo": {"key": "category_name", "base": true, "type": "string"}, "endescTools": "Define classification conditions for user questions and analyze the category using large language models"}, "type": "requirement_category", "level": 1, "dragging": false, "measured": {"width": 270, "height": 324}, "position": {"x": -1565.1108704532685, "y": -449.5731949771793}, "selected": false}, {"id": "367c312a-156c-47c3-bee7-9ab3cc8ae994", "data": {"desc": "Search pre-sale knowledge base for pre-sale questions.", "title": "Retriever", "entitle": "Retriever", "datasets": [4], "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u4ece\\u77e5\\u8bc6\\u5e93\\u4e2d\\u67e5\\u8be2\\u4e0e\\u7528\\u6237\\u7684\\u95ee\\u9898\\u76f8\\u5173\\u7684\\u6587\\u672c\\u5185\\u5bb9", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Query text content related to user questions from the knowledge base"}, "type": "retriever", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -919.898496434383, "y": -478.78639619492424}, "selected": false}, {"id": "fa98b24e-3acb-4162-9b9a-34faa58966ff", "data": {"desc": "Logistics consulting. Search logistics consulting knowledge base.", "title": "Retriever", "entitle": "Retriever", "datasets": [5], "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u4ece\\u77e5\\u8bc6\\u5e93\\u4e2d\\u67e5\\u8be2\\u4e0e\\u7528\\u6237\\u7684\\u95ee\\u9898\\u76f8\\u5173\\u7684\\u6587\\u672c\\u5185\\u5bb9", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Query text content related to user questions from the knowledge base"}, "type": "retriever", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -1180.7692394134492, "y": 111.3222715638676}, "selected": false}, {"id": "8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6", "data": {"desc": "Event related questions, search store platform event knowledge base.", "title": "Retriever", "entitle": "Retriever", "datasets": [3], "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u4ece\\u77e5\\u8bc6\\u5e93\\u4e2d\\u67e5\\u8be2\\u4e0e\\u7528\\u6237\\u7684\\u95ee\\u9898\\u76f8\\u5173\\u7684\\u6587\\u672c\\u5185\\u5bb9", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Query text content related to user questions from the knowledge base"}, "type": "retriever", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -938.9178758518918, "y": -209.81273036501625}, "selected": false}, {"id": "c9aab117-cd3e-4ef4-994b-6a455473fcf7", "data": {"desc": "After sales questions, search after sales support knowledge base.", "title": "Retriever", "entitle": "Retriever", "datasets": [6], "selected": false, "variable": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "descTools": "\\u4ece\\u77e5\\u8bc6\\u5e93\\u4e2d\\u67e5\\u8be2\\u4e0e\\u7528\\u6237\\u7684\\u95ee\\u9898\\u76f8\\u5173\\u7684\\u6587\\u672c\\u5185\\u5bb9", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Query text content related to user questions from the knowledge base"}, "type": "retriever", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -922.3395081115708, "y": -333.9017216864935}, "selected": false}, {"id": "596d82bc-21ec-4b71-89d2-afd9cf72e282", "data": {"desc": "The large model is combined with the retrieval results to give the optimal response technique.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": ""}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a customer service assistant, mainly solve the customer\'s pre-sales problems. The user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"id": "<<367c312a-156c-47c3-bee7-9ab3cc8ae994.outputs.output>>", "base": {"id": "<<367c312a-156c-47c3-bee7-9ab3cc8ae994.outputs.output>>", "name": "Retriever.output", "type": "retriever", "label": "Retriever.output", "title": "Retriever", "value": "<<367c312a-156c-47c3-bee7-9ab3cc8ae994.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Retriever.output"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}]}, "type": "llm", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -511.1828802810942, "y": -453.6926985581943}, "selected": false}, {"id": "f0ba416e-b7f3-4426-8005-c6ac835142e5", "data": {"desc": "The large model is combined with the retrieval results to give the optimal response technique.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": ""}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a customer service assistant, mainly solving logistics-related problems asked by users. The user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"id": "<<fa98b24e-3acb-4162-9b9a-34faa58966ff.outputs.output>>", "base": {"id": "<<fa98b24e-3acb-4162-9b9a-34faa58966ff.outputs.output>>", "name": "Retriever.output", "type": "retriever", "label": "Retriever.output", "title": "Retriever", "value": "<<fa98b24e-3acb-4162-9b9a-34faa58966ff.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Retriever.output"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}], "model_config_id": 3, "import_to_knowledge_base": false}, "type": "llm", "level": 3, "dragging": false, "measured": {"width": 270, "height": 116}, "position": {"x": -707.2567300991792, "y": 93.03911958598746}, "selected": false}, {"id": "e4f52032-3fdf-40a2-871a-5a9cf8688d37", "data": {"desc": "The large model is combined with the retrieval results to give the optimal response technique.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a customer service assistant, and your main task is to solve the activity problems asked by users. The user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"id": "<<8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6.outputs.output>>", "base": {"id": "<<8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6.outputs.output>>", "name": "Retriever.output", "type": "retriever", "label": "Retriever.output", "title": "Retriever", "value": "<<8b570af9-a4a1-4f7f-9ca8-f9adb4d105f6.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Retriever.output"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}]}, "type": "llm", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -498.2440722750066, "y": -180.32977851970224}, "selected": false}, {"id": "948da25f-5548-4a3b-9b47-e17466117c07", "data": {"desc": "The large model is combined with the retrieval results to give the optimal response technique.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a customer service assistant, mainly solve the customer\'s after-sales problems. The user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Here\'s what you already know "}, {"id": "<<c9aab117-cd3e-4ef4-994b-6a455473fcf7.outputs.output>>", "base": {"id": "<<c9aab117-cd3e-4ef4-994b-6a455473fcf7.outputs.output>>", "name": "Retriever.output", "type": "retriever", "label": "Retriever.output", "title": "Retriever", "value": "<<c9aab117-cd3e-4ef4-994b-6a455473fcf7.outputs.output>>", "createVar": {"name": "output", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Retriever.output"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}]}, "type": "llm", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -503.1250152003238, "y": -312.44881565282816}, "selected": false}, {"id": "d9187a86-abe2-431a-8628-8c7e66e0c5ef", "data": {"desc": "Other questions.", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You\'re a customer service assistant, and the user\'s question is "}, {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "base": {"id": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "name": "Start Node.problem", "type": "start", "label": "Start Node.problem", "title": "Start Node", "value": "<<5695e443-55ae-4cb7-bd11-e950fb8dca83.outputs.problem>>", "createVar": {"name": "problem", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": ""}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.problem"}, {"text": ""}]}, {"type": "paragraph", "children": [{"text": "Please give the most satisfactory reply to the user\'s question."}]}]}, "type": "llm", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -555.0326710350135, "y": -34.76352209015464}, "selected": false}, {"id": "09953a44-0824-4c3a-a0ea-c4a517f2cadb", "data": {"desc": "", "title": "Variable Aggregator", "entitle": "Variable Aggregator", "selected": false, "descTools": "\\u5c06\\u591a\\u8def\\u6761\\u4ef6\\u5206\\u652f\\uff08\\u95ee\\u9898\\u5206\\u7c7b\\u5668/\\u6761\\u4ef6\\u5206\\u652f\\u8282\\u70b9\\u4ea7\\u751f\\u7684\\u5206\\u652f\\uff09\\u7684\\u53d8\\u91cf\\u805a\\u5408\\u6210\\u4e00\\u4e2a\\u53d8\\u91cf\\uff0c\\u4ee5\\u4fbf\\u4e0b\\u6e38\\u8282\\u70b9\\u7edf\\u4e00\\u914d\\u7f6e\\u4f7f\\u7528", "outputInfo": {"key": "output", "base": true, "type": "object"}, "endescTools": "Aggregate variables from multiple conditional branches into one for unified configuration by downstream nodes", "variables_list": ["<<596d82bc-21ec-4b71-89d2-afd9cf72e282.outputs.text>>", "<<f0ba416e-b7f3-4426-8005-c6ac835142e5.outputs.text>>", "<<e4f52032-3fdf-40a2-871a-5a9cf8688d37.outputs.text>>", "<<948da25f-5548-4a3b-9b47-e17466117c07.outputs.text>>", "<<d9187a86-abe2-431a-8628-8c7e66e0c5ef.outputs.text>>"]}, "type": "variable_aggregation", "level": 4, "dragging": false, "measured": {"width": 270, "height": 52}, "position": {"x": 1.8667279305678193, "y": -98.98758657277853}, "selected": false}, {"id": "edaa3470-8bd9-4092-a392-67d9a9250bb2", "data": {"desc": "The final reply answer.", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "\\u5b9a\\u4e49\\u4e00\\u4e2a\\u5de5\\u4f5c\\u6d41\\u7684\\u6d41\\u7a0b\\u7ed3\\u675f\\u548c\\u8f93\\u51fa\\u7ed3\\u679c\\u5185\\u5bb9", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "answer", "variable": "<<09953a44-0824-4c3a-a0ea-c4a517f2cadb.outputs.output>>"}]}, "type": "end", "level": 5, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 422.68764985460007, "y": -119.81675965401224}, "selected": false}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', 'null', 1, '2024-12-13 08:05:08', '2024-12-02 11:30:25', '2024-12-13 08:05:08', 1),
	(9, 1, 1, 9, '{"nodes": [{"id": "71fe5442-fc12-44b1-9587-151bd7f45f7a", "data": {"type": "start", "title": "Start Node", "desc": "project", "input": {"name": "input_var", "type": "object", "properties": {"name": {"name": "name", "type": "string", "value": "", "display_name": "project name", "required": true, "max_length": 0}, "introduce": {"name": "introduce", "type": "string", "value": "", "display_name": "project introduction", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "data": {"type": "llm", "title": "LLM", "desc": "Planning Process", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "You are a product manager who can write requirement documents for products.", "max_length": 0}, "user": {"name": "user", "type": "string", "value": "Now there is a project named:<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.name>>,The introduction of this project is<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.introduce>>.Plan out the functional outline and summary in a simple way.", "max_length": 0}, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "3830d83a-10b2-4b4a-a3cc-6be4fcca0084", "data": {"type": "end", "title": "End Node", "desc": "Generated Documents", "output": {"name": "output", "type": "object", "properties": {"document": {"name": "document", "type": "string", "value": "<<99fe7be5-940e-4c6b-959a-8efc5c086fec.outputs.text>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}, {"id": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "data": {"type": "llm", "title": "LLM", "desc": "Detailed Documentation", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "<<74f5bff0-c3b5-47fb-90a9-28a65b618dac.outputs.text>>Please provide me with the outline and summary of the project above, detailing these functions into feasible solutions.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}], "edges": [{"id": "71fe5442-fc12-44b1-9587-151bd7f45f7a-74f5bff0-c3b5-47fb-90a9-28a65b618dac-start", "level": 1, "source_node_id": "71fe5442-fc12-44b1-9587-151bd7f45f7a", "target_node_id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "source_node_type": "start", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac-99fe7be5-940e-4c6b-959a-8efc5c086fec-start_source", "level": 2, "source_node_id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "target_node_id": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "source_node_type": "llm", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__99fe7be5-940e-4c6b-959a-8efc5c086fecstart_source-3830d83a-10b2-4b4a-a3cc-6be4fcca0084start_target", "level": 3, "source_node_id": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "target_node_id": "3830d83a-10b2-4b4a-a3cc-6be4fcca0084", "source_node_type": "llm", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"id": "71fe5442-fc12-44b1-9587-151bd7f45f7a-74f5bff0-c3b5-47fb-90a9-28a65b618dac-start", "data": {"zindex": 10}, "level": 1, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "71fe5442-fc12-44b1-9587-151bd7f45f7a", "target": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "sourceType": "start", "targetType": "llm", "condition_id": null, "sourceHandle": "start", "is_logical_branch": false}, {"id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac-99fe7be5-940e-4c6b-959a-8efc5c086fec-start_source", "data": {"zindex": 10}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "target": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "sourceType": "llm", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "xy-edge__99fe7be5-940e-4c6b-959a-8efc5c086fecstart_source-3830d83a-10b2-4b4a-a3cc-6be4fcca0084start_target", "data": {"zindex": 0}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "target": "3830d83a-10b2-4b4a-a3cc-6be4fcca0084", "sourceType": "llm", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}], "nodes": [{"id": "71fe5442-fc12-44b1-9587-151bd7f45f7a", "data": {"desc": "project", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "\\u8fd9\\u662f\\u4e00\\u4e2a\\u521d\\u59cb\\u5316\\u5f00\\u59cb\\u8282\\u70b9\\u63cf\\u8ff0", "variables": {"value": [{"name": "name", "type": "string", "required": true, "display_name": "project name"}, {"name": "introduce", "type": "string", "required": true, "display_name": "project introduction"}], "free": {"name": "input_var", "type": "object", "properties": {"name": {"name": "name", "type": "string", "value": "", "display_name": "project name", "required": true, "max_length": 0}, "introduce": {"name": "introduce", "type": "string", "value": "", "display_name": "project introduction", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description"}, "type": "start", "level": 0, "dragging": false, "measured": {"width": 270, "height": 156}, "position": {"x": -529, "y": -43}, "selected": false}, {"id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "data": {"desc": "Planning Process", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": "Now there is a project named:"}, {"id": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.name>>", "base": {"id": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.name>>", "name": "Start Node.name", "type": "start", "label": "Start Node.name", "title": "Start Node", "value": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.name>>", "createVar": {"name": "name", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "\\u9879\\u76ee\\u540d\\u79f0"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.name"}, {"text": ",The introduction of this project is"}, {"id": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.introduce>>", "base": {"id": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.introduce>>", "name": "Start Node.introduce", "type": "start", "label": "Start Node.introduce", "title": "Start Node", "value": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.introduce>>", "createVar": {"name": "introduce", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "\\u9879\\u76ee\\u4ecb\\u7ecd"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.introduce"}, {"text": ".Plan out the functional outline and summary in a simple way."}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a product manager who can write requirement documents for products."}]}]}, "type": "llm", "level": 1, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -181, "y": -31}, "selected": false}, {"id": "3830d83a-10b2-4b4a-a3cc-6be4fcca0084", "data": {"desc": "Generated Documents", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "\\u5b9a\\u4e49\\u4e00\\u4e2a\\u5de5\\u4f5c\\u6d41\\u7684\\u6d41\\u7a0b\\u7ed3\\u675f\\u548c\\u8f93\\u51fa\\u7ed3\\u679c\\u5185\\u5bb9", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "document", "variable": "<<99fe7be5-940e-4c6b-959a-8efc5c086fec.outputs.text>>"}]}, "type": "end", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 532, "y": -12}, "selected": false}, {"id": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "data": {"desc": "Detailed Documentation", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "\\u8c03\\u7528\\u5927\\u8bed\\u8a00\\u6a21\\u578b\\u56de\\u7b54\\u95ee\\u9898\\u6216\\u8005\\u5904\\u7406\\u4efb\\u52a1", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": ""}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": ""}, {"id": "<<74f5bff0-c3b5-47fb-90a9-28a65b618dac.outputs.text>>", "base": {"id": "<<74f5bff0-c3b5-47fb-90a9-28a65b618dac.outputs.text>>", "name": "LLM.text", "type": "llm", "label": "LLM.text", "title": "LLM", "value": "<<74f5bff0-c3b5-47fb-90a9-28a65b618dac.outputs.text>>", "createVar": {"name": "text", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "LLM.text"}, {"text": "Please provide me with the outline and summary of the project above, detailing these functions into feasible solutions."}]}]}, "type": "llm", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 172, "y": -30}, "selected": true}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', NULL, 0, NULL, '2024-12-02 15:54:53', '2024-12-14 14:11:02', 1),
	(10, 1, 1, 9, '{"edges": [{"id": "71fe5442-fc12-44b1-9587-151bd7f45f7a-74f5bff0-c3b5-47fb-90a9-28a65b618dac-start", "level": 1, "views": {}, "source_node_id": "71fe5442-fc12-44b1-9587-151bd7f45f7a", "target_node_id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "source_node_type": "start", "target_node_type": "llm", "is_logical_branch": false}, {"id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac-99fe7be5-940e-4c6b-959a-8efc5c086fec-start_source", "level": 2, "views": {}, "source_node_id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "target_node_id": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "source_node_type": "llm", "target_node_type": "llm", "is_logical_branch": false}, {"id": "xy-edge__99fe7be5-940e-4c6b-959a-8efc5c086fecstart_source-3830d83a-10b2-4b4a-a3cc-6be4fcca0084start_target", "level": 3, "views": {}, "source_node_id": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "target_node_id": "3830d83a-10b2-4b4a-a3cc-6be4fcca0084", "source_node_type": "llm", "target_node_type": "end", "is_logical_branch": false}], "nodes": [{"id": "71fe5442-fc12-44b1-9587-151bd7f45f7a", "data": {"desc": "project", "type": "start", "input": {"name": "input_var", "type": "object", "properties": {"name": {"name": "name", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "project name"}, "introduce": {"name": "introduce", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "project introduction"}}, "display_name": "Input Object Variable"}, "title": "Start Node", "output": {}, "requires_upload": false, "knowledge_base_mapping": {"input": {}, "output": {}}, "import_to_knowledge_base": {"input": false, "output": false}}, "flow_data": {}}, {"id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "data": {"desc": "Planning Process", "type": "llm", "input": {"name": "input", "type": "object", "properties": {}}, "title": "LLM", "prompt": {"user": {"name": "user", "type": "string", "value": "Now there is a project named:<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.name>>,The introduction of this project is<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.introduce>>.Plan out the functional outline and summary in a simple way.", "max_length": 0}, "system": {"name": "system", "type": "string", "value": "You are a product manager who can write requirement documents for products.", "max_length": 0}, "assistant": null}, "task_splitting": false, "model_config_id": 3, "requires_upload": false, "manual_confirmation": false, "knowledge_base_mapping": {"input": {}, "output": {}}, "retrieval_task_datasets": [], "import_to_knowledge_base": {"input": false, "output": false}, "wait_for_all_predecessors": false}, "flow_data": {}}, {"id": "3830d83a-10b2-4b4a-a3cc-6be4fcca0084", "data": {"desc": "Generated Documents", "type": "end", "title": "End Node", "output": {"name": "output", "type": "object", "properties": {"document": {"name": "document", "type": "string", "value": "<<99fe7be5-940e-4c6b-959a-8efc5c086fec.outputs.text>>", "max_length": 0}}}, "manual_confirmation": false, "wait_for_all_predecessors": true}, "flow_data": {}}, {"id": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "data": {"desc": "Detailed Documentation", "type": "llm", "input": {"name": "input", "type": "object", "properties": {}}, "title": "LLM", "prompt": {"user": null, "system": {"name": "system", "type": "string", "value": "<<74f5bff0-c3b5-47fb-90a9-28a65b618dac.outputs.text>>Please provide me with the outline and summary of the project above, detailing these functions into feasible solutions.", "max_length": 0}, "assistant": null}, "task_splitting": false, "model_config_id": 3, "requires_upload": false, "manual_confirmation": false, "knowledge_base_mapping": {"input": {}, "output": {}}, "retrieval_task_datasets": [], "import_to_knowledge_base": {"input": false, "output": false}, "wait_for_all_predecessors": false}, "flow_data": {}}], "views": {"edges": [{"id": "71fe5442-fc12-44b1-9587-151bd7f45f7a-74f5bff0-c3b5-47fb-90a9-28a65b618dac-start", "data": {"zindex": 0}, "level": 1, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "71fe5442-fc12-44b1-9587-151bd7f45f7a", "target": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "sourceType": "start", "targetType": "llm", "condition_id": null, "sourceHandle": "start", "is_logical_branch": false}, {"id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac-99fe7be5-940e-4c6b-959a-8efc5c086fec-start_source", "data": {"zindex": 0}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "target": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "sourceType": "llm", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "xy-edge__99fe7be5-940e-4c6b-959a-8efc5c086fecstart_source-3830d83a-10b2-4b4a-a3cc-6be4fcca0084start_target", "data": {"zindex": 10}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "target": "3830d83a-10b2-4b4a-a3cc-6be4fcca0084", "sourceType": "llm", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}], "nodes": [{"id": "71fe5442-fc12-44b1-9587-151bd7f45f7a", "data": {"desc": "project", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "这是一个初始化开始节点描述", "variables": {"free": {"name": "input_var", "type": "object", "properties": {"name": {"name": "name", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "project name"}, "introduce": {"name": "introduce", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "project introduction"}}, "display_name": "Input Object Variable"}, "value": [{"name": "name", "type": "string", "required": true, "display_name": "project name"}, {"name": "introduce", "type": "string", "required": true, "display_name": "project introduction"}]}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description"}, "type": "start", "level": 0, "dragging": false, "measured": {"width": 270, "height": 156}, "position": {"x": -529, "y": -43}, "selected": false}, {"id": "74f5bff0-c3b5-47fb-90a9-28a65b618dac", "data": {"desc": "Planning Process", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "调用大语言模型回答问题或者处理任务", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": "Now there is a project named:"}, {"id": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.name>>", "base": {"id": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.name>>", "name": "Start Node.name", "type": "start", "label": "Start Node.name", "title": "Start Node", "value": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.name>>", "createVar": {"name": "name", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "项目名称"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.name"}, {"text": ",The introduction of this project is"}, {"id": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.introduce>>", "base": {"id": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.introduce>>", "name": "Start Node.introduce", "type": "start", "label": "Start Node.introduce", "title": "Start Node", "value": "<<71fe5442-fc12-44b1-9587-151bd7f45f7a.outputs.introduce>>", "createVar": {"name": "introduce", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "项目介绍"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.introduce"}, {"text": ".Plan out the functional outline and summary in a simple way."}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "You are a product manager who can write requirement documents for products."}]}]}, "type": "llm", "level": 1, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": -181, "y": -31}, "selected": false}, {"id": "3830d83a-10b2-4b4a-a3cc-6be4fcca0084", "data": {"desc": "Generated Documents", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "定义一个工作流的流程结束和输出结果内容", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "document", "variable": "<<99fe7be5-940e-4c6b-959a-8efc5c086fec.outputs.text>>"}]}, "type": "end", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 532, "y": -12}, "selected": false}, {"id": "99fe7be5-940e-4c6b-959a-8efc5c086fec", "data": {"desc": "Detailed Documentation", "title": "LLM", "entitle": "LLM", "selected": false, "descTools": "调用大语言模型回答问题或者处理任务", "outputInfo": {"key": "text", "base": true, "type": "string"}, "userEditor": [{"type": "paragraph", "children": [{"text": ""}]}], "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": ""}, {"id": "<<74f5bff0-c3b5-47fb-90a9-28a65b618dac.outputs.text>>", "base": {"id": "<<74f5bff0-c3b5-47fb-90a9-28a65b618dac.outputs.text>>", "name": "LLM.text", "type": "llm", "label": "LLM.text", "title": "LLM", "value": "<<74f5bff0-c3b5-47fb-90a9-28a65b618dac.outputs.text>>", "createVar": {"name": "text", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "LLM.text"}, {"text": "Please provide me with the outline and summary of the project above, detailing these functions into feasible solutions."}]}]}, "type": "llm", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 172, "y": -30}, "selected": false}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', 'null', 1, '2024-12-02 17:08:38', '2024-12-02 17:08:38', '2024-12-02 17:08:38', 1),
	(11, 1, 1, 10, '{"nodes": [{"id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65", "data": {"type": "start", "title": "Start Node", "desc": "Input SQL, upload file", "input": {"name": "input_var", "type": "object", "properties": {"createTableSQL": {"name": "createTableSQL", "type": "string", "value": "", "display_name": "SQL statement to create a table", "required": true, "max_length": 0}, "headerRow": {"name": "headerRow", "type": "string", "value": "", "display_name": "The header row and a data row of an Excel file", "required": true, "max_length": 0}, "fileName": {"name": "fileName", "type": "string", "value": "", "display_name": "Generated code filename", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "7c314298-0e49-4f08-8fae-08a632662460", "data": {"type": "llm", "title": "LLM Extract fields", "desc": "Extract fields", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "Extract all fields from<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.createTableSQL>> and <<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.headerRow>>, and combine them into a dictionary with the structure: {table_name: [field_a: comment_a, field_b: comment_b], file: [field_a, field_b]}, where table_name is the table name. Return this dictionary in JSON format.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "data": {"type": "llm", "title": "LLM Python coding", "desc": "Python coding", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "Extract the fields \'table\' and \'file\' from <<7c314298-0e49-4f08-8fae-08a632662460.outputs.text>>, and write Python code based on the automatically identified field mapping. The code functionality is: compare the data from the database table with the data from the file to validate data integrity. Output only the code in markdown format.Code requirements:* Encapsulate the main functionality into a class.* Use pymysql to connect to the database.* The class constructor __init__ should define the database connection parameters.* Define the file path as the same directory as the script, directory name: files.* Parse the file to get the total number of rows (note that only rows after the header are valid) and calculate the main KPI summary.* Query the database table based on the file\'s data dimensions to get the total number of rows and the main KPI summary.* Print the comparison results.* The main logic should include code comments.* The file formats are xlsx, xls, or csv, and the code should automatically adapt to each format.* If the data includes a date dimension, the comparison validation should include the date.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "60c16956-5800-4008-ba62-ee346efff606", "data": {"type": "end", "title": "End Node", "desc": "Finally return python code", "output": {"name": "output", "type": "object", "properties": {"file": {"name": "file", "type": "string", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>", "max_length": 0}, "code": {"name": "code", "type": "string", "value": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>", "max_length": 0}, "file_staus": {"name": "file_staus", "type": "string", "value": "<<b2f607a6-3e77-46cc-9c92-c9afd491cefe.outputs.status>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}, {"id": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "data": {"type": "skill", "title": "File writing skill", "desc": "This is a file writing skill", "skill_id": 2, "input": {"name": "output", "type": "object", "properties": {"content": {"name": "content", "type": "string", "value": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>", "display_name": "File content", "required": true, "max_length": 0}, "filepath": {"name": "filepath", "type": "string", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>", "display_name": "File path", "required": true, "max_length": 0}}, "display_name": "", "to_string_keys": ""}, "output": {"name": "output", "type": "object", "properties": {"status": {"name": "status", "type": "string", "value": "", "display_name": "Status", "required": true, "max_length": 0}}, "display_name": "", "to_string_keys": ""}, "wait_for_all_predecessors": false, "manual_confirmation": false}, "flow_data": {}}], "edges": [{"id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65-7c314298-0e49-4f08-8fae-08a632662460-start", "level": 1, "source_node_id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65", "target_node_id": "7c314298-0e49-4f08-8fae-08a632662460", "source_node_type": "start", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "7c314298-0e49-4f08-8fae-08a632662460-bd40844a-cc9a-4b71-9472-282cb13f31b0-start_source", "level": 2, "source_node_id": "7c314298-0e49-4f08-8fae-08a632662460", "target_node_id": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "source_node_type": "llm", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "bd40844a-cc9a-4b71-9472-282cb13f31b0-b2f607a6-3e77-46cc-9c92-c9afd491cefe-start_source", "level": 3, "source_node_id": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "target_node_id": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "source_node_type": "llm", "target_node_type": "skill", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__b2f607a6-3e77-46cc-9c92-c9afd491cefestart_source-60c16956-5800-4008-ba62-ee346efff606start_target", "level": 4, "source_node_id": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "target_node_id": "60c16956-5800-4008-ba62-ee346efff606", "source_node_type": "skill", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65-7c314298-0e49-4f08-8fae-08a632662460-start", "data": {"zindex": 0}, "level": 1, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "358b38f6-f32c-4fa5-a919-fcc6c670bb65", "target": "7c314298-0e49-4f08-8fae-08a632662460", "sourceType": "start", "targetType": "llm", "condition_id": null, "sourceHandle": "start", "is_logical_branch": false}, {"id": "7c314298-0e49-4f08-8fae-08a632662460-bd40844a-cc9a-4b71-9472-282cb13f31b0-start_source", "data": {"zindex": 10}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "7c314298-0e49-4f08-8fae-08a632662460", "target": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "sourceType": "llm", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "bd40844a-cc9a-4b71-9472-282cb13f31b0-b2f607a6-3e77-46cc-9c92-c9afd491cefe-start_source", "data": {"zindex": 10}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "target": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "sourceType": "llm", "targetType": "skill", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "xy-edge__b2f607a6-3e77-46cc-9c92-c9afd491cefestart_source-60c16956-5800-4008-ba62-ee346efff606start_target", "data": {"zindex": 0}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "target": "60c16956-5800-4008-ba62-ee346efff606", "sourceType": "skill", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}], "nodes": [{"id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65", "data": {"desc": "Input SQL, upload file", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "This is an initial start node description", "variables": {"value": [{"name": "createTableSQL", "type": "string", "required": true, "display_name": "SQL statement to create a table"}, {"name": "headerRow", "type": "string", "required": true, "display_name": "The header row and a data row of an Excel file"}, {"name": "fileName", "type": "string", "required": true, "display_name": "Generated code filename"}], "free": {"name": "input_var", "type": "object", "properties": {"createTableSQL": {"name": "createTableSQL", "type": "string", "value": "", "display_name": "SQL statement to create a table", "required": true, "max_length": 0}, "headerRow": {"name": "headerRow", "type": "string", "value": "", "display_name": "The header row and a data row of an Excel file", "required": true, "max_length": 0}, "fileName": {"name": "fileName", "type": "string", "value": "", "display_name": "Generated code filename", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description"}, "type": "start", "level": 0, "measured": {"width": 270, "height": 188}, "position": {"x": 100, "y": 100}, "selected": false}, {"id": "7c314298-0e49-4f08-8fae-08a632662460", "data": {"desc": "Extract fields", "title": "LLM Extract fields", "entitle": "LLM", "selected": false, "descTools": "Invoke large language models to answer questions or handle tasks", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "Extract all fields from"}, {"id": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.createTableSQL>>", "base": {"id": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.createTableSQL>>", "name": "Start Node.createTableSQL", "type": "start", "label": "Start Node.createTableSQL", "title": "Start Node", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.createTableSQL>>", "createVar": {"name": "createTableSQL", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "SQL statement to create a table"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.createTableSQL"}, {"text": " and "}, {"id": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.headerRow>>", "base": {"id": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.headerRow>>", "name": "Start Node.headerRow", "type": "start", "label": "Start Node.headerRow", "title": "Start Node", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.headerRow>>", "createVar": {"name": "headerRow", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "The header row and a data row of an Excel file"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.headerRow"}, {"text": ", and combine them into a dictionary with the structure: {table_name: [field_a: comment_a, field_b: comment_b], file: [field_a, field_b]}, where table_name is the table name. Return this dictionary in JSON format."}]}]}, "type": "llm", "level": 1, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 436, "y": 55}, "selected": false}, {"id": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "data": {"desc": "Python coding", "title": "LLM Python coding", "entitle": "LLM", "selected": false, "descTools": "Invoke large language models to answer questions or handle tasks", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "Extract the fields \'table\' and \'file\' from "}, {"id": "<<7c314298-0e49-4f08-8fae-08a632662460.outputs.text>>", "base": {"id": "<<7c314298-0e49-4f08-8fae-08a632662460.outputs.text>>", "name": "LLM Extract fields.text", "type": "llm", "label": "LLM Extract fields.text", "title": "LLM Extract fields", "value": "<<7c314298-0e49-4f08-8fae-08a632662460.outputs.text>>", "createVar": {"name": "text", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "LLM Extract fields.text"}, {"text": ", and write Python code based on the automatically identified field mapping. The code functionality is: compare the data from the database table with the data from the file to validate data integrity. Output only the code in markdown format."}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "Code requirements:"}]}, {"type": "paragraph", "children": [{"text": "* Encapsulate the main functionality into a class."}]}, {"type": "paragraph", "children": [{"text": "* Use pymysql to connect to the database."}]}, {"type": "paragraph", "children": [{"text": "* The class constructor __init__ should define the database connection parameters."}]}, {"type": "paragraph", "children": [{"text": "* Define the file path as the same directory as the script, directory name: files."}]}, {"type": "paragraph", "children": [{"text": "* Parse the file to get the total number of rows (note that only rows after the header are valid) and calculate the main KPI summary."}]}, {"type": "paragraph", "children": [{"text": "* Query the database table based on the file\'s data dimensions to get the total number of rows and the main KPI summary."}]}, {"type": "paragraph", "children": [{"text": "* Print the comparison results."}]}, {"type": "paragraph", "children": [{"text": "* The main logic should include code comments."}]}, {"type": "paragraph", "children": [{"text": "* The file formats are xlsx, xls, or csv, and the code should automatically adapt to each format."}]}, {"type": "paragraph", "children": [{"text": "* If the data includes a date dimension, the comparison validation should include the date."}]}]}, "type": "llm", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 772.4135643096389, "y": 173.64813858578333}, "selected": false}, {"id": "60c16956-5800-4008-ba62-ee346efff606", "data": {"desc": "Finally return python code", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "Define the end of a workflow process and output result content", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "file", "variable": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>"}, {"name": "code", "variable": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>"}, {"name": "file_staus", "variable": "<<b2f607a6-3e77-46cc-9c92-c9afd491cefe.outputs.status>>"}]}, "type": "end", "level": 4, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 1398.5186141421666, "y": 156.6292662597669}, "selected": false}, {"id": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "data": {"desc": "This is a file writing skill", "title": "File writing skill", "entitle": "Skill", "baseData": {"icon": "skill", "name": "File writing skill", "title": "File writing skill", "app_id": 1, "avatar": "xxx", "nickname": "xxx", "skill_id": 2, "description": "This is a file writing skill", "icon_background": ""}, "infoData": {"id": 2, "code": "{\\"python3\\":\\"import os\\\\n\\\\ndef write_to_file(filepath: str, content: str, mode=\'w\'):\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\n    Write content to a file specified by filepath.\\\\n\\\\n    Args:\\\\n    - filepath (str): The path to the file.\\\\n    - content (str): The content to write to the file.\\\\n    - mode (str, optional): The mode in which to open the file (\'w\' for write, \'a\' for append). Default is \'w\'.\\\\n\\\\n    Returns:\\\\n    - dict: A dictionary indicating the status of the operation.\\\\n            {\'status\': \'True\'} if successful, {\'status\': \'<error_message>\'} if an exception occurred.\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\n    try:\\\\n        storage_path = os.path.join(\'/storage\', filepath)\\\\n        with open(storage_path, mode, encoding=\'utf-8\') as file:\\\\n            file.write(content)\\\\n        return {\'status\': \'True\'}\\\\n    except Exception as e:\\\\n        return {\'status\': str(e)}\\"}", "name": "File writing skill", "app_id": 1, "config": null, "status": 1, "team_id": 1, "user_id": 1, "nickname": "xxx", "is_public": 1, "is_creator": 0, "description": "This is a file writing skill", "output_type": 4, "created_time": "2024-12-03T08:11:11", "dependencies": {"python3": []}, "updated_time": "2024-12-03T08:16:15", "publish_status": 1, "published_time": "2024-12-03T08:16:15", "input_variables": {"name": "output", "type": "object", "properties": {"content": {"name": "content", "type": "string", "value": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>", "required": true, "max_length": 0, "display_name": "File content"}, "filepath": {"name": "filepath", "type": "string", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>", "required": true, "max_length": 0, "display_name": "File path"}}, "display_name": "", "to_string_keys": ""}, "output_variables": {"name": "output", "type": "object", "properties": {"status": {"name": "status", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Status"}}, "display_name": "", "to_string_keys": ""}, "app_publish_status": 1}, "selected": false, "descTools": "This is an initial skill node description", "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial skill node description", "variable.content": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>", "variable.filepath": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>", "manual_confirmation": false}, "type": "skill", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 1091.4135643096388, "y": 59.64813858578333}, "selected": false}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', NULL, 0, NULL, '2024-12-02 15:22:27', '2024-12-14 14:14:32', 1),
	(12, 1, 1, 10, '{"nodes": [{"id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65", "data": {"type": "start", "title": "Start Node", "desc": "Input SQL, upload file", "input": {"name": "input_var", "type": "object", "properties": {"createTableSQL": {"name": "createTableSQL", "type": "string", "value": "", "display_name": "SQL statement to create a table", "required": true, "max_length": 0}, "headerRow": {"name": "headerRow", "type": "string", "value": "", "display_name": "The header row and a data row of an Excel file", "required": true, "max_length": 0}, "fileName": {"name": "fileName", "type": "string", "value": "", "display_name": "Generated code filename", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}, "output": {}, "requires_upload": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "7c314298-0e49-4f08-8fae-08a632662460", "data": {"type": "llm", "title": "LLM Extract fields", "desc": "Extract fields", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "Extract all fields from<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.createTableSQL>> and <<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.headerRow>>, and combine them into a dictionary with the structure: {table_name: [field_a: comment_a, field_b: comment_b], file: [field_a, field_b]}, where table_name is the table name. Return this dictionary in JSON format.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "data": {"type": "llm", "title": "LLM Python coding", "desc": "Python coding", "input": {"name": "input", "type": "object", "properties": {}}, "model_config_id": 3, "prompt": {"system": {"name": "system", "type": "string", "value": "Extract the fields \'table\' and \'file\' from <<7c314298-0e49-4f08-8fae-08a632662460.outputs.text>>, and write Python code based on the automatically identified field mapping. The code functionality is: compare the data from the database table with the data from the file to validate data integrity. Output only the code in markdown format.Code requirements:* Encapsulate the main functionality into a class.* Use pymysql to connect to the database.* The class constructor __init__ should define the database connection parameters.* Define the file path as the same directory as the script, directory name: files.* Parse the file to get the total number of rows (note that only rows after the header are valid) and calculate the main KPI summary.* Query the database table based on the file\'s data dimensions to get the total number of rows and the main KPI summary.* Print the comparison results.* The main logic should include code comments.* The file formats are xlsx, xls, or csv, and the code should automatically adapt to each format.* If the data includes a date dimension, the comparison validation should include the date.", "max_length": 0}, "user": null, "assistant": null}, "retrieval_task_datasets": [], "requires_upload": false, "wait_for_all_predecessors": false, "task_splitting": false, "manual_confirmation": false, "import_to_knowledge_base": {"input": false, "output": false}, "knowledge_base_mapping": {"input": {}, "output": {}}}, "flow_data": {}}, {"id": "60c16956-5800-4008-ba62-ee346efff606", "data": {"type": "end", "title": "End Node", "desc": "Finally return python code", "output": {"name": "output", "type": "object", "properties": {"file": {"name": "file", "type": "string", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>", "max_length": 0}, "code": {"name": "code", "type": "string", "value": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>", "max_length": 0}, "file_staus": {"name": "file_staus", "type": "string", "value": "<<b2f607a6-3e77-46cc-9c92-c9afd491cefe.outputs.status>>", "max_length": 0}}}, "wait_for_all_predecessors": true, "manual_confirmation": false}, "flow_data": {}}, {"id": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "data": {"type": "skill", "title": "File writing skill", "desc": "This is a file writing skill", "skill_id": 2, "input": {"name": "output", "type": "object", "properties": {"content": {"name": "content", "type": "string", "value": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>", "display_name": "File content", "required": true, "max_length": 0}, "filepath": {"name": "filepath", "type": "string", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>", "display_name": "File path", "required": true, "max_length": 0}}, "display_name": "", "to_string_keys": ""}, "output": {"name": "output", "type": "object", "properties": {"status": {"name": "status", "type": "string", "value": "", "display_name": "Status", "required": true, "max_length": 0}}, "display_name": "", "to_string_keys": ""}, "wait_for_all_predecessors": false, "manual_confirmation": false}, "flow_data": {}}], "edges": [{"id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65-7c314298-0e49-4f08-8fae-08a632662460-start", "level": 1, "source_node_id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65", "target_node_id": "7c314298-0e49-4f08-8fae-08a632662460", "source_node_type": "start", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "7c314298-0e49-4f08-8fae-08a632662460-bd40844a-cc9a-4b71-9472-282cb13f31b0-start_source", "level": 2, "source_node_id": "7c314298-0e49-4f08-8fae-08a632662460", "target_node_id": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "source_node_type": "llm", "target_node_type": "llm", "is_logical_branch": false, "views": {}}, {"id": "bd40844a-cc9a-4b71-9472-282cb13f31b0-b2f607a6-3e77-46cc-9c92-c9afd491cefe-start_source", "level": 3, "source_node_id": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "target_node_id": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "source_node_type": "llm", "target_node_type": "skill", "is_logical_branch": false, "views": {}}, {"id": "xy-edge__b2f607a6-3e77-46cc-9c92-c9afd491cefestart_source-60c16956-5800-4008-ba62-ee346efff606start_target", "level": 4, "source_node_id": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "target_node_id": "60c16956-5800-4008-ba62-ee346efff606", "source_node_type": "skill", "target_node_type": "end", "is_logical_branch": false, "views": {}}], "views": {"edges": [{"id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65-7c314298-0e49-4f08-8fae-08a632662460-start", "data": {"zindex": 0}, "level": 1, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "358b38f6-f32c-4fa5-a919-fcc6c670bb65", "target": "7c314298-0e49-4f08-8fae-08a632662460", "sourceType": "start", "targetType": "llm", "condition_id": null, "sourceHandle": "start", "is_logical_branch": false}, {"id": "7c314298-0e49-4f08-8fae-08a632662460-bd40844a-cc9a-4b71-9472-282cb13f31b0-start_source", "data": {"zindex": 0}, "level": 2, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "7c314298-0e49-4f08-8fae-08a632662460", "target": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "sourceType": "llm", "targetType": "llm", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "bd40844a-cc9a-4b71-9472-282cb13f31b0-b2f607a6-3e77-46cc-9c92-c9afd491cefe-start_source", "data": {"zindex": 10}, "level": 3, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "target": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "sourceType": "llm", "targetType": "skill", "condition_id": null, "sourceHandle": "start_source", "is_logical_branch": false}, {"id": "xy-edge__b2f607a6-3e77-46cc-9c92-c9afd491cefestart_source-60c16956-5800-4008-ba62-ee346efff606start_target", "data": {"zindex": 10}, "level": 4, "style": {"stroke": "#b1b1b7", "strokeWidth": 1}, "source": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "target": "60c16956-5800-4008-ba62-ee346efff606", "sourceType": "skill", "targetType": "end", "condition_id": null, "sourceHandle": "start_source", "targetHandle": "start_target", "is_logical_branch": false}], "nodes": [{"id": "358b38f6-f32c-4fa5-a919-fcc6c670bb65", "data": {"desc": "Input SQL, upload file", "title": "Start Node", "entitle": "Start Node", "selected": false, "descTools": "This is an initial start node description", "variables": {"value": [{"name": "createTableSQL", "type": "string", "required": true, "display_name": "SQL statement to create a table"}, {"name": "headerRow", "type": "string", "required": true, "display_name": "The header row and a data row of an Excel file"}, {"name": "fileName", "type": "string", "required": true, "display_name": "Generated code filename"}], "free": {"name": "input_var", "type": "object", "properties": {"createTableSQL": {"name": "createTableSQL", "type": "string", "value": "", "display_name": "SQL statement to create a table", "required": true, "max_length": 0}, "headerRow": {"name": "headerRow", "type": "string", "value": "", "display_name": "The header row and a data row of an Excel file", "required": true, "max_length": 0}, "fileName": {"name": "fileName", "type": "string", "value": "", "display_name": "Generated code filename", "required": true, "max_length": 0}}, "display_name": "Input Object Variable"}}, "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial start node description"}, "type": "start", "level": 0, "measured": {"width": 270, "height": 188}, "position": {"x": 100, "y": 100}, "selected": false}, {"id": "7c314298-0e49-4f08-8fae-08a632662460", "data": {"desc": "Extract fields", "title": "LLM Extract fields", "entitle": "LLM", "selected": false, "descTools": "Invoke large language models to answer questions or handle tasks", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "Extract all fields from"}, {"id": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.createTableSQL>>", "base": {"id": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.createTableSQL>>", "name": "Start Node.createTableSQL", "type": "start", "label": "Start Node.createTableSQL", "title": "Start Node", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.createTableSQL>>", "createVar": {"name": "createTableSQL", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "SQL statement to create a table"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.createTableSQL"}, {"text": " and "}, {"id": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.headerRow>>", "base": {"id": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.headerRow>>", "name": "Start Node.headerRow", "type": "start", "label": "Start Node.headerRow", "title": "Start Node", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.headerRow>>", "createVar": {"name": "headerRow", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "The header row and a data row of an Excel file"}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "Start Node.headerRow"}, {"text": ", and combine them into a dictionary with the structure: {table_name: [field_a: comment_a, field_b: comment_b], file: [field_a, field_b]}, where table_name is the table name. Return this dictionary in JSON format."}]}]}, "type": "llm", "level": 1, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 436, "y": 55}, "selected": false}, {"id": "bd40844a-cc9a-4b71-9472-282cb13f31b0", "data": {"desc": "Python coding", "title": "LLM Python coding", "entitle": "LLM", "selected": false, "descTools": "Invoke large language models to answer questions or handle tasks", "outputInfo": {"key": "text", "base": true, "type": "string"}, "endescTools": "Invoke large language models to answer questions or handle tasks", "systemEditor": [{"type": "paragraph", "children": [{"text": "Extract the fields \'table\' and \'file\' from "}, {"id": "<<7c314298-0e49-4f08-8fae-08a632662460.outputs.text>>", "base": {"id": "<<7c314298-0e49-4f08-8fae-08a632662460.outputs.text>>", "name": "LLM Extract fields.text", "type": "llm", "label": "LLM Extract fields.text", "title": "LLM Extract fields", "value": "<<7c314298-0e49-4f08-8fae-08a632662460.outputs.text>>", "createVar": {"name": "text", "type": "string", "value": null, "max_length": 0}}, "type": "mention", "children": [{"bold": true, "text": "11111"}], "character": "LLM Extract fields.text"}, {"text": ", and write Python code based on the automatically identified field mapping. The code functionality is: compare the data from the database table with the data from the file to validate data integrity. Output only the code in markdown format."}]}, {"type": "paragraph", "children": [{"text": ""}]}, {"type": "paragraph", "children": [{"text": "Code requirements:"}]}, {"type": "paragraph", "children": [{"text": "* Encapsulate the main functionality into a class."}]}, {"type": "paragraph", "children": [{"text": "* Use pymysql to connect to the database."}]}, {"type": "paragraph", "children": [{"text": "* The class constructor __init__ should define the database connection parameters."}]}, {"type": "paragraph", "children": [{"text": "* Define the file path as the same directory as the script, directory name: files."}]}, {"type": "paragraph", "children": [{"text": "* Parse the file to get the total number of rows (note that only rows after the header are valid) and calculate the main KPI summary."}]}, {"type": "paragraph", "children": [{"text": "* Query the database table based on the file\'s data dimensions to get the total number of rows and the main KPI summary."}]}, {"type": "paragraph", "children": [{"text": "* Print the comparison results."}]}, {"type": "paragraph", "children": [{"text": "* The main logic should include code comments."}]}, {"type": "paragraph", "children": [{"text": "* The file formats are xlsx, xls, or csv, and the code should automatically adapt to each format."}]}, {"type": "paragraph", "children": [{"text": "* If the data includes a date dimension, the comparison validation should include the date."}]}]}, "type": "llm", "level": 2, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 772.4135643096389, "y": 173.64813858578333}, "selected": false}, {"id": "60c16956-5800-4008-ba62-ee346efff606", "data": {"desc": "Finally return python code", "title": "End Node", "entitle": "End Node", "selected": false, "descTools": "Define the end of a workflow process and output result content", "endescTools": "Define the end of a workflow process and output result content", "input_variables": [{"name": "file", "variable": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>"}, {"name": "code", "variable": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>"}, {"name": "file_staus", "variable": "<<b2f607a6-3e77-46cc-9c92-c9afd491cefe.outputs.status>>"}]}, "type": "end", "level": 4, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 1398.5186141421666, "y": 156.6292662597669}, "selected": false}, {"id": "b2f607a6-3e77-46cc-9c92-c9afd491cefe", "data": {"desc": "This is a file writing skill", "title": "File writing skill", "entitle": "Skill", "baseData": {"icon": "skill", "name": "File writing skill", "title": "File writing skill", "app_id": 1, "avatar": "xxx", "nickname": "xxx", "skill_id": 2, "description": "This is a file writing skill", "icon_background": ""}, "infoData": {"id": 2, "code": "{\\"python3\\":\\"import os\\\\n\\\\ndef write_to_file(filepath: str, content: str, mode=\'w\'):\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\n    Write content to a file specified by filepath.\\\\n\\\\n    Args:\\\\n    - filepath (str): The path to the file.\\\\n    - content (str): The content to write to the file.\\\\n    - mode (str, optional): The mode in which to open the file (\'w\' for write, \'a\' for append). Default is \'w\'.\\\\n\\\\n    Returns:\\\\n    - dict: A dictionary indicating the status of the operation.\\\\n            {\'status\': \'True\'} if successful, {\'status\': \'<error_message>\'} if an exception occurred.\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\n    try:\\\\n        storage_path = os.path.join(\'/storage\', filepath)\\\\n        with open(storage_path, mode, encoding=\'utf-8\') as file:\\\\n            file.write(content)\\\\n        return {\'status\': \'True\'}\\\\n    except Exception as e:\\\\n        return {\'status\': str(e)}\\"}", "name": "File writing skill", "app_id": 1, "config": null, "status": 1, "team_id": 1, "user_id": 1, "nickname": "xxx", "is_public": 1, "is_creator": 0, "description": "This is a file writing skill", "output_type": 4, "created_time": "2024-12-03T08:11:11", "dependencies": {"python3": []}, "updated_time": "2024-12-03T08:16:15", "publish_status": 1, "published_time": "2024-12-03T08:16:15", "input_variables": {"name": "output", "type": "object", "properties": {"content": {"name": "content", "type": "string", "value": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>", "required": true, "max_length": 0, "display_name": "File content"}, "filepath": {"name": "filepath", "type": "string", "value": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>", "required": true, "max_length": 0, "display_name": "File path"}}, "display_name": "", "to_string_keys": ""}, "output_variables": {"name": "output", "type": "object", "properties": {"status": {"name": "status", "type": "string", "value": "", "required": true, "max_length": 0, "display_name": "Status"}}, "display_name": "", "to_string_keys": ""}, "app_publish_status": 1}, "selected": false, "descTools": "This is an initial skill node description", "outputInfo": {"key": "output", "base": false, "type": "object"}, "endescTools": "This is an initial skill node description", "variable.content": "<<bd40844a-cc9a-4b71-9472-282cb13f31b0.outputs.text>>", "variable.filepath": "<<358b38f6-f32c-4fa5-a919-fcc6c670bb65.outputs.fileName>>", "manual_confirmation": false}, "type": "skill", "level": 3, "dragging": false, "measured": {"width": 270, "height": 84}, "position": {"x": 1091.4135643096388, "y": 59.64813858578333}, "selected": false}], "viewPort": {"x": 0, "y": 0, "zoom": 1}}}', 'null', 1, '2024-12-14 14:07:20', '2024-12-06 10:24:16', '2024-12-14 14:07:20', 1);

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
